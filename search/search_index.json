{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>\u5e38\u7528\u4ee3\u7801\u7247\u6bb5\uff0c\u67e5\u770b\u65e7\u7248</p>"},{"location":"BEAM/elixir/base/","title":"Base","text":""},{"location":"BEAM/elixir/base/#_1","title":"\u547d\u4ee4\u884c","text":"<pre><code># \u5e2e\u52a9\niex&gt; h\niex&gt; h Enum\niex&gt; h IEx\n\n# \u67e5\u770b\u7c7b\u578b\niex&gt; i\niex&gt; i 10\niex&gt; i %{a: 1}\n\n# \u7f16\u8bd1\u548c\u6267\u884c\u6587\u4ef6\n\niex&gt; c \"hello.exs\"\n</code></pre>"},{"location":"BEAM/elixir/base/#pattern-matching","title":"\u6a21\u5f0f\u5339\u914d(pattern matching)","text":"<pre><code># \u6b63\u5e38\u5339\u914d\niex(8)&gt; list  = [1, 2, 3]\n[1, 2, 3]\niex(9)&gt; [a, b, c] = list\n[1, 2, 3]\niex(10)&gt; a\n1\niex(11)&gt; b\n2\niex(12)&gt; c\n3\n\n# \u9519\u8bef\u5339\u914d\niex&gt; list = [1, 2, 3]\n[1, 2, 3]\niex&gt; [a, 1, b ] = list\n** (MatchError) no match of right hand side value: [1, 2, 3]\n\n# \u5ffd\u7565\n\niex&gt; [1, _, _] = [1, 2, 3]\n\n# \u4e0d\u53ef\u53d8(bind once/per macth)\niex(25)&gt; [a, a] = [1, 1]\n[1, 1]\niex(26)&gt; a\n1\niex(27)&gt; [b, b] = [1, 2]\n** (MatchError) no match of right hand side value: [1, 2]\n    (stdlib 5.2.1) erl_eval.erl:498: :erl_eval.expr/6\n    iex:27: (file)\n\n# \u4e0d\u53ef\u53d8\u9501\u5b9a\niex(38)&gt; a = 2\n2\niex(39)&gt; [^a, 2, 3] = [1, 2, 3]\n** (MatchError) no match of right hand side value: [1, 2, 3]\n    (stdlib 5.2.1) erl_eval.erl:498: :erl_eval.expr/6\n    iex:39: (file)\niex(39)&gt; a\n2\n</code></pre>"},{"location":"BEAM/elixir/base/#immutability","title":"\u4e0d\u53ef\u53d8\u6027(immutability)","text":"<p>\u6ca1\u7528erlang\u91cc\u9762\u90a3\u4e48\u53d8\u6001\uff0c\u4f46\u51fd\u6570\u5f0f\u7f16\u7a0b\u601d\u60f3\u4e00\u81f4</p> <pre><code>iex(48)&gt; list = [3, 2, 1]\n[3, 2, 1]\niex(49)&gt; list2 = [4 | list]\n[4, 3, 2, 1]\niex(50)&gt; name = \"elixir\"\n\"elixir\"\niex(51)&gt; name1 = String.capitalize name\n\"Elixir\" \niex(52)&gt; name\n\"elixir\"\n</code></pre>"},{"location":"BEAM/elixir/base/#basics","title":"\u57fa\u672c\u7c7b\u578b basics","text":"<pre><code># integers and float\n\niex(56)&gt; 1234\n1234\niex(57)&gt; 10_000\n10000\niex(58)&gt; 1_0000\n10000\niex(59)&gt; 1.0\n1.0\niex(60)&gt; 3.1415923\n3.1415923\niex(61)&gt; 0.314159e1\n3.14159\n\n# atom\n\niex&gt; :abc\n\n# regex\n\niex(68)&gt; Regex.run ~r{[aeiou]}, \"cateprillar\"\n[\"a\"]\niex(69)&gt; Regex.scan ~r{[aeiou]}, \"cateprillar\"\n[[\"a\"], [\"e\"], [\"i\"], [\"a\"]]\niex(70)&gt; Regex.split ~r{[aeiou]}, \"cateprillar\"\n[\"c\", \"t\", \"pr\", \"ll\", \"r\"]\niex(71)&gt; Regex.replace ~r{[aeiou]}, \"cateprillar\", \"*\"\n\"c*t*pr*ll*r\"\n\n# tuples\niex(72)&gt; {1, 2}\n{1, 2}\niex(73)&gt; {:ok, 42, \"next\"}\n{:ok, 42, \"next\"}\n\n# list\niex(2)&gt; [1, 2, 3] ++ [4, 5, 6]\n[1, 2, 3, 4, 5, 6]\niex(3)&gt; [1, 2, 3] -- [2, 4]\n[1, 3]\niex(4)&gt; 1 in [1, 2]\ntrue\niex(5)&gt; \"wombat\" in [1]\nfalse\niex(6)&gt;\n\n# keyword list\niex(7)&gt; [name: \"a\", city: \"d\"]\n[name: \"a\", city: \"d\"]\niex(8)&gt; [{:name, \"a\"}, {:city, \"d\"}]\n[name: \"a\", city: \"d\"]\n\n# map\niex(10)&gt; states = %{\"key\" =&gt; 1}\niex(15)&gt; states = %{\"k\" =&gt; \"s\"}\n%{\"k\" =&gt; \"s\"}\niex(16)&gt; resp = %{{:error, :enoent} =&gt; :fatal, {:error, :busy} =&gt; :retry}\n%{{:error, :busy} =&gt; :retry, {:error, :enoent} =&gt; :fatal}\niex(17)&gt; colors = %{:red =&gt; 0xff0000, :green =&gt; 0x00ff00, :blue =&gt; 0x0000ff}\n%{green: 65280, red: 16711680, blue: 255}\niex(19)&gt; colora = %{red: 0xff0000, green: 0x00ff00,  blue: 0x0000ff}\n%{green: 65280, red: 16711680, blue: 255}\n\n# map\u53d6\u503c\niex(2)&gt; state = %{\"a\" =&gt; 1, :a =&gt; 2}\n%{:a =&gt; 2, \"a\" =&gt; 1}\niex(3)&gt; state[\"a\"]\n1\niex(4)&gt; state[:a]\n2\n</code></pre>"},{"location":"BEAM/elixir/base/#_2","title":"\u533f\u540d\u51fd\u6570","text":"<pre><code>iex(11)&gt; sum = fn(a,b) -&gt; a+b end\n#Function&lt;41.105768164/2 in :erl_eval.expr/6&gt;\niex(12)&gt; sum.(1,2)\n3\n\niex(15)&gt; h = fn -&gt; IO.puts \"H\" end\n#Function&lt;43.105768164/0 in :erl_eval.expr/6&gt;\niex(16)&gt; h.()\nH\n:ok\niex(17)&gt; swap = fn {a, b} -&gt; {b, a} end\n#Function&lt;42.105768164/1 in :erl_eval.expr/6&gt;\niex(18)&gt; swap.({1, 2})\n{2, 1}\n\n# \u95ed\u5305\niex(19)&gt; fun1 = fn -&gt; (fn -&gt; \"h\" end) end\n#Function&lt;43.105768164/0 in :erl_eval.expr/6&gt;\niex(20)&gt; fun2 = fun1.()\n#Function&lt;43.105768164/0 in :erl_eval.expr/6&gt;\niex(21)&gt; fun2.()\n\"h\"\niex(22)&gt; fun1.().()\n\"h\"\n</code></pre>"},{"location":"BEAM/elixir/base/#_3","title":"\u6570\u636e\u6269\u5c55","text":"<pre><code>defmodule Cat do\n  defstruct name: \"\", age: 0\n  def log(cat = %Cat{}) do\n    IO.inspect(cat)\n  end\nend\n\ncat = %Cat{name: \"ca\", age: 1}\nCat.log(cat)\n</code></pre>"},{"location":"BEAM/elixir/base/#binaries","title":"Binaries","text":"<p>elixir \u6709\u5b57\u7b26\u4e32\u7c7b\u578b, \u533a\u5206\u5355\u53cc\u5f15\u53f7</p> <pre><code>iex(43)&gt; b = &lt;&lt;1,2,3&gt;&gt;\n&lt;&lt;1, 2, 3&gt;&gt;\niex(44)&gt; byte_size b\n3\niex(45)&gt; bit_size b\n24\n\niex&gt; b = &lt;&lt; 1::size(2), 1::size(3) &gt;&gt; # 01 001\n&lt;&lt;9::size(5)&gt;&gt;                        # = 9 (base 10)\niex&gt; byte_size b\n1\niex&gt; bit_size b\n5\n</code></pre>"},{"location":"BEAM/elixir/base/#spawn","title":"spawn","text":"spawn.exs<pre><code>defmodule Spawn do\n  def greet do\n    receive do\n      {sender, msg} -&gt;\n        send(sender, {:ok, \"hello #{msg}\"})\n\n        # \u5982\u679c\u4e0d\u5faa\u73af\uff0c\u53ea\u63a5\u53d7\u4e00\u6b21\n        greet()\n    end\n  end\nend\n\npid = spawn(Spawn, :greet, [])\nsend(pid, {self(), \"word\"})\n\nreceive do\n  {:ok, message} -&gt;\n    IO.puts(message)\nend\n\nsend(pid, {self(), \"Goze\"})\n\nreceive do\n  {:ok, message} -&gt;\n    IO.puts(message)\nafter\n  500 -&gt;\n    IO.puts(\"timeout\")\nend\n</code></pre>"},{"location":"BEAM/elixir/base/#link","title":"link","text":"link.exs<pre><code>defmodule Link do\n  import :timer, only: [sleep: 1]\n\n  def sad_function do\n    sleep(500)\n    exit(:boom)\n  end\n\n  def run do\n    # Process.flag(:trap_exit, true)\n    # spawn_link(Link, :sad_function, [])\n\n    res = spawn_monitor(Link, :sad_function, [])\n    IO.puts inspect(res)\n    receive do\n      msg -&gt;\n        IO.puts(\"Message receive: #{inspect(msg)}\")\n    after\n      1000 -&gt;\n        IO.puts(\"timeout\")\n    end\n  end\nend\n</code></pre>"},{"location":"BEAM/erlang/erlang/","title":"Erlang","text":""},{"location":"BEAM/erlang/erlang/#actor","title":"actor \u6a21\u578b","text":"<p>https://www.youtube.com/watch?v=ELwEdb_pD0k</p>"},{"location":"BEAM/erlang/erlang/#_1","title":"\u8d44\u6599","text":"<ul> <li>https://learnyousomeerlang.com/</li> <li>https://www.erlang-in-anger.com/</li> <li>https://adoptingerlang.org/</li> </ul>"},{"location":"BEAM/erlang/file/","title":"File","text":"<p>https://www.erlang.org/doc/apps/kernel/file.html</p> file_examples.erl<pre><code>-module(file_examples).\n\n-export([read_all_std/0, read_open/0, read_line/0, read_bin/0, write_file/0]).\n\n-define(TEST_FILE, \"data.dat\").\n\nwrite_file() -&gt;\n    case file:open(?TEST_FILE, write) of\n        {ok, S} -&gt;\n            io:format(S, \"~p.~n\", [{cat, \"nini\"}]),\n            io:format(S, \"~p.~n\", [{dog, \"kk\"}]),\n            file:close(S);\n        {error, Why} -&gt;\n            {error, Why}\n    end.\n\n\n% \u8bfb\u53d6\u6240\u6709\nread_all_std()-&gt;\n    {ok, S} = file:consult(?TEST_FILE),\n    io:format(\"~p\", [S]).\n\n\nrr(S) -&gt;\n    case io:read(S, '') of \n        % \u8bfb\u53d6\u7b2c\u4e00\u90e8\u5206\n        {ok, Term} -&gt; [Term];\n        % \u8bfb\u53d6\u6574\u4e2a\n        % {ok, Term} -&gt; [Term | rr(S)];\n        eof -&gt;  [];\n        Error -&gt; Error\n    end.\n\n% \u5206\u6b21\u8bfb\u53d6\nread_open()-&gt;\n    case file:open(?TEST_FILE, read) of \n        {ok, S} -&gt;\n            Val = rr(S),\n            file:close(S),\n            {ok, Val};\n        {error, Why} -&gt;\n            {error, Why}\n    end.\n\n\n% \u6309\u884c\u8bfb\u53d6\nread_line() -&gt;\n    case file:open(?TEST_FILE, read) of\n        {ok, S} -&gt;\n            L1 = io:get_line(S, ''),\n            L2 = io:get_line(S, ''),\n            file:close(S),\n            {ok, [L1, L2]};\n        {error, Why} -&gt;\n            {error, Why}\n    end.\n\n% \u8bfb\u53d6\u4e8c\u8fdb\u5236\nread_bin() -&gt;\n    case file:read_file(?TEST_FILE) of\n        {ok, B} -&gt;\n            {ok, B};\n        {error, Why} -&gt;\n            {error, Why}\n    end.\n</code></pre>"},{"location":"BEAM/erlang/rebar3/","title":"Rebar3","text":"<p>https://rebar3.org/</p>"},{"location":"BEAM/erlang/rebar3/#new","title":"new","text":"<pre><code>rebar3 new app demo\n</code></pre>"},{"location":"BEAM/erlang/rebar3/#run-shell","title":"run shell","text":"<pre><code>rebar3 shell\n\n# compile\nr3:do(compile).\n</code></pre>"},{"location":"BEAM/erlang/rebar3/#dependenies","title":"dependenies","text":"<pre><code>rebar3 get-deps\n</code></pre>"},{"location":"BEAM/erlang/socket/","title":"Socket","text":"<p>https://www.erlang.org/doc/apps/kernel/gen_tcp.html</p> socket_examples.erl<pre><code>-module(socket_examples).\n\n-export([nano_get_url/0, start_nano_server/0,  nano_client_eval/1, start_parallel_server/0, error_test/0, start_udp_server/0, udp_client/1]).\n\n-define(TEST_HOST, \"www.erlang.org\").\n\n% \u4ece\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\nnano_get_url() -&gt;\n    nano_get_url(?TEST_HOST).\n\nnano_get_url(Host) -&gt;\n    {ok, Socket} = gen_tcp:connect(Host, 80, [binary, {packet, 0}]),\n    ok = gen_tcp:send(Socket, \"GET / HTTP/1.0\\r\\n\\r\\n\"),\n    receive_data(Socket, []).\n    % \u683c\u5f0f\u5316\u8f93\u51fa\n    %  string:tokens(binary_to_list(receive_data(Socket, [])), \"\\r\\n\").\n\nreceive_data(Socket, SoFar) -&gt;\n    receive\n        {tcp, Socket, Bin} -&gt;\n            receive_data(Socket, [Bin|SoFar]);\n        {tcp_closed, Socket} -&gt;\n            list_to_binary(lists:reverse(SoFar))\n    end.\n\n\n% \u4e00\u4e2a\u7b80\u5355\u7684TCP\u670d\u52a1\u5668\nstart_nano_server() -&gt;\n    {ok, Listen} = gen_tcp:listen(2345, [binary, {packet,4}, {reuseaddr, true}, {active, true}]),\n    % \u6536\u5230\u6d88\u606f\uff0c\u8fd4\u56de\u6d88\u606f\u540e\u4f1a\u7acb\u523b\u9000\u51fa\n    % {ok, Socket} = gen_tcp:accept(Listen),\n    % gen_tcp:close(Listen),\n    % loop(Socket).\n\n    % \u987a\u5e8f\uff1a\u4e00\u6b21\u63a5\u53d7\u4e00\u4e2a\n    seq_loop(Listen).\n\nseq_loop(Listen) -&gt;\n    {ok, Socket} = gen_tcp:accept(Listen),\n    loop(Socket),\n    seq_loop(Listen).\n\nloop(Socket) -&gt;\n    receive\n        {tcp, Socket, Bin} -&gt;\n            io:format(\"Server receive binary = ~p~n\", [Bin]),\n            Str = binary_to_term(Bin),\n            io:format(\"Server (unpackaed) ~p~n\", [Str]),\n            Reply = string:to_upper(Str),\n            io:format(\"Server replying = ~p~n\", [Reply]),\n            gen_tcp:send(Socket, term_to_binary(Reply)),\n            loop(Socket);\n        {tcp_closed, Socket} -&gt;\n            io:format(\"Server socket closed~n\")\n    end.\nnano_client_eval(Str) -&gt;\n    {ok, Socket} = gen_tcp:connect(\"localhost\", 2345, [binary, {packet, 4}]),\n    ok = gen_tcp:send(Socket, term_to_binary(Str)),\n    receive\n        {tcp, Socket, Bin} -&gt;\n            io:format(\"Client received binary = ~p~n\", [Bin]),\n            Val = binary_to_term(Bin),\n            io:format(\"client recieved result = ~p~n\", [Val]),\n            gen_tcp:close(Socket)\n    end.\n\n% \u5e76\u884c: \u540c\u65f6 \u63a5\u53d7\u591a\u4e2a\u5e76\u884c\u8fde\u63a5\nstart_parallel_server() -&gt;\n    {ok, Listen} = gen_tcp:listen(2345, [binary, {packet,4}, {reuseaddr, true}, {active, true}]),\n    spawn(fun() -&gt; par_connect(Listen) end).\n\npar_connect(Listen) -&gt;\n    {ok, Socket} = gen_tcp:accept(Listen),\n    spawn(fun() -&gt; par_connect(Listen) end),\n    loop(Socket).\n\n% \u5f02\u5e38\u5904\u7406\nerror_test() -&gt;\n    spawn(fun() -&gt; error_test_server() end),\n    timer:sleep(2000),\n    {ok, Socket} = gen_tcp:connect(\"localhost\", 4321, [binary, {packet, 4}]),\n    io:format(\"connect: ~p~n\", [Socket]),\n    gen_tcp:send(Socket, &lt;&lt;\"1234\"&gt;&gt;),\n    receive\n        Any -&gt;\n            io:format(\"Any=~p~n\", [Any])\n    end.\n\nerror_test_server() -&gt;\n    {ok, Listen} = gen_tcp:listen(4321, [binary, {packet,2}]),\n    {ok, Socket} = gen_tcp:accept(Listen),\n    error_test_server_loop(Socket).\n\nerror_test_server_loop(Socket) -&gt;\n    receive\n        {tcp, Socket, Data} -&gt;\n            io:format(\"receive: ~p~n\", [Data]),\n            _ = atom_to_list(Data),\n            error_test_server_loop(Socket)\n    end.\n\n\n% \u4e00\u4e2a\u7b80\u5355\u7684udp\n\nstart_udp_server() -&gt;\n    spawn(fun() -&gt; udp_server(4000) end).\nudp_server(Port) -&gt;\n    {ok, Socket}= gen_udp:open(Port, [binary]),\n    io:format(\"Server open udp ~p ~n\", [Socket]),\n    udp_loop(Socket).\n\nudp_loop(Socket) -&gt;\n    receive\n        {udp, Socket, Host, Port, Bin} = Msg -&gt;\n            io:format(\"server receive ~p~n\", [Msg]),\n            N= binary_to_term(Bin),\n            Fac = fac(N),\n            gen_udp:send(Socket, Host, Port, term_to_binary(Fac)),\n            udp_loop(Socket)\n    end.\n\nfac(0) -&gt; 1;\nfac(N) -&gt; N * fac(N-1).\n\nudp_client(N) -&gt;\n    {ok, Socket} = gen_udp:open(0, [binary]),\n    io:format(\"clientopn ~p~n\", [Socket]),\n    ok = gen_udp:send(Socket, \"localhost\", 4000, term_to_binary(N)),\n    Value = receive\n                {udp, Socket, _, _, Bin} = Msg -&gt;\n                    io:format(\"clienr receive ~p~n\", [Msg]),\n                    binary_to_term(Bin)\n            after 2000 -&gt;\n                    0\n            end,\n    gen_udp:close(Socket),\n    Value.\n</code></pre>"},{"location":"bash/jenkins/","title":"Jenkins","text":""},{"location":"bash/jenkins/#jenkins","title":"\u8fd0\u884cjenkins","text":"run_jenkins.sh<pre><code>#!/bin/bash\n\nexport JENKINS_USER=root\nexport JENKINS_HOME=/usr/local/src/jenkins_home\nnohup /usr/local/java/jdk1.8.0_191/bin/java -jar /usr/local/src/jenkins.war --httpPort=8100 &amp;\n</code></pre>"},{"location":"bash/jenkins/#java","title":"\u7f16\u8bd1 java \u9879\u76ee","text":"<pre><code>export MAVEN_HOME=/usr/local/maven/apache-maven-3.6.3/\nexport JAVA_HOME=/usr/local/java/jdk1.8.0_191/\n\n/usr/local/maven/apache-maven-3.6.3/bin/mvn clean package -Dmaven.test.skip=true\n\n\nscp -r ./target/workflow-serve-1.0.0-SNAPSHOT.jar root@0.0.0.0:/home/workflow/\n</code></pre>"},{"location":"bash/npm%E5%8C%85%E4%B8%8B%E8%BD%BD/","title":"Npm\u5305\u4e0b\u8f7d","text":""},{"location":"bash/npm%E5%8C%85%E4%B8%8B%E8%BD%BD/#npm","title":"npm \u5305\u4e0b\u8f7d","text":"npm.bash<pre><code>#!/bin/bash\nnpm_registry=\"https://registry.npmmirror.com\"\noutput=\".\"\n\ndownload_package() {\n    wget -qO- $npm_registry/$1/-/$1-$2.tgz \\\n        | tar -xzv \\\n        &amp;&amp; mv package $output/$1-$2\n}\n\ndownload_package \"moment\" \"2.30.1\"\ndownload_package \"lodash\" \"4.17.21\"\n</code></pre>"},{"location":"bash/npm%E5%8C%85%E4%B8%8B%E8%BD%BD/#_1","title":"\u5176\u4ed6","text":"<ul> <li>npm \u547d\u4ee4</li> <li>download-package-tarball</li> </ul>"},{"location":"bash/oh-my-posh/","title":"Oh my posh","text":""},{"location":"bash/oh-my-posh/#windows","title":"windows\u7cfb\u7edf\u5b89\u88c5","text":"<p>\u4e3b\u8981\u662fterminal + posh + \u5b57\u4f53</p>"},{"location":"bash/oh-my-posh/#_1","title":"\u4e0b\u8f7d","text":"<p>https://github.com/microsoft/terminal/releases https://github.com/JanDeDobbeleer/oh-my-posh/releases https://ohmyposh.dev/docs/installation/fonts</p>"},{"location":"bash/oh-my-posh/#_2","title":"\u81ea\u5b9a\u4e49\u914d\u7f6e","text":"<p>https://ohmyposh.dev/docs/installation/customize</p>"},{"location":"bash/oh-my-posh/#terminal","title":"terminal \u6dfb\u52a0\u53f3\u952e","text":"<p>https://github.com/microsoft/terminal/issues/1060#issuecomment-497539461</p>"},{"location":"bash/pssh/","title":"Pssh","text":""},{"location":"bash/pssh/#pssh","title":"pssh","text":"<p>\u6279\u91cfssh\uff0c\u611f\u89c9\u6548\u679c\u4e0d\u597d</p> <ul> <li>Parallel ssh (parallel-ssh, upstream calls it pssh), executes commands on     multiple hosts in parallel</li> <li>Parallel scp (parallel-scp, upstream calls it pscp), copies files to     multiple remote hosts in parallel</li> <li>Parallel rsync (parallel-rsync, upstream calls it prsync), efficiently     copies files to multiple hosts in parallel</li> <li>Parallel nuke (parallel-nuke, upstream calls it pnuke), kills processes on     multiple remote hosts in parallel</li> <li>Parallel slurp (parallel-slurp, upstream calls it pslurp), copies files     from multiple remote hosts to a central host in parallel</li> </ul> host.txt<pre><code>10.0.2.5\n10.0.2.6\n10.0.2.7\n</code></pre>"},{"location":"bash/pssh/#_1","title":"\u4f20\u8f93\u6587\u4ef6","text":"<pre><code>parallel-scp -h host.txt -l root ./main /root/main\n</code></pre>"},{"location":"bash/pssh/#bash","title":"bash\u6267\u884c","text":"<pre><code>parallel-ssh -h host.txt -l root \"nohup /root/main &gt; /dev/null 2&gt;&amp;1 &amp;\"\n</code></pre>"},{"location":"bash/pssh/#_2","title":"\u6740\u6b7b\u8fdb\u7a0b","text":"<pre><code>parallel-nuke -v -h ./host.txt -l root main\n</code></pre>"},{"location":"bash/select/","title":"Select","text":""},{"location":"bash/select/#_1","title":"\u9009\u62e9\u793a\u4f8b","text":"select.bash<pre><code>#!/bin/bash\nPS3=\"Select item please:\"\n\nitems=(\"Item 1\" \"Item 2\" \"Item 3\")\n\nselect item in \"${items[@]}\" Quit\ndo\n    case $REPLY in\n        1)\n            echo \"#$REPLY $item\"\n            ;;\n        2)\n            echo \"#$REPLY $item\"\n            ;;\n        3)  \n            echo \"#$REPLY $item\"\n            ;;\n\n        $((${#items[@]}+1)))\n            echo \"We're done!\";\n            break\n            ;;\n        *)\n            echo \"$((${#items[@]}+1))\"\n            echo \"Ooops - unknown choice $REPLY\"\n            ;;\n    esac\ndone\n</code></pre>"},{"location":"bash/ssh/","title":"Ssh","text":""},{"location":"bash/ssh/#_1","title":"\u5b66\u4e60","text":"<p>https://www.ssh.com/academy</p> <p>https://linuxize.com/post/using-the-ssh-config-file/</p>"},{"location":"bash/ssh/#ssh-keygen","title":"ssh keygen","text":"<pre><code>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n</code></pre>"},{"location":"bash/ssh/#ssh-copy","title":"ssh copy","text":"<pre><code>ssh-copy-id root@host\n</code></pre>"},{"location":"bash/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/","title":"\u4e0a\u4f20\u6587\u4ef6","text":"<p>\u4e0a\u4f20\u6587\u4ef6\u5230\u670d\u52a1\u5668\u76ee\u5f55\uff0c\u81ea\u52a8\u8f93\u5165\u5bc6\u7801</p> <pre><code>#!/usr/bin/expect -f\n\n# \u589e\u52a0\u6743\u9650\n# chmod +x scp.sh\n# \u6267\u884c\n# ./scp.sh\n\n# \u672c\u5730\u76ee\u5f55 ./dist\nspawn bash -c \"scp -r ./dist root@IP:/var/www/html\"\n\n# \u53ef\u4ee5\u4f7f\u7528rsync\n# rsync -avz ${LOCAL_DIR}/ ${REMOTE_HOST}:${REMOTE_DIR}\n\nexpect {\n  -re \".*es.*o.*\" {\n    exp_send \"yes\\r\"\n    exp_continue\n  }\n  -re \".*sword.*\" {\n    exp_send \"PASSWORD\\r\"\n  }\n}\ninteract\n</code></pre>"},{"location":"bash/%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/","title":"\u538b\u7f29\u6587\u4ef6","text":""},{"location":"bash/%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/#zip","title":"zip \u538b\u7f29","text":"<p>\u904d\u5386\u76ee\u5f55\uff0c\u5c06\u76ee\u5f55\u538b\u7f29\u6210 zip\uff0c\u6587\u4ef6\u540d\u4e3a\u76ee\u5f55\u540d</p> <pre><code>#!/bin/bash\n\n###\n# \u63cf\u8ff0\uff1a\u904d\u5386\u76ee\u5f55\uff0c\u5c06\u6587\u4ef6\u5939\u6253\u5305\u6210zip\uff0c\u4e0a\u4f20cms\n# \u8fd0\u884c\uff1ash zip.sh\n# \u73af\u5883\uff1a\u9700\u652f\u6301bash\u548czip\u547d\u4ee4\n###\n\n# verbose \u65e5\u5fd7\nset -ex\n\ncwd=`pwd`\n\nfor file in `ls $cwd`\ndo\n    if [ -d $cwd\"/\"$file ] ;then\n        cd $file\n        # -x \u6392\u9664\u6587\u4ef6\n        zip $file.zip -r ./* -x '*.zip*'\n        # \u5982\u679c\u5c06zip\u5305\u79fb\u52a8\u51fa\u6765\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u79fb\u52a8\u51fa\u6765\n        mv $file.zip ../\n        cd ..\n    fi\ndone\n</code></pre>"},{"location":"bash/%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/","title":"\u5907\u4efd\u548c\u6062\u590d","text":""},{"location":"bash/%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/#linux","title":"Linux \u6587\u4ef6\u5907\u4efd\u4e0e\u6062\u590d\u6307\u5357","text":"<p>\u672c\u6587\u6863\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 cp \u548c rsync \u5728 Linux \u7cfb\u7edf\u4e2d\u8fdb\u884c\u6587\u4ef6 \u5907\u4efd \u4e0e \u6062\u590d\u3002</p>"},{"location":"bash/%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/#cp","title":"\u4f7f\u7528 <code>cp</code>","text":""},{"location":"bash/%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/#_1","title":"\u5907\u4efd","text":"<p>\u5c06 <code>/source/</code> \u4e0b\u6240\u6709\u5185\u5bb9\uff08\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff09\u5907\u4efd\u5230 <code>/backup/</code>\uff1a <pre><code>cp -a /source/. /backup/\n</code></pre></p>"},{"location":"bash/%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/#_2","title":"\u6062\u590d","text":"<p>\u5c06\u5907\u4efd\u76ee\u5f55\u6062\u590d\u5230 <code>/restore/</code>\uff1a <pre><code>cp -a /backup/. /restore/\n\n# \u6062\u590d\u53ef\u80fd\u4f1a\u63d0\u793a\u662f\u5426\u8986\u76d6\ncp -af /path/to/source/. /path/to/destination/\n\u6216\nyes | cp -a /path/to/source/. /path/to/destination/\n</code></pre></p>"},{"location":"bash/%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/#2-rsync","title":"2. \u4f7f\u7528 <code>rsync</code>","text":"<p>source/ \u540e\u9762\u5e26 <code>/</code> \u8868\u793a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6</p>"},{"location":"bash/%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/#_3","title":"\u5907\u4efd","text":"<p>\u5c06 <code>/source/</code> \u4e0b\u6240\u6709\u5185\u5bb9\u5907\u4efd\u5230 <code>/backup/</code>\uff1a <pre><code>rsync -av /source/ /backup/\n</code></pre></p>"},{"location":"bash/%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/#_4","title":"\u6062\u590d","text":"<p>\u5c06\u5907\u4efd\u76ee\u5f55\u6062\u590d\u5230 <code>/restore/</code>\uff1a <pre><code>rsync -av /backup/ /restore/\n</code></pre></p>"},{"location":"bash/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/","title":"\u601d\u7ef4\u5bfc\u56fe","text":""},{"location":"bash/%E6%9F%A5%E6%89%BE%E5%9B%BA%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8Cgit%E6%8F%90%E4%BA%A4/","title":"\u67e5\u627e\u56fa\u5b9a\u5b57\u7b26\u4e32\u548cgit\u63d0\u4ea4","text":"<p>\u67e5\u627e\u542b\u6709<code>console.log</code>\u7684\u6587\u4ef6\u5177\u4f53\u884c\uff0c\u5e76\u6253\u5370git \u63d0\u4ea4\u7528\u6237\uff0c\u5b57\u7b26\u4e32\u622a\u53d6\u53c2\u8003\u94fe\u63a5</p> test.bash<pre><code>#!/bin/bash\n\nsearhstr=\"console.log\"\nbashfile=\"test.bash\"\n\nfor line in `grep -rn $searhstr . --exclude=$bashfile`\n\ndo\n\n    # echo \"line: $line\"\n\n    # \u83b7\u53d6file\n    file=${line%%:*}\n    # echo \"file: $file\"\n\n    # \u83b7\u53d6\u884c\u53f7\n    linenum=${line%:*}\n    linenum=${linenum#*:}\n    # echo \"linenum: $linenum\"\n\n\n    # \u83b7\u53d6git\u63d0\u4ea4\u7528\u6237\n    author=`git blame -p -L $linenum $file | grep \"^author \"`\n    author=${author#* }\n    # echo $author\n\n\n    echo \"$file $linenum $author\"\ndone\n</code></pre>"},{"location":"bash/%E7%AB%AF%E5%8F%A3%E8%8E%B7%E5%8F%96PID/","title":"\u7aef\u53e3\u83b7\u53d6PID","text":""},{"location":"bash/%E7%AB%AF%E5%8F%A3%E8%8E%B7%E5%8F%96PID/#lsof","title":"lsof","text":"<pre><code># \u8be6\u7ec6\nlsof -i:8080\n\n# \u4ec5pid\nlsof -t -i:8080\n</code></pre>"},{"location":"bash/%E7%AB%AF%E5%8F%A3%E8%8E%B7%E5%8F%96PID/#netstat","title":"netstat","text":"<pre><code>netstat -anp | grep 8080\n</code></pre>"},{"location":"bash/%E8%BF%90%E8%A1%8C%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/","title":"\u8fd0\u884c\u6267\u884c\u6587\u4ef6","text":""},{"location":"bash/%E8%BF%90%E8%A1%8C%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/#_1","title":"\u542f\u52a8","text":"<p><code>/root/main</code> \u4e3a\u53ef\u6267\u884c\u6587\u4ef6</p> <pre><code>nohup /root/main &gt; /dev/null 2&gt;&amp;1 &amp;\n</code></pre>"},{"location":"bash/%E8%BF%90%E8%A1%8C%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/#_2","title":"\u6740\u6b7b","text":"<pre><code>ps aux | grep main | grep -v grep | awk '{print $1}' | xargs kill -9\n\nor\n\nps aux | grep main | head -n 1 | awk '{print $1}' | xargs kill -9\n\n\nor\n\nkill -9 $(ps aux | grep '[p]ython csp_build.py' | awk '{print $2}')\n</code></pre>"},{"location":"bash/windows%20%E5%91%BD%E4%BB%A4/%E4%BB%BB%E5%8A%A1%28%E8%BF%9B%E7%A8%8B%29/","title":"\u4efb\u52a1(\u8fdb\u7a0b)","text":""},{"location":"bash/windows%20%E5%91%BD%E4%BB%A4/%E4%BB%BB%E5%8A%A1%28%E8%BF%9B%E7%A8%8B%29/#_1","title":"\u5217\u51fa\u6240\u6709\u4efb\u52a1","text":"<pre><code>tasklist\n</code></pre>"},{"location":"bash/windows%20%E5%91%BD%E4%BB%A4/%E4%BB%BB%E5%8A%A1%28%E8%BF%9B%E7%A8%8B%29/#_2","title":"\u67e5\u627e\u4efb\u52a1","text":"<pre><code>tasklist | findstr \"chrome\"\n</code></pre>"},{"location":"bash/windows%20%E5%91%BD%E4%BB%A4/%E4%BB%BB%E5%8A%A1%28%E8%BF%9B%E7%A8%8B%29/#_3","title":"\u5173\u6389\u4efb\u52a1","text":"<pre><code>tasklist /f /pid 123\n</code></pre>"},{"location":"bash/windows%20%E5%91%BD%E4%BB%A4/%E6%8F%90%E5%8F%96mp3%E6%96%87%E4%BB%B6/","title":"\u63d0\u53d6mp3\u6587\u4ef6","text":"<pre><code>@echo off\nchcp 65001 &gt;nul\nsetlocal enabledelayedexpansion\n\nset path=C:\\Users\\admin\\Downloads\\ffmpeg-master-latest-win64-gpl\\ffmpeg-master-latest-win64-gpl\\bin;%path%\n\nREM %%~nf \u2192 \u53d6\u6587\u4ef6\u540d\uff08\u4e0d\u5e26\u6269\u5c55\u540d\uff09\nREM %%~dpnxf = \u6587\u4ef6\u7684 \u5b8c\u6574\u8def\u5f84\uff08drive + path + name + extension\uff09\n\nREM \u521b\u5efa\u8f93\u51fa\u76ee\u5f55\nif not exist audios mkdir audios\n\nREM \u63d0\u53d6\u6240\u6709 mp4 \u7684\u97f3\u9891\u5230 audios \u76ee\u5f55\nfor %%f in (*.mp4) do (\n    echo \u63d0\u53d6\u97f3\u9891: %%f\n    ffmpeg -i \"%%f\" -q:a 0 -map a \"audios\\%%~nf.mp3\" -y\n)\n\nREM \u751f\u6210\u6587\u4ef6\u5217\u8868\u4f9b ffmpeg \u5408\u5e76\u4f7f\u7528\nREM \u751f\u6210\u6587\u4ef6\u5217\u8868\uff08\u5e26\u5f15\u53f7\uff0c\u9632\u6b62\u7a7a\u683c\u51fa\u9519\uff09\necho \u6b63\u5728\u751f\u6210\u6587\u4ef6\u5217\u8868...\n(\n    for %%f in (audios\\*.mp3) do (\n        echo file '%%~dpnxf'\n    )\n) &gt; audios\\file_list.txt\n\nREM \u5408\u5e76 mp3 \u6587\u4ef6\necho \u6b63\u5728\u5408\u5e76\u97f3\u9891...\nffmpeg -f concat -safe 0 -i audios\\file_list.txt -c copy audios\\merged.mp3 -y\n\necho \u5904\u7406\u5b8c\u6210\uff01\u5408\u5e76\u540e\u7684\u6587\u4ef6\u5728 audios\\merged.mp3\npause\n</code></pre>"},{"location":"bash/windows%20%E5%91%BD%E4%BB%A4/%E6%96%87%E6%A1%A3/","title":"\u6587\u6863","text":"<p>https://learn.microsoft.com/zh-cn/windows-server/administration/windows-commands/windows-commands</p>"},{"location":"bash/windows%20%E5%91%BD%E4%BB%A4/%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6/","title":"\u67e5\u627e\u6587\u4ef6","text":""},{"location":"bash/windows%20%E5%91%BD%E4%BB%A4/%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6/#_1","title":"\u6839\u636e\u540e\u7f00","text":"<pre><code>dir /s \"*.mp4\"\n</code></pre>"},{"location":"c/file/","title":"File","text":""},{"location":"c/file/#_1","title":"\u76d1\u63a7\u6587\u4ef6\u53d8\u5316","text":"main.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nvoid read_line(FILE *file)\n{\n    char ch;\n    while ((ch = fgetc(file)) != EOF)\n    {\n        printf(\"%c\", ch);\n        fflush(stdout);\n    }\n}\n\nint main(int argc, char *argv[])\n{\n\n    FILE *file;\n    char *filename;\n    int last_pos;\n\n    if (argc != 2)\n    {\n        fprintf(stderr, \"Usage: %s &lt;filename&gt;\\n\", argv[0]);\n        return EXIT_FAILURE;\n    }\n\n    filename = argv[1];\n\n    file = fopen(filename, \"r\");\n    if(file==NULL)\n    {\n        perror(\"Error open file\");\n        return EXIT_FAILURE;\n    }\n\n    read_line(file);\n    last_pos = ftell(file);\n\n\n    while(1)\n    {\n        sleep(1);\n\n        fseek(file, 0L, SEEK_END);\n        int latest_pos = ftell(file);\n        if (latest_pos &gt; last_pos)\n        {\n            fseek(file, last_pos, SEEK_SET);\n\n        }\n        else if (latest_pos &lt; last_pos)\n        {\n            fseek(file, 0, SEEK_SET);\n\n        }\n        else\n        {\n\n        }\n        read_line(file);\n        last_pos = ftell(file);\n\n    }\n\n    fclose(file);\n\n    return EXIT_SUCCESS;\n}\n</code></pre>"},{"location":"c/file/#json","title":"json \u65e5\u5fd7\u683c\u5f0f\u5316","text":"<p>\u4f7f\u7528jq\u66f4\u65b9\u4fbf</p> <p><code>gcc -o jcat main.c -lcjson</code> then <code>jcat out.log</code></p> main.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;cjson/cJSON.h&gt;\n\nvoid print_json(char *json_str)\n{\n    cJSON *root = cJSON_Parse(json_str);\n\n    if (root == NULL) {\n        const char *error_ptr = cJSON_GetErrorPtr();\n        if (error_ptr != NULL) {\n            fprintf(stderr, \"Error before: %s\\n\", error_ptr);\n        }\n    }\n\n    char *string = cJSON_Print(root);\n\n    printf(\"%s\", string);\n    printf(\"\\n\");\n    fflush(stdout);\n\n    cJSON_Delete(root);\n}\n\nvoid read_line(FILE *file)\n{\n    char *line = NULL;\n    size_t len = 0;\n    ssize_t nread;\n\n    nread = getline(&amp;line, &amp;len, file);\n    if (nread != -1)\n    {\n        print_json(line);\n        //printf(\"%s\", line);\n        //fflush(stdout);\n    }\n    free(line);\n}\n\nint main(int argc, char *argv[])\n{\n\n    FILE *file;\n    char *filename;\n    int last_pos;\n\n    if (argc != 2)\n    {\n        fprintf(stderr, \"Usage: %s &lt;filename&gt;\\n\", argv[0]);\n        return EXIT_FAILURE;\n    }\n\n    filename = argv[1];\n\n    file = fopen(filename, \"r\");\n    if(file==NULL)\n    {\n        perror(\"Error open file\");\n        return EXIT_FAILURE;\n    }\n\n    read_line(file);\n    last_pos = ftell(file);\n\n\n    while(1)\n    {\n        sleep(1);\n\n        fseek(file, 0L, SEEK_END);\n        int latest_pos = ftell(file);\n        if (latest_pos &gt; last_pos)\n        {\n            fseek(file, last_pos, SEEK_SET);\n\n        }\n        else if (latest_pos &lt; last_pos)\n        {\n            fseek(file, 0, SEEK_SET);\n\n        }\n        else\n        {\n\n        }\n        read_line(file);\n        last_pos = ftell(file);\n\n    }\n\n    fclose(file);\n\n    return EXIT_SUCCESS;\n}\n</code></pre>"},{"location":"c%23/base/","title":"Base","text":"<pre><code>// See https://aka.ms/new-console-template for more information\nConsole.WriteLine(\"Hello, World!\");\n\n// Declaration\nstring name = \"Pail\";\ndouble salary = 9000.12;\nint age;\nage = 25;\nint newAge = age;\nvar age1 = 25;\nvar newAge1 = age;\n\n\n// Operators\nint a = 5;\nint b = 10;\n\nint sum = a + b;\nint diff = a - b;\nint product = a * b;\nint quotient = b / a;\n\nstring greeting = \"Hello\";\nstring name1 = \"Paul\";\nstring message = greeting + \", \" + name1;\nstring upperName = name1.ToUpper();\nstring[] words = message.Split(' ');\nstring replacedMessage = message.Replace(\"Paul\", \"Tom\");\n\nConsole.WriteLine(\"upperName:\" + upperName);\nConsole.WriteLine(\"words:\" + words);\nConsole.WriteLine(\"words 0:\" + words[0]);\nConsole.WriteLine(\"words 1:\" + words[1]);\nConsole.WriteLine(\"replacedMessage:\" + replacedMessage);\n\n\n// Logical operators\n// AND    &amp;&amp;\n// OR     ||\n// NOT    !\n\n// Comparison operators\n// Equal to                   ==\n// Not equal to               !=\n// Greater than               &gt;\n// Less than                  &lt;\n// Greater than or equal to   &gt;=\n// Less than or equal to      &lt;=\n\n// Ternary operator\nint nextMonth = DateTime.Now.Month == 12 ? 1 : DateTime.Now.Month + 1;\n\n// Bitwise operators\n// AND            &amp;\n// OR             |\n// NOT            ~\n// XOR            ^\n// Left shift     &lt;&lt;\n// Right shift    &gt;&gt;\n\n\n// Data structures and collections\nint[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\nList&lt;int&gt; numberList = new List&lt;int&gt;();\nnumberList.AddRange(numbers);\nint firstNumber = numberList[0];\nnumberList.Remove(4);\nConsole.WriteLine(\"numberList:\" + string.Join(\",\", numberList));\nConsole.WriteLine(\"numberList len:\" + numberList.Count) ;\n\n\n// Namespace declare\nnamespace ProductionApplication.CustomerManagement\n{\n    public class Customer { }\n    public class DeliveryAddress { }\n}\n\nnamespace ProductionApplication.AccountManagement\n{\n    public class Account { }\n    public enum AccountType { }\n}\n\nnamespace ProductionApplication.ProductStock\n{\n    public class ProductStock { }\n    public interface IBaseProducte { }\n}\n// import\n// using ProductionApplication.CustomerManagement;\n// using ProductionApplication.AccountManagement;\n// using ProductionApplication.ProductStock;\n\nif (age &gt; 10) { }\nelse if (age &lt; 2) { }\nelse { }\n\nswitch (isDirectory)\n{\n    case true when myFile != null:\n        break;\n    case false:\n        break;\n    default:\n        break;\n}\n\nstring Weekend(DayOfWeek dayOfWeek)\n{\n    return dayOfWeek switch\n    {\n        DayOfWeek.Sunday =&gt; \"Sunday\",\n        DayOfWeek.Saturday =&gt; \"Saturday\",\n        _ =&gt; \"It\u2019s not weekend!\"\n    };\n}\n\nforeach (var item in collection) { }\nforeach (var item in new[] { 1, 2, 3, 4, 5 }) { }\nfor (var i = 0; i &lt; 10; i++) { }\n\nwhile (myCondition) { }\ndo { }while(myCondition)\n\nmyLable:\n// Code block\ngoto myLable;\n\ntryAgain:\ntry\n{\n    var stream = new FileStream(filePath, FileMode.Open, FileAccess.Read);\n    stream.Close();\n    stream.Dispose();\n}\ncatch\n{\n    Thread.Sleep(1_000);\n    goto tryAgain;\n}\n\nIEnumerable&lt;valueType&gt; GetNumbers()\n{\n    yield return value1;\n}\n\n\n// \u51fd\u6570\u53ef\u4ee5\u5f53\u4f5c\u53c2\u6570\u4f20\u9012\nProcessNumbers(5, 3, Multiply);\nstatic void ProcessNumbers(int a, int b, Func&lt;int, int, int&gt; operation) { }\nstatic int Multiply(int x, int y) { }\n\n\n\n// lambda expression\n// (input parameters) =&gt; expression\nFunc&lt;int, int&gt; square = x =&gt; x * x;\n\nAction&lt;string&gt; greet = name =&gt;\n{\n    Console.WriteLine($\"hello, {name}\");\n};\n\n// \u4e09\u4e2aint\u8868\u793a\u4f20\u5165\u7c7b\u578b\u548c\u8fd4\u56de\u7c7b\u578b\nFunc&lt;int, int, int&gt; add = (x, y) =&gt; x + y;\nint result = add(5, 10);\n\n// \u533f\u540d\nList&lt;int&gt; numbers = new List&lt;int&gt; { 2, 3, 4, 5, 6 };\nvar evenNumbers = numbers.Where(n =&gt; n % 2 == 0);\nFunc&lt;int, int&gt; doubleNumber = x =&gt; x * 2;\nConsole.WriteLine(doubleNumber(4));\n</code></pre>"},{"location":"c%23/class/","title":"Class","text":"<pre><code>using System.Globalization;\n\nPerson person = new Person();\nperson.Name = \"joha\";\nperson.Age = 12;\n\nperson.Introduce();\n\n\n\npublic class Person\n{\n    // Properties\n    public string Name { get; set; }\n    public int Age { get; set; }\n\n    private decimal price;\n    public string Price\n    {\n        get { return $\"${price: 0.00}\"; }\n        set { price = decimal.Parse(value, NumberStyles.Currency); }\n    }\n\n    public int m\n    {\n        get =&gt; m;\n        set { m = value + 10; }\n    }\n\n\n    static public int A { get; set; }\n\n    // Method\n    public void Introduce()\n    {\n        Console.WriteLine($\"Hello, i am {Name} and i am {Age} years old.\");\n    }\n\n    // \u6784\u9020\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e constructor\n    //public Person(string name, int age)\n    //{\n    //    Name = name;\n    //    Age = age;\n    //}\n\n    static void B()\n    {\n        Console.WriteLine($\"{A}.\");\n    }\n\n    public void DisplayGreeting(string name, string greeting = \"Hello\") { }\n\n}\n\n\npublic class Professor : Person {\n}\n\n// \u62bd\u8c61\u7c7b\npublic abstract class Animal\n{\n    public abstract void Speak();\n    public abstract void Speak(string text);\n\n}\n\npublic class Dog : Animal\n{\n    public override void Speak(){ }\n    public override void Speak(string text){ }\n}\n\n\n\npublic interface IProduct\n{\n    string Name { get; set; }\n    decimal Price { get; set; }\n}\npublic interface IRentable\n{\n    int RentalPeriodInDays { get; set; }\n    void Rent();\n}\n\npublic class Book : IProduct, IRentable\n{\n    public string Name { get; set; }\n    public decimal Price { get; set; }\n    public int RentalPeriodInDays { get; set; }\n    public void Rent() { }\n}\n</code></pre>"},{"location":"c%23/io_file/","title":"Io file","text":"<pre><code>using System;\nusing System.IO.Pipes;\nusing System.Security.AccessControl;\nusing System.Security.Principal;\nusing System.Text.Json;\nusing System.Text.Json.Serialization;\nusing System.Xml.Serialization;\n\nnamespace FileOperations\n{\n    public class Person\n    {\n        public string Name { get; set; }\n        public int Age { get; set; }\n    }\n\n    public class PersonWithProperty\n    {\n        [JsonPropertyName(\"f_name\")]\n        public string Name { get; set; }\n\n        [JsonPropertyName(\"f_age\")]\n        public int Age { get; set; }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // read\n            string filePath = @\"C:\\Users\\admin\\Desktop\\1.txt\";\n            if (File.Exists(filePath))\n            {\n                // read all content\n                string content = File.ReadAllText(filePath);\n                Console.WriteLine(\"File content is:\");\n                Console.WriteLine(content);\n\n                // read all line\n                string[] lines = File.ReadAllLines(filePath);\n                foreach(string line in lines)\n                {\n                    Console.WriteLine(line);\n                }\n\n                // line by line\n                // using\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\uff08\u57fa\u4e8e IDisposable\uff09,\u8fd9\u91cc\u662freader.Dispose()\n                using (StreamReader reader = new StreamReader(filePath))\n                {\n                    string line;\n                    while ((line = reader.ReadLine()) != null)\n                    {\n                        Console.WriteLine(line);\n                    }\n                }\n\n            } \n            else\n            {\n                Console.WriteLine(\"File does not exist.\");\n            }\n\n            // write\n            string filePath1 = @\"C:\\Users\\admin\\Desktop\\2.txt\";\n            string content1 = \"helloworld\\n123\";\n            File.WriteAllText(filePath1, content1);\n            Console.WriteLine(\"Text written to file.\");\n\n            // write by line\n            using(StreamWriter writer = new StreamWriter(filePath1))\n            {\n                writer.WriteLine(\"Hello\");\n                writer.WriteLine(\"Hello2\");\n                writer.WriteLine(\"Hello3\");\n            }\n\n\n            // stream read by byte\n            using (FileStream fs = new FileStream(filePath1, FileMode.Open))\n            {\n                byte[] buffer = new byte[1024];\n                int bytesRead = fs.Read(buffer, 0, buffer.Length);\n                Console.WriteLine($\"Read {bytesRead} bytes.\");\n                // Convert bytes to string and display.\n                string content = System.Text.Encoding.UTF8.GetString(buffer, 0, bytesRead);\n                Console.WriteLine(content);\n            }\n\n            // stream write by byte\n            using(FileStream fs = new FileStream(filePath, FileMode.Create))\n            {\n                string content = \"stream write by byte\";\n                byte[] buffer = System.Text.Encoding.UTF8.GetBytes(content);\n                fs.Write(buffer, 0, buffer.Length);\n            }\n\n            // seek\n            using(FileStream fs = new FileStream(filePath, FileMode.Open))\n            {\n                // Read from the beginning.\n                byte[] buffer1 = new byte[5];\n                fs.Read(buffer1, 0, buffer1.Length);\n\n                // Seek to the beginning.\n                fs.Seek(0, SeekOrigin.Begin);\n\n                // Read again.\n                byte[] buffer2 = new byte[5];\n                fs.Read(buffer2, 0, buffer2.Length);\n            }\n\n            AsyncFun();\n\n            ErrorHandle();\n\n            SerializeXml();\n\n            SerialzeJson();\n\n            //FileAndDirectory();\n\n            PathBufferMemoryStreamExample();\n\n            SecureFileOperations();\n        }\n\n        private static void SecureFileOperations()\n        {\n            string filePath = @\"C:\\Users\\admin\\Desktop\\3.txt\";\n            using (StreamWriter sw = new StreamWriter(filePath))\n            {\n                sw.WriteLine(\"hello\");\n            }\n            // Secure the File\n            FileSecurity fileSecurity = new FileSecurity();\n            SecurityIdentifier everyone = new SecurityIdentifier(WellKnownSidType.WorldSid, null);\n            fileSecurity.AddAccessRule(new FileSystemAccessRule(everyone, FileSystemRights.Read, AccessControlType.Allow));\n\n            FileInfo fileinfo = new FileInfo(filePath);\n            FileSystemAclExtensions.SetAccessControl(fileinfo, fileSecurity);\n            fileSecurity = FileSystemAclExtensions.GetAccessControl(fileinfo);\n\n            foreach (FileSystemAccessRule rule in fileSecurity.GetAccessRules(true, true, typeof(SecurityIdentifier)))\n            {\n                Console.WriteLine($\"Identity:{ rule.IdentityReference.Value}, Right: { rule.FileSystemRights},Type: {{rule.AccessControlType}}\");\n            }\n        }\n\n        private static void PathBufferMemoryStreamExample()\n        {\n            // Working with Paths\n            string folder = @\"C:\\Users\\admin\\Desktop\\\";\n            string fileName = \"1.txt\";\n            string fullPath = Path.Combine(folder, fileName);\n            Console.WriteLine($\"Full Path: {fullPath}\");\n\n            // Create some data as a buffer\n            byte[] buffer = new byte[1024]; // 1 KB buffer\n            for (int i = 0; i &lt; buffer.Length; i++)\n            {\n                buffer[i] = (byte)(i % 256);\n            }\n\n            // Working with Memory Stream\n            using (MemoryStream memoryStream = new MemoryStream())\n            {\n                // Write the buffer to the memory stream\n                memoryStream.Write(buffer, 0, buffer.Length);\n\n                // Reset the position of the stream to the beginning\n                memoryStream.Seek(0, SeekOrigin.Begin);\n\n                // Read from the memory stream back into a new buffer\n                byte[] readBuffer = new byte[1024];\n                memoryStream.Read(readBuffer, 0, readBuffer.Length);\n                for (int i = 0; i &lt; buffer.Length; i++)\n                {\n                    if (buffer[i] != readBuffer[i])\n                    {\n                        Console.WriteLine(\"Buffers are not equal!\");\n                        return;\n                    }\n                }\n                Console.WriteLine(\"Buffers are equal!\");\n            }\n        }\n\n        private static void FileAndDirectory()\n        {\n            File.Create(\"example.txt\");\n            bool exists = File.Exists(\"example.txt\");\n            string content = File.ReadAllText(\"example.txt\");\n            File.WriteAllText(\"example.txt\", \"Hello World!\");\n            File.Delete(\"example.txt\");\n\n            Directory.CreateDirectory(\"NewFolder\");\n            bool exists1 = Directory.Exists(\"NewFolder\");\n            string[] files = Directory.GetFiles(\"NewFolder\");\n            string[] dirs = Directory.GetDirectories(\"NewFolder\");\n            Directory.Delete(\"NewFolder\", true);\n        }\n\n        private static void SerialzeJson()\n        {\n            Person person = new Person { Name = \"Alice\", Age = 30 };\n\n            // Serialize to JSON\n            string jsonString = JsonSerializer.Serialize(person);\n            Console.WriteLine(\"Serialized JSON:\");\n            Console.WriteLine(jsonString);\n\n            // Deserialize from JSON\n            Person deserializedPerson = JsonSerializer.Deserialize&lt;Person&gt;(jsonString);\n            Console.WriteLine($\"Deserialized Person: Name = {deserializedPerson.Name}, Age = {deserializedPerson.Age}\");\n        }\n\n        private static void SerializeXml()\n        {\n            Person person = new Person { Name = \"Alice\", Age = 30 };\n\n            // Serialize object to XML\n            XmlSerializer serializer = new XmlSerializer(typeof(Person));\n            using (StringWriter writer = new StringWriter())\n            {\n                serializer.Serialize(writer, person);\n                string xmlstring = writer.ToString();\n                Console.WriteLine(\"Serialized XML:\");\n                Console.WriteLine(xmlstring);\n            }\n\n            // Deserialize object from XML\n            string xmlInput = \"&lt;Person&gt;&lt;Name&gt;Alice&lt;/Name&gt;&lt;Age&gt;30&lt;/Age&gt;&lt;/Person &gt; \";\n            using (StringReader reader = new StringReader(xmlInput))\n            {\n                Person deserializedPerson = (Person)serializer.Deserialize(reader);\n                Console.WriteLine($\"p.name={deserializedPerson.Name},age={deserializedPerson.Age}\");\n            }\n        }\n\n        private static void ErrorHandle()\n        {\n            try\n            {\n                string text = File.ReadAllText(\"nonexistent.txt\");\n            }\n            catch(FileNotFoundException e)\n            {\n                Console.WriteLine($\"File not found: {e.Message}\");\n            }\n            catch (UnauthorizedAccessException e)\n            {\n                Console.WriteLine($\"Access denied: {e.Message}\");\n            }\n            catch (IOException e)\n            {\n                Console.WriteLine($\"I/O error: { e.Message}\");\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine($\"Unexpected error: {e.Message}\");\n            }\n            finally\n            {\n\n            }\n        }\n\n        private static async Task AsyncFun()\n        {\n            string filePath = @\"C:\\Users\\admin\\Desktop\\1.txt\";\n            using (FileStream fs = new FileStream(filePath, FileMode.Open))\n            {\n                byte[] buffer = new byte[1024];\n                int bytesRead = await fs.ReadAsync(buffer, 0, buffer.Length);\n                Console.WriteLine($\"Read {bytesRead} bytes.\");\n                string content = System.Text.Encoding.UTF8.GetString(buffer, 0, bytesRead);\n                Console.WriteLine(content);\n            }\n\n        }\n    }\n\n\n\n\n}\n</code></pre>"},{"location":"c%23/type/","title":"Type","text":"<pre><code>using System;\nusing System.Collections;\nusing System.Collections.Concurrent;\nusing System.Collections.Immutable;\nusing System.Net;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing static System.Net.Mime.MediaTypeNames;\n\n// Encoding\nstring filePath = @\"C:\\Users\\admin\\source\\repos\\ConsoleApp1\\ConsoleApp1\\TextFile1.txt\";\nEncoding gb2312 = Encoding.Unicode;\n\ntry\n{\n    using StreamReader reader = new StreamReader(filePath, gb2312);\n    string content = reader.ReadToEnd();\n    Console.WriteLine(content);\n}catch(Exception ex)\n{\n    Console.WriteLine(\"An error:\" + ex.Message);\n}\n\n// string\nstring hello = \"hello,\";\nstring world = \"World!\";\nstring combined = hello + world;\nConsole.WriteLine(combined);\nConsole.WriteLine(combined.Length);\nConsole.WriteLine(combined[4]);\nConsole.WriteLine(combined.Substring(7, 5));\nConsole.WriteLine(combined.IndexOf(\"World\"));\nConsole.WriteLine(combined.Replace(\"World\", \"Universe\"));\nConsole.WriteLine(\"apple,banana,cherry\".Split(\",\"));\nConsole.WriteLine(\"  trim   \".Trim());\nConsole.WriteLine(hello.ToUpper());\nConsole.WriteLine(hello.ToLower());\nConsole.WriteLine(hello == \"hello,\");\nConsole.WriteLine(\"42\".PadLeft(5, '0'));\n\nConsole.WriteLine($\"hello, {world}\");\nConsole.WriteLine(string.Format(\"hello, {0}\", world));\n\nstring[] words = { hello, world };\nConsole.WriteLine(string.Join(\" \", words));\n\n\n// Regular expressions\nvar urlPattern = @\"https?://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&amp;=]*)?\";\nvar emailPattern = @\"^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$\";\nvar emails = new[] { \"test@example.com\", \"invalid-email@\", \"sample@domain.org\" };\nforeach (var email in emails)\n{\n    Console.WriteLine($\"{email} is {(Regex.IsMatch(email, emailPattern))}\");\n}\n\nvar numberPattern = @\"\\d+\";\nvar textWithNumbers = \"I have 5 apples and 10 oranges.\";\nvar matches = Regex.Matches(textWithNumbers, numberPattern);\nforeach (Match match in matches)\n{\n    Console.WriteLine(match.Value);\n}\n\nvar whitespacePattern = @\"\\s+\";\nvar spacedText = \"This    has   irregular     spaces.\";\nvar cleanedText = Regex.Replace(spacedText, whitespacePattern, \" \");\nConsole.WriteLine($\"Cleaned: { cleanedText}\");\n\n\n// Escaping and unescaping\nstring originalUrlString = \"This is a query with special chars like &amp; and spaces!\";\nstring escapedUrlString = WebUtility.UrlEncode(originalUrlString);\nConsole.WriteLine($\"Escaped URL: {escapedUrlString}\");\nstring unescapedUrlString = WebUtility.UrlDecode(escapedUrlString);\nConsole.WriteLine(\"unescaping URL: \" + unescapedUrlString);\n\n// enum\n// enum Colors { Red = 1, Green = 2, Blue = 4 };\n\n// tuple\nvar person = (Name: \"John\", Age: 30);\nConsole.WriteLine(person.Name);\n\n// null\nNullable&lt;int&gt; anotherNullableInt = null;\nint? num = null;\nif (num.HasValue)\n{\n    Console.WriteLine($\"Value is: {num.Value}\");\n}\nint b = num ?? 2;\n\n// Datetime\nDateTime time = new DateTime(0);\nConsole.WriteLine(time); // 0001-01-01 00:00:00\nDateTime someDateTime = new DateTime(2023, 8, 11);\nlong unixTimestamp = (someDateTime.Ticks - new DateTime(1970, 1, 1).Ticks) / TimeSpan.TicksPerSecond;\nConsole.WriteLine(unixTimestamp); // 1691712000\nDateTime originalDate = new DateTime(1970, 1, 1).AddSeconds(unixTimestamp);\nConsole.WriteLine(originalDate); // 2023-08-11 00:00:00\nDateTime aestDateTime = new DateTime(2023, 8, 11, 14, 0, 0,DateTimeKind.Unspecified);\nConsole.WriteLine(aestDateTime);\nstring dateString = \"2023-08-12 15:30:00\";\nDateTime dateTime = DateTime.Parse(dateString);\nConsole.WriteLine(dateTime);\n\n// Collection\nvar arrayList = new ArrayList { \"apple\", 42, true };\nConsole.WriteLine($\"ArrayList: {string.Join(\", \", arrayList.Cast&lt;object&gt;())}\");\n\nvar hashTable = new Hashtable\n{\n    {\"key\", \"value\" },\n    {\"a\", 42 }\n};\nConsole.WriteLine($\"key={hashTable[\"key\"]},a={hashTable[\"a\"]}\");\n\nvar queue = new Queue();\nqueue.Enqueue(\"apple\");\nqueue.Enqueue(42);\nConsole.WriteLine($\"Queue (after two enqueues): {string.Join(\", \", queue.Cast&lt;object&gt;())}\");\nvar dequeuedValue = queue.Dequeue();\nConsole.WriteLine($\"Dequeued from Queue: {dequeuedValue}\");\n\nvar stack = new Stack();\nstack.Push(\"apple\");\nstack.Push(42);\nConsole.WriteLine($\"Stack (after two pushes): {string.Join(\", \", stack.Cast&lt;object&gt;())}\");\nvar poppedValue = stack.Pop();\nConsole.WriteLine($\"Popped from Stack: {poppedValue}\");\n\nvar bitArray = new BitArray(new[] { true, false, true });\nforeach (bool bit in bitArray)\n{\n    Console.Write(bit + \" \");\n}\n\n\n// with type\nvar dictionary = new Dictionary&lt;string, string&gt;\n{\n    {\"key1\", \"value1\" },\n    {\"key2\", \"value2\" }\n};\nConsole.WriteLine($\"Dictionary: {string.Join(\", \", dictionary)}\");\n\nvar queue1 = new Queue&lt;int&gt;();\nqueue1.Enqueue(1);\nqueue1.Enqueue(2);\nConsole.WriteLine($\"Queue1 (after two enqueues): {string.Join(\", \", queue1)}\");\nint dequeuedValue1 = queue1.Dequeue();\nConsole.WriteLine($\"Dequeued from Queue1: {dequeuedValue1}\");\n\nvar stack1 = new Stack&lt;int&gt;();\nstack1.Push(3);\nstack1.Push(4);\nConsole.WriteLine($\"Stack1 (after two pushes): {string.Join(\", \", stack1)}\");\nint poppedValue1 = stack1.Pop();\nConsole.WriteLine($\"Popped from Stack1: {poppedValue1}\");\n\nvar hashSet = new HashSet&lt;int&gt; { 5, 6, 6 };\nConsole.WriteLine($\"HashSet: {string.Join(\", \", hashSet)}\");\n\nvar linkedList = new LinkedList&lt;string&gt;();\nlinkedList.AddLast(\"firstElement\");\nlinkedList.AddLast(\"secondElement\");\nConsole.WriteLine($\"LinkedList: {string.Join(\", \", linkedList)}\");\n\n\n// auto sort\nvar sortedSet = new SortedSet&lt;int&gt; { 8, 7, 9 };\nConsole.WriteLine($\"SortedSet: {string.Join(\", \", sortedSet)}\");\n\nvar sortedList = new SortedList&lt;string, string&gt;\n{\n    {\"b\", \"valueb\" },\n    {\"a\", \"valuea\" },\n};\nConsole.WriteLine($\"SortedList: {string.Join(\", \", sortedList)}\");\n\nvar sortedDictionary = new SortedDictionary&lt;string, string&gt;\n{\n    {\"b\", \"valueb\" },\n    {\"a\", \"valuea\" },\n};\nConsole.WriteLine($\"SortedDictionary: {string.Join(\", \",sortedDictionary)}\");\n\n// concurrent\nvar concurrentDictionary = new ConcurrentDictionary&lt;string,string&gt;();\nconcurrentDictionary.TryAdd(\"b\", \"valueb\");\nconcurrentDictionary.TryAdd(\"a\", \"valuea\");\nConsole.WriteLine($\"ConcurrentDictionary: {string.Join(\", \", concurrentDictionary)}\");\n\nvar concurrentQueue = new ConcurrentQueue&lt;int&gt;();\nconcurrentQueue.Enqueue(1);\nconcurrentQueue.Enqueue(2);\nconcurrentQueue.TryDequeue(out int queueResult);\nConsole.WriteLine($\"Dequeued from ConcurrentQueue: { queueResult}\");\n\nvar concurrentStack = new ConcurrentStack&lt;int&gt;();\nconcurrentStack.Push(3);\nconcurrentStack.Push(4);\nconcurrentStack.TryPop(out int stackResult);\nConsole.WriteLine($\"Popped from ConcurrentStack: {stackResult}\");\n\nvar concurrentBag = new ConcurrentBag&lt;int&gt;();\nconcurrentBag.Add(5);\nconcurrentBag.Add(6);\nconcurrentBag.TryTake(out int bagResult);\nConsole.WriteLine($\"Taken from ConcurrentBag: {bagResult}\");\n\nvar blockingCollection = new BlockingCollection&lt;int&gt;(5);\nblockingCollection.Add(7);\nblockingCollection.Add(8);\nConsole.WriteLine($\"BlockingCollection (after two additions): { string.Join(\", \", blockingCollection)}\");\nint blockingResult = blockingCollection.Take();\nConsole.WriteLine($\"Taken from BlockingCollection: { blockingResult}\");\n\n// immutable\nImmutableArray&lt;int&gt; immutableArray = ImmutableArray.Create(1, 2, 3, 4);\nConsole.WriteLine($\"ImmutableArray: {string.Join(\", \",immutableArray)}\");\n\nImmutableList&lt;int&gt; immutableList = ImmutableList.Create(5, 6,7, 8);\nConsole.WriteLine($\"ImmutableList: {string.Join(\", \", immutableList)}\");\n\nvar builder = ImmutableDictionary.CreateBuilder&lt;string,string&gt;();\nbuilder.Add(\"b\", \"valueb\");\nbuilder.Add(\"a\", \"valuea\");\nImmutableDictionary&lt;string, string&gt; immutableDictionary = builder.ToImmutable();\nConsole.WriteLine($\"ImmutableDictionary: {string.Join(\", \", immutableDictionary)}\");\n\nImmutableHashSet&lt;int&gt; immutableHashSet = ImmutableHashSet.Create(9, 10, 11);\nConsole.WriteLine($\"ImmutableHashSet: {string.Join(\", \", immutableHashSet)}\");\n\nImmutableQueue&lt;int&gt; immutableQueue = ImmutableQueue.Create(12, 13, 14);\nimmutableQueue = immutableQueue.Enqueue(15);\nConsole.WriteLine($\"ImmutableQueue (after Enqueue): { string.Join(\", \", immutableQueue)}\");\nvar dequeuedValue2 = immutableQueue.Dequeue(); // dequeuedValue2 is new queue\nConsole.WriteLine($\"Dequeued value from ImmutableQueue: {dequeuedValue2.Peek()}, is empty: {dequeuedValue2.IsEmpty}\");\n\nImmutableStack&lt;int&gt; immutableStack = ImmutableStack.Create(16,17, 18);\nimmutableStack = immutableStack.Push(19);\nConsole.WriteLine($\"ImmutableStack (after Push): {string.Join(\", \", immutableStack)}\");\nvar poppedValue2 = immutableStack.Pop();// poppedValue2 is new Stack\nConsole.WriteLine($\"Popped value from ImmutableStack: { poppedValue2.Peek()}, is empty: { poppedValue2.IsEmpty}\");\n</code></pre>"},{"location":"css/border%20%E8%BE%B9%E6%A1%86/","title":"Border \u8fb9\u6846","text":""},{"location":"css/border%20%E8%BE%B9%E6%A1%86/#_1","title":"\u865a\u7ebf\u8fb9\u6846","text":"<p>\u53c2\u8003 1 \u53c2\u8003 2</p> <pre><code>.border-dotted {\n  padding: 1em;\n  border: 1px dashed transparent;\n  background: linear-gradient(white, white) padding-box, repeating-linear-gradient(\n      -45deg,\n      #ccc 0,\n      #ccc 0.25em,\n      white 0,\n      white 0.75em\n    );\n}\n</code></pre>"},{"location":"css/flex%20%E5%B8%83%E5%B1%80/","title":"Flex \u5e03\u5c40","text":""},{"location":"css/flex%20%E5%B8%83%E5%B1%80/#_1","title":"\u5bbd\u9ad8\u5931\u6548\u95ee\u9898","text":"<pre><code>/* \nflex-grow: \u6b64\u5c5e\u6027\u4e3a\u662f\u5426\u81ea\u52a8\u589e\u957f\u7a7a\u95f4\uff0c\nflex-shrink;\u6b64\u5c5e\u6027\u4e3a\u662f\u5426\u81ea\u52a8\u7f29\u5c0f\u7a7a\u95f4\uff0c\n\u9ed8\u8ba4\u503c\u90fd\u662f1\uff0c\u5373\u81ea\u52a8\u589e\u957f/\u7f29\u5c0f\uff0c\n\u8bbe\u7f6e\u4e3a0\u65f6\uff0c\u4e0d\u4f1a\u81ea\u52a8\u589e\u957f/\u7f29\u5c0f\n*/\nflex-grow: 0;\nflex-shrink: 0;\n</code></pre>"},{"location":"go/air/","title":"Air","text":""},{"location":"go/air/#air","title":"air \u7279\u6b8a\u914d\u7f6e","text":"<p><code>docker</code> \u73af\u5883\u5185\u4e00\u5b9a\u9700\u8981\u6253\u5f00 <code>poll</code> </p> <pre><code>air --build.cmd \"go build -o ../tmp/main main.go\" --build.bin \"../tmp/main\" --build.poll true\n</code></pre>"},{"location":"go/air/#_1","title":"\u53c2\u8003","text":"<ul> <li>https://github.com/air-verse/air</li> <li>https://stackoverflow.com/questions/70321633/hot-reload-not-working-in-docker-with-golang-github-com-cosmtrek-air/77248470#77248470</li> </ul>"},{"location":"go/embed/","title":"Embed","text":"<p>https://colobu.com/2021/01/17/go-embed-tutorial/</p> <p>https://blog.jetbrains.com/go/2021/06/09/how-to-use-go-embed-in-go-1-16/</p>"},{"location":"go/embed/#_1","title":"\u5b57\u7b26\u4e32\u6587\u4ef6","text":"<pre><code>package main\nimport (\n    _ \"embed\"\n    \"fmt\"\n)\n//go:embed hello.txt\nvar s string\nfunc main() {\n    fmt.Println(s)\n}\n</code></pre>"},{"location":"go/embed/#_2","title":"\u6587\u4ef6\u5939","text":"<pre><code>package main\nimport (\n    \"embed\"\n    \"fmt\"\n)\n//go:embed p\nvar f embed.FS\nfunc main() {\n    data, _ := f.ReadFile(\"p/hello.txt\")\n    fmt.Println(string(data))\n    data, _ = f.ReadFile(\"p/hello2.txt\")\n    fmt.Println(string(data))\n}\n</code></pre>"},{"location":"go/embed/#_3","title":"\u901a\u7528\u6587\u4ef6","text":"<p>https://github.com/pocketbase/pocketbase/blob/master/ui/embed.go</p> embed.go<pre><code>// Package ui handles the PocketBase Admin frontend embedding.\npackage ui\n\nimport (\n    \"embed\"\n\n    \"github.com/labstack/echo/v5\"\n)\n\n//go:embed all:dist\nvar distDir embed.FS\n\n//go:embed dist/index.html\nvar indexHTML embed.FS\n\n// DistDirFS contains the embedded dist directory files (without the \"dist\" prefix)\nvar DistDirFS = echo.MustSubFS(distDir, \"dist\")\n\n// DistIndexHTML contains the embedded dist/index.html file (without the \"dist\" prefix)\nvar DistIndexHTML = echo.MustSubFS(indexHTML, \"dist\")\n</code></pre>"},{"location":"go/excel/","title":"Excel","text":""},{"location":"go/excel/#_1","title":"\u6309\u884c\u5199\u5165","text":"<p>http://liuqh.icu/2021/06/30/go/package/21-excelize/</p> insertRow.go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strconv\"\n\n    \"github.com/xuri/excelize/v2\"\n)\n\nfunc main() {\n    f := excelize.NewFile()\n\n    headers := []interface{}{\"index\", \"count\", \"date\"}\n    f.SetSheetRow(\"Sheet1\", \"A1\", &amp;headers)\n\n    values := []interface{}{\n        []interface{}{\"1\", 2, \"2022/01/01\"},\n        []interface{}{\"2\", 3, \"2022/02/01\"},\n    }\n\n    for i, v := range values {\n        tmp, _ := v.([]interface{})\n        err := f.SetSheetRow(\"Sheet1\", \"A\"+strconv.Itoa(i+2), &amp;tmp)\n        if err != nil {\n            fmt.Println(err)\n        }\n    }\n\n    if err := f.SaveAs(\"Book1.xlsx\"); err != nil {\n        fmt.Println(err)\n    }\n}\n</code></pre>"},{"location":"go/filter/","title":"Filter","text":""},{"location":"go/filter/#xorfilter","title":"xorfilter","text":"<p>https://github.com/FastFilter/xorfilter  </p> main.go<pre><code>package main\n\nimport (\n    \"fmt\"\n\n    \"github.com/FastFilter/xorfilter\"\n    \"github.com/cespare/xxhash/v2\"\n)\n\n// https://github.com/matrixorigin/matrixone/blob/6ed78f51b8769898a79b07de2593879eec488ff6/pkg/vm/engine/tae/index/filter.go#L58\nfunc hashV1(v []byte) uint64 {\n    return xxhash.Sum64(v)\n}\n\nfunc main() {\n    item1 := hashV1([]byte(\"item1\"))\n    item2 := hashV1([]byte(\"item2\"))\n    item3 := hashV1([]byte(\"item3\"))\n    item4 := hashV1([]byte(\"item4\"))\n\n    arr := []uint64{item1, item2, item3, item1, item2, item3}\n    filter, err := xorfilter.PopulateBinaryFuse8(arr)\n    if err != nil {\n        fmt.Println(nil)\n    }\n\n    fmt.Println(filter.Contains(item1))\n    fmt.Println(filter.Contains(item2))\n    fmt.Println(filter.Contains(item3))\n    fmt.Println(filter.Contains(item4))\n}\n</code></pre>"},{"location":"go/fs/","title":"Fs","text":"<p>https://raw.githubusercontent.com/wailsapp/wails/master/v2/internal/fs/fs.go</p> fs/fs.go<pre><code>package fs\n\nimport (\n    \"crypto/md5\"\n    \"fmt\"\n    \"io\"\n    \"io/fs\"\n    \"os\"\n    \"path/filepath\"\n    \"runtime\"\n    \"strings\"\n    \"unsafe\"\n\n    \"github.com/leaanthony/slicer\"\n)\n\n// LocalDirectory gets the caller's file directory\n// Equivalent to node's __DIRNAME\nfunc LocalDirectory() string {\n    _, thisFile, _, _ := runtime.Caller(1)\n    return filepath.Dir(thisFile)\n}\n\n// RelativeToCwd returns an absolute path based on the cwd\n// and the given relative path\nfunc RelativeToCwd(relativePath string) (string, error) {\n    cwd, err := os.Getwd()\n    if err != nil {\n        return \"\", err\n    }\n\n    return filepath.Join(cwd, relativePath), nil\n}\n\n// Mkdir will create the given directory\nfunc Mkdir(dirname string) error {\n    return os.Mkdir(dirname, 0755)\n}\n\n// MkDirs creates the given nested directories.\n// Returns error on failure\nfunc MkDirs(fullPath string, mode ...os.FileMode) error {\n    var perms os.FileMode\n    perms = 0755\n    if len(mode) == 1 {\n        perms = mode[0]\n    }\n    return os.MkdirAll(fullPath, perms)\n}\n\n// MoveFile attempts to move the source file to the target\n// Target is a fully qualified path to a file *name*, not a\n// directory\nfunc MoveFile(source string, target string) error {\n    return os.Rename(source, target)\n}\n\n// DeleteFile will delete the given file\nfunc DeleteFile(filename string) error {\n    return os.Remove(filename)\n}\n\n// CopyFile from source to target\nfunc CopyFile(source string, target string) error {\n    s, err := os.Open(source)\n    if err != nil {\n        return err\n    }\n    defer s.Close()\n    d, err := os.Create(target)\n    if err != nil {\n        return err\n    }\n    if _, err := io.Copy(d, s); err != nil {\n        d.Close()\n        return err\n    }\n    return d.Close()\n}\n\n// DirExists - Returns true if the given path resolves to a directory on the filesystem\nfunc DirExists(path string) bool {\n    fi, err := os.Lstat(path)\n    if err != nil {\n        return false\n    }\n\n    return fi.Mode().IsDir()\n}\n\n// FileExists returns a boolean value indicating whether\n// the given file exists\nfunc FileExists(path string) bool {\n    fi, err := os.Lstat(path)\n    if err != nil {\n        return false\n    }\n\n    return fi.Mode().IsRegular()\n}\n\n// RelativePath returns a qualified path created by joining the\n// directory of the calling file and the given relative path.\n//\n// Example: RelativePath(\"..\") in *this* file would give you '/path/to/wails2/v2/internal`\nfunc RelativePath(relativepath string, optionalpaths ...string) string {\n    _, thisFile, _, _ := runtime.Caller(1)\n    localDir := filepath.Dir(thisFile)\n\n    // If we have optional paths, join them to the relativepath\n    if len(optionalpaths) &gt; 0 {\n        paths := []string{relativepath}\n        paths = append(paths, optionalpaths...)\n        relativepath = filepath.Join(paths...)\n    }\n    result, err := filepath.Abs(filepath.Join(localDir, relativepath))\n    if err != nil {\n        // I'm allowing this for 1 reason only: It's fatal if the path\n        // supplied is wrong as it's only used internally in Wails. If we get\n        // that path wrong, we should know about it immediately. The other reason is\n        // that it cuts down a ton of unnecassary error handling.\n        panic(err)\n    }\n    return result\n}\n\n// MustLoadString attempts to load a string and will abort with a fatal message if\n// something goes wrong\nfunc MustLoadString(filename string) string {\n    data, err := os.ReadFile(filename)\n    if err != nil {\n        fmt.Printf(\"FATAL: Unable to load file '%s': %s\\n\", filename, err.Error())\n        os.Exit(1)\n    }\n    return *(*string)(unsafe.Pointer(&amp;data))\n}\n\n// MD5File returns the md5sum of the given file\nfunc MD5File(filename string) (string, error) {\n    f, err := os.Open(filename)\n    if err != nil {\n        return \"\", err\n    }\n    defer f.Close()\n\n    h := md5.New()\n    if _, err := io.Copy(h, f); err != nil {\n        return \"\", err\n    }\n\n    return fmt.Sprintf(\"%x\", h.Sum(nil)), nil\n}\n\n// MustMD5File will call MD5File and abort the program on error\nfunc MustMD5File(filename string) string {\n    result, err := MD5File(filename)\n    if err != nil {\n        println(\"FATAL: Unable to MD5Sum file:\", err.Error())\n        os.Exit(1)\n    }\n    return result\n}\n\n// MustWriteString will attempt to write the given data to the given filename\n// It will abort the program in the event of a failure\nfunc MustWriteString(filename string, data string) {\n    err := os.WriteFile(filename, []byte(data), 0755)\n    if err != nil {\n        fatal(\"Unable to write file\", filename, \":\", err.Error())\n        os.Exit(1)\n    }\n}\n\n// fatal will print the optional messages and die\nfunc fatal(message ...string) {\n    if len(message) &gt; 0 {\n        print(\"FATAL:\")\n        for text := range message {\n            print(text)\n        }\n    }\n    os.Exit(1)\n}\n\n// GetSubdirectories returns a list of subdirectories for the given root directory\nfunc GetSubdirectories(rootDir string) (*slicer.StringSlicer, error) {\n    var result slicer.StringSlicer\n\n    // Iterate root dir\n    err := filepath.Walk(rootDir, func(path string, info os.FileInfo, err error) error {\n        if err != nil {\n            return err\n        }\n        // If we have a directory, save it\n        if info.IsDir() {\n            result.Add(path)\n        }\n        return nil\n    })\n    return &amp;result, err\n}\n\nfunc DirIsEmpty(dir string) (bool, error) {\n\n    // CREDIT: https://stackoverflow.com/a/30708914/8325411\n    f, err := os.Open(dir)\n    if err != nil {\n        return false, err\n    }\n    defer f.Close()\n\n    _, err = f.Readdirnames(1) // Or f.Readdir(1)\n    if err == io.EOF {\n        return true, nil\n    }\n    return false, err // Either not empty or error, suits both cases\n}\n\n// CopyDir recursively copies a directory tree, attempting to preserve permissions.\n// Source directory must exist, destination directory must *not* exist.\n// Symlinks are ignored and skipped.\n// Credit: https://gist.github.com/r0l1/92462b38df26839a3ca324697c8cba04\nfunc CopyDir(src string, dst string) (err error) {\n    src = filepath.Clean(src)\n    dst = filepath.Clean(dst)\n\n    si, err := os.Stat(src)\n    if err != nil {\n        return err\n    }\n    if !si.IsDir() {\n        return fmt.Errorf(\"source is not a directory\")\n    }\n\n    _, err = os.Stat(dst)\n    if err != nil &amp;&amp; !os.IsNotExist(err) {\n        return\n    }\n    if err == nil {\n        return fmt.Errorf(\"destination already exists\")\n    }\n\n    err = MkDirs(dst)\n    if err != nil {\n        return\n    }\n\n    entries, err := os.ReadDir(src)\n    if err != nil {\n        return\n    }\n\n    for _, entry := range entries {\n        srcPath := filepath.Join(src, entry.Name())\n        dstPath := filepath.Join(dst, entry.Name())\n\n        if entry.IsDir() {\n            err = CopyDir(srcPath, dstPath)\n            if err != nil {\n                return\n            }\n        } else {\n            // Skip symlinks.\n            if entry.Type()&amp;os.ModeSymlink != 0 {\n                continue\n            }\n\n            err = CopyFile(srcPath, dstPath)\n            if err != nil {\n                return\n            }\n        }\n    }\n\n    return\n}\n\n// CopyDirExtended recursively copies a directory tree, attempting to preserve permissions.\n// Source directory must exist, destination directory must *not* exist. It ignores any files or\n// directories that are given through the ignore parameter.\n// Symlinks are ignored and skipped.\n// Credit: https://gist.github.com/r0l1/92462b38df26839a3ca324697c8cba04\nfunc CopyDirExtended(src string, dst string, ignore []string) (err error) {\n\n    ignoreList := slicer.String(ignore)\n    src = filepath.Clean(src)\n    dst = filepath.Clean(dst)\n\n    si, err := os.Stat(src)\n    if err != nil {\n        return err\n    }\n    if !si.IsDir() {\n        return fmt.Errorf(\"source is not a directory\")\n    }\n\n    _, err = os.Stat(dst)\n    if err != nil &amp;&amp; !os.IsNotExist(err) {\n        return\n    }\n    if err == nil {\n        return fmt.Errorf(\"destination already exists\")\n    }\n\n    err = MkDirs(dst)\n    if err != nil {\n        return\n    }\n\n    entries, err := os.ReadDir(src)\n    if err != nil {\n        return\n    }\n\n    for _, entry := range entries {\n        if ignoreList.Contains(entry.Name()) {\n            continue\n        }\n        srcPath := filepath.Join(src, entry.Name())\n        dstPath := filepath.Join(dst, entry.Name())\n\n        if entry.IsDir() {\n            err = CopyDir(srcPath, dstPath)\n            if err != nil {\n                return\n            }\n        } else {\n            // Skip symlinks.\n            if entry.Type()&amp;os.ModeSymlink != 0 {\n                continue\n            }\n\n            err = CopyFile(srcPath, dstPath)\n            if err != nil {\n                return\n            }\n        }\n    }\n\n    return\n}\n\n// MoveDirExtended recursively moves a directory tree, attempting to preserve permissions.\n// Source directory must exist, destination directory must *not* exist. It ignores any files or\n// directories that are given through the ignore parameter.\n// Symlinks are ignored and skipped.\nfunc MoveDirExtended(src string, dst string, ignore []string) (err error) {\n\n    ignoreList := slicer.String(ignore)\n    src = filepath.Clean(src)\n    dst = filepath.Clean(dst)\n\n    si, err := os.Stat(src)\n    if err != nil {\n        return err\n    }\n    if !si.IsDir() {\n        return fmt.Errorf(\"source is not a directory\")\n    }\n\n    _, err = os.Stat(dst)\n    if err != nil &amp;&amp; !os.IsNotExist(err) {\n        return\n    }\n    if err == nil {\n        return fmt.Errorf(\"destination already exists\")\n    }\n\n    err = MkDirs(dst)\n    if err != nil {\n        return\n    }\n\n    entries, err := os.ReadDir(src)\n    if err != nil {\n        return\n    }\n\n    for _, entry := range entries {\n        if ignoreList.Contains(entry.Name()) {\n            continue\n        }\n        srcPath := filepath.Join(src, entry.Name())\n        dstPath := filepath.Join(dst, entry.Name())\n\n        // Skip symlinks.\n        if entry.Type()&amp;os.ModeSymlink != 0 {\n            continue\n        }\n\n        err := os.Rename(srcPath, dstPath)\n        if err != nil {\n            return err\n        }\n    }\n\n    return\n}\n\nfunc FindPathToFile(fsys fs.FS, file string) (string, error) {\n    stat, _ := fs.Stat(fsys, file)\n    if stat != nil {\n        return \".\", nil\n    }\n    var indexFiles slicer.StringSlicer\n    err := fs.WalkDir(fsys, \".\", func(path string, d fs.DirEntry, err error) error {\n        if err != nil {\n            return err\n        }\n        if strings.HasSuffix(path, file) {\n            indexFiles.Add(path)\n        }\n        return nil\n    })\n    if err != nil {\n        return \"\", err\n    }\n\n    if indexFiles.Length() &gt; 1 {\n        selected := indexFiles.AsSlice()[0]\n        for _, f := range indexFiles.AsSlice() {\n            if len(f) &lt; len(selected) {\n                selected = f\n            }\n        }\n        path, _ := filepath.Split(selected)\n        return path, nil\n    }\n    if indexFiles.Length() &gt; 0 {\n        path, _ := filepath.Split(indexFiles.AsSlice()[0])\n        return path, nil\n    }\n    return \"\", fmt.Errorf(\"no index.html found\")\n}\n</code></pre>"},{"location":"go/gin-sql-play/","title":"Gin sql play","text":""},{"location":"go/gin-sql-play/#sql","title":"\u5728\u7ebf\u6267\u884csql","text":"example.go<pre><code>package main\n\nimport (\n    \"bytes\"\n    \"encoding/json\"\n    \"fmt\"\n    \"html/template\"\n    \"local-gin/utils\"\n\n    \"github.com/gin-contrib/cors\"\n    \"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n    r := gin.Default()\n    corsConfig := cors.DefaultConfig()\n    corsConfig.AllowAllOrigins = true\n    corsConfig.AllowHeaders = []string{\"*\"}\n    r.Use(cors.New(corsConfig))\n    r.GET(\"/ping\", func(c *gin.Context) {\n        c.JSON(200, gin.H{\n            \"message\": \"pong\",\n        })\n    })\n\n    dbs := []string{\"a\", \"b\", \"c\", \"d\"}\n    htmlString := `\n    &lt;head&gt;\n        &lt;link href=\"https://cdn.bootcdn.net/ajax/libs/monaco-editor/0.20.0/min/vs/editor/editor.main.min.css\" rel=\"stylesheet\"&gt;\n    &lt;/head&gt;\n    &lt;body style=\"margin: 0;\"&gt;\n        &lt;div\n            style=\"height: 100vh;width: 100vw;display: grid; grid-template-columns: repeat(2, 1fr);grid-template-rows: 40px 1fr;\"&gt;\n            &lt;div style=\"display: flex;align-items: center; padding: 10px;\"&gt;\n                &lt;form method=\"post\" id=\"play\" style=\"margin:0;\"&gt;\n                    &lt;label for=\"\"&gt;\n                        DB:{{.DbValue}}\n                        &lt;select name=\"db\" id=\"db\"&gt;\n                        {{range .Dbs}}\n                        &lt;option value=\"{{ . }}\" {{if eq . $.DbValue }}selected{{end}}&gt;{{ . }}&lt;/option&gt;\n                        {{end}}\n\n                        &lt;/select&gt;\n                    &lt;/label&gt;\n                    &lt;input type=\"hidden\" name=\"sql\" id=\"sql\" value=\"{{.Sql}}\" /&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n            &lt;div style=\"display: flex; align-items: center;\"&gt;\n                &lt;input type=\"submit\" form=\"play\" value=\"Run\" /&gt;\n            &lt;/div&gt;\n            &lt;div id=\"editor\"&gt;&lt;/div&gt;\n            &lt;div id=\"view\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;script src=\"https:///www.unpkg.com/monaco-editor@0.47.0/min/vs/loader.js\"&gt;&lt;/script&gt;\n        &lt;script&gt;\n        require.config({ paths: { 'vs': 'https:///www.unpkg.com/monaco-editor@0.47.0/min/vs' } });\n        require(['vs/editor/editor.main'], function () {\n            sqlEditor = monaco.editor.create(document.getElementById('editor'), {\n                value: '{{.Sql}}',\n                      language: 'sql',\n            });\n\n            sqlEditor.onDidBlurEditorText(function(){\n                document.querySelector('#sql').value = sqlEditor.getValue()\n            })\n\n            viewEditor = monaco.editor.create(document.getElementById('view'), {\n                value: '{{.Result}}',\n                      language: 'json',\n                readOnly: true\n            });\n        })\n        &lt;/script&gt;\n    &lt;/body&gt;\n    `\n    type sqlData struct {\n        Dbs     []string\n        DbValue string `form:\"db\"`\n        Sql     string `form:\"sql\"`\n        Result  string\n    }\n    t, _ := template.New(\"edior\").Parse(htmlString)\n    run := r.Group(\"play\")\n    {\n        run.GET(\"\", func(ctx *gin.Context) {\n            writer := bytes.NewBufferString(\"\")\n            t.Execute(writer, sqlData{\n                Dbs: dbs,\n            })\n            ctx.Header(\"content-type\", \"text/html; charset=utf-8\")\n            ctx.String(200, writer.String())\n        })\n\n        run.POST(\"\", func(ctx *gin.Context) {\n            var params sqlData\n            if err := ctx.ShouldBind(&amp;params); err != nil {\n                fmt.Println(params)\n                params.Result = err.Error()\n            }\n            if len(params.DbValue) == 0 || len(params.Sql) == 0 {\n                params.Result = \"\u53c2\u6570\u9519\u8bef\"\n            } else {\n                db, err := utils.GetDBConnection(params.DbValue)\n                if err != nil {\n                    params.Result = err.Error()\n                } else {\n                    var result []map[string]interface{}\n                    r := db.Raw(params.Sql).Find(&amp;result)\n                    if r.Error != nil {\n                        params.Result = r.Error.Error()\n                    } else {\n                        b, _ := json.MarshalIndent(result, \"\", \"  \")\n                        params.Result = string(b)\n                    }\n                }\n            }\n\n            writer := bytes.NewBufferString(\"\")\n            params.Dbs = dbs\n            t.Execute(writer, params)\n            ctx.Header(\"content-type\", \"text/html; charset=utf-8\")\n            ctx.String(200, writer.String())\n        })\n    }\n\n    r.Run(\":8200\")\n}\n</code></pre>"},{"location":"go/json%E6%A0%BC%E5%BC%8F%E5%8C%96/","title":"Json\u683c\u5f0f\u5316","text":""},{"location":"go/json%E6%A0%BC%E5%BC%8F%E5%8C%96/#int","title":"\u5b57\u6bb5\u517c\u5bb9\u5b57\u7b26\u4e32\u6216int","text":""},{"location":"go/json%E6%A0%BC%E5%BC%8F%E5%8C%96/#jsonnumber","title":"\u4f7f\u7528<code>json.Number</code>","text":"json.Number.go<pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n)\n\ntype Data struct {\n    Value json.Number `json:\"value\"`\n}\n\nfunc main() {\n    // JSON with int\n    jsonInt := `{\"value\": 123}`\n    var dataInt Data\n    err := json.Unmarshal([]byte(jsonInt), &amp;dataInt)\n    if err != nil {\n        fmt.Println(\"Error unmarshaling int:\", err)\n        return\n    }\n    intValue, err := dataInt.Value.Int64()\n    if err != nil {\n        fmt.Println(\"Error converting json.Number to int64 for int:\", err)\n        return\n    }\n    fmt.Printf(\"Parsed int value: %d (type: %T)\\n\", intValue, intValue)\n\n    // JSON with string\n    jsonString := `{\"value\": \"456\"}`\n    var dataString Data\n    err = json.Unmarshal([]byte(jsonString), &amp;dataString)\n    if err != nil {\n        fmt.Println(\"Error unmarshaling string:\", err)\n        return\n    }\n    stringValue, err := dataString.Value.Int64() // json.Number handles string conversion\n    if err != nil {\n        fmt.Println(\"Error converting json.Number to int64 for string:\", err)\n        return\n    }\n    fmt.Printf(\"Parsed string value: %d (type: %T)\\n\", stringValue, stringValue)\n}\n</code></pre>"},{"location":"go/json%E6%A0%BC%E5%BC%8F%E5%8C%96/#unmarshaljson","title":"\u4f7f\u7528<code>UnmarshalJSON</code>\u81ea\u5b9a\u4e49\u7c7b\u578b","text":"Unmarshal.go<pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"strconv\"\n)\n\ntype FlexibleInt int\n\nfunc (fi *FlexibleInt) UnmarshalJSON(b []byte) error {\n    // Try to unmarshal as an int\n    var i int\n    if err := json.Unmarshal(b, &amp;i); err == nil {\n        *fi = FlexibleInt(i)\n        return nil\n    }\n\n    // If that fails, try to unmarshal as a string and convert\n    var s string\n    if err := json.Unmarshal(b, &amp;s); err == nil {\n        parsedInt, err := strconv.Atoi(s)\n        if err != nil {\n            return fmt.Errorf(\"failed to convert string to int: %w\", err)\n        }\n        *fi = FlexibleInt(parsedInt)\n        return nil\n    }\n\n    return fmt.Errorf(\"failed to unmarshal as int or string: %s\", string(b))\n}\n\ntype AnotherData struct {\n    Value FlexibleInt `json:\"value\"`\n}\n\nfunc main() {\n    // JSON with int\n    jsonInt := `{\"value\": 789}`\n    var dataInt AnotherData\n    err := json.Unmarshal([]byte(jsonInt), &amp;dataInt)\n    if err != nil {\n        fmt.Println(\"Error unmarshaling int:\", err)\n        return\n    }\n    fmt.Printf(\"Parsed int value: %d (type: %T)\\n\", dataInt.Value, dataInt.Value)\n\n    // JSON with string\n    jsonString := `{\"value\": \"1011\"}`\n    var dataString AnotherData\n    err = json.Unmarshal([]byte(jsonString), &amp;dataString)\n    if err != nil {\n        fmt.Println(\"Error unmarshaling string:\", err)\n        return\n    }\n    fmt.Printf(\"Parsed string value: %d (type: %T)\\n\", dataString.Value, dataString.Value)\n}\n</code></pre>"},{"location":"go/log/","title":"Log","text":""},{"location":"go/log/#_1","title":"\u683c\u5f0f\u5316","text":"<pre><code>package main\n\nimport \"log\"\n\nfunc main() {\n    log.SetFlags(log.Ldate | log.Ltime | log.Llongfile)\n    log.Fatalln(\"hello world\")\n}\n</code></pre>"},{"location":"go/log/#zap","title":"zap","text":"<p>log.go<pre><code>package v7\n\nimport \"go.uber.org/zap\"\n\nvar sugar *zap.SugaredLogger\n\nfunc init() {\n    logger, _ := zap.NewDevelopment()\n    defer logger.Sync() // flushes buffer, if any\n    sugar = logger.Sugar()\n}\n</code></pre> json \u8f93\u51fa <pre><code>sugar.Infow(\"msg\",\"key\",\"val\",\"key1\",\"val1\",)\n</code></pre></p>"},{"location":"go/mod/","title":"Mod","text":""},{"location":"go/mod/#_1","title":"\u8bbe\u7f6e\u4e2d\u56fd\u955c\u50cf","text":"<pre><code>go env -w GO111MODULE=on\ngo env -w GOPROXY=https://goproxy.cn,direct\n</code></pre>"},{"location":"go/mod/#_2","title":"\u5347\u7ea7\u6240\u6709\u5305","text":"<pre><code>go get -u\n</code></pre>"},{"location":"go/mod/#_3","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>https://goproxy.cn/</li> <li>https://go.dev/ref/mod</li> </ul>"},{"location":"go/nested/","title":"\u5d4c\u5957","text":"<p>https://go.dev/play/p/lcQg8rXk03I</p> t.go<pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n\n    \"github.com/samber/lo\"\n)\n\ntype Item struct {\n    Id       int\n    Name     string\n    Pid      int\n    Children []Item\n}\n\nfunc toNested(list []Item, pid int) []Item {\n    return lo.Reduce(list, func(agg []Item, item Item, index int) []Item {\n        if pid == item.Pid {\n            item.Children = toNested(list, item.Id)\n            return append(agg, item)\n        } else {\n            return agg\n        }\n\n    }, []Item{})\n}\n\nfunc main() {\n\n    list := []Item{\n        Item{\n            Id:   1,\n            Name: \"1\",\n            Pid:  0,\n        },\n        Item{\n            Id:   2,\n            Name: \"1-2\",\n            Pid:  1,\n        },\n        Item{\n            Id:   3,\n            Name: \"3\",\n            Pid:  0,\n        },\n        Item{\n            Id:   4,\n            Name: \"4\",\n            Pid:  0,\n        },\n        Item{\n            Id:   5,\n            Name: \"4-5\",\n            Pid:  4,\n        },\n        Item{\n            Id:   6,\n            Name: \"1-2-6\",\n            Pid:  2,\n        },\n    }\n\n    result := toNested(list, 0)\n    fmt.Printf(\"%v\\n\", result)\n\n    jsonb, _ := json.Marshal(result)\n    fmt.Println(string(jsonb))\n}\n</code></pre>"},{"location":"go/request/","title":"Request","text":""},{"location":"go/request/#http","title":"http\u5c01\u88c5","text":"helper/http.go<pre><code>package helper\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"io\"\n    \"net/http\"\n    \"net/url\"\n    \"strings\"\n)\n\ntype HTTPMethod int\n\nconst (\n    GET HTTPMethod = iota\n    POST\n    PUT\n    PATCH\n    DELETE\n)\n\nfunc (s HTTPMethod) String() string {\n    switch s {\n    case GET:\n        return \"GET\"\n    case POST:\n        return \"POST\"\n    case PUT:\n        return \"PUT\"\n    case PATCH:\n        return \"PATCH\"\n    case DELETE:\n        return \"DELETE\"\n    }\n    return \"unknown\"\n}\n\nfunc MakeHTTPRequest[T any](urlFull string, method string, headers map[string]string, query url.Values, body io.Reader, responseType T) (T, error) {\n    client := http.Client{}\n\n    // format url\n    u, err := url.Parse(urlFull)\n    if err != nil {\n        return responseType, err\n    }\n\n    // format query\n    q := u.Query()\n\n    for k, v := range query {\n        q.Set(k, strings.Join(v, \",\"))\n    }\n    u.RawQuery = q.Encode()\n\n    // init http\n    req, err := http.NewRequest(method, u.String(), body)\n    if err != nil {\n        return responseType, err\n    }\n    // init header\n    for k, v := range headers {\n        req.Header.Set(k, v)\n    }\n    // do request\n    res, err := client.Do(req)\n    if err != nil {\n        return responseType, err\n    }\n    // warning empty response\n    if res == nil {\n        return responseType, fmt.Errorf(\"\")\n    }\n    defer res.Body.Close()\n\n    // no 200\n    if res.StatusCode != http.StatusOK {\n        return responseType, fmt.Errorf(\"\")\n    }\n    // read body\n    resP, err := io.ReadAll(res.Body)\n    if err != nil {\n        return responseType, err\n    }\n\n    var resO T\n    err = json.Unmarshal(resP, &amp;resO)\n    if err != nil {\n        return responseType, err\n    }\n\n    return resO, nil\n}\n</code></pre> <p>\u4f7f\u7528</p> <pre><code>    testurl := \"http://localhost:8082\"\n\n    headers := map[string]string{\n        \"Accept\": \"application/vnd.github.v3+json\",\n    }\n\n    queryParameters := url.Values{}\n    queryParameters.Add(\"time\", time.Now().GoString())\n\n    var response Info\n\n    // get\n    response, err := helper.MakeHTTPRequest(testurl+\"/get\", helper.GET.String(), headers, queryParameters, nil, response)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(response)\n\n    // post any response\n    var res map[string]interface{}\n    body := bytes.NewBufferString(`{\"name\": \"test\"}`)\n    res, err = helper.MakeHTTPRequest(testurl+\"/post\", helper.POST.String(), headers, nil, body, res)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(res)\n</code></pre>"},{"location":"go/sql/","title":"\u901a\u7528sql\u63a5\u53e3","text":"t.go<pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"log\"\n    \"net/http\"\n    \"strings\"\n\n    \"github.com/gin-gonic/gin\"\n    \"gorm.io/driver/mysql\"\n    \"gorm.io/gorm\"\n)\n\n// DB \u53d8\u91cf\nvar db *gorm.DB\n\n// \u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\nfunc initDB() {\n    var err error\n    dsn := \"user:password@tcp(127.0.0.1:3306)/dbname?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\"\n    db, err = gorm.Open(mysql.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        log.Fatal(\"failed to connect to database:\", err)\n    }\n}\n\n// \u6267\u884c SQL \u8bed\u53e5\nfunc executeSQL(c *gin.Context) {\n    var request struct {\n        SQL string `json:\"sql\"`\n    }\n\n    if err := c.ShouldBindJSON(&amp;request); err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Invalid request\"})\n        return\n    }\n\n    sql := strings.TrimSpace(request.SQL)\n    var result interface{}\n\n    // \u5224\u65ad SQL \u7c7b\u578b\u5e76\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\n    switch {\n    case strings.HasPrefix(sql, \"SELECT\"):\n        rows, err := db.Raw(sql).Rows()\n        if err != nil {\n            c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})\n            return\n        }\n        defer rows.Close()\n\n        columns, err := rows.Columns()\n        if err != nil {\n            c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})\n            return\n        }\n\n        results := []map[string]interface{}{}\n        for rows.Next() {\n            values := make([]interface{}, len(columns))\n            for i := range values {\n                values[i] = new(interface{})\n            }\n            if err := rows.Scan(values...); err != nil {\n                c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})\n                return\n            }\n\n            row := make(map[string]interface{})\n            for i, col := range columns {\n                val := *(values[i].(*interface{}))\n                switch v := val.(type) {\n                case []byte:\n                    row[col] = string(v)\n                default:\n                    row[col] = v\n                }\n            }\n            results = append(results, row)\n        }\n        result = results\n\n    case strings.HasPrefix(sql, \"INSERT\"), strings.HasPrefix(sql, \"UPDATE\"), strings.HasPrefix(sql, \"DELETE\"):\n        if err := db.Exec(sql).Error; err != nil {\n            c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})\n            return\n        }\n        result = gin.H{\"message\": \"Query executed successfully\"}\n\n    default:\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Unsupported SQL statement\"})\n        return\n    }\n\n    c.JSON(http.StatusOK, result)\n}\n\nfunc main() {\n    // \u521d\u59cb\u5316\u6570\u636e\u5e93\n    initDB()\n\n    // \u521b\u5efa Gin \u8def\u7531\n    r := gin.Default()\n\n    // \u8bbe\u7f6e\u6267\u884c SQL \u7684\u8def\u7531\n    r.POST(\"/execute\", executeSQL)\n\n    // \u542f\u52a8\u670d\u52a1\u5668\n    if err := r.Run(\":8080\"); err != nil {\n        log.Fatal(\"failed to start server:\", err)\n    }\n}\n</code></pre>"},{"location":"go/url/","title":"Url","text":""},{"location":"go/url/#url-query","title":"url \u589e\u52a0query","text":"<p>https://github.com/google/go-querystring  </p> uri.go<pre><code>func UrlAppend(uri string, obj map[string]string) string {\n    u1, err := url.Parse(uri)\n    if err != nil {\n        return uri\n    }\n    q := u1.Query()\n    for k, v := range obj {\n        q.Add(k, v)\n    }\n    u1.RawQuery = q.Encode()\n    return u1.String()\n}\n</code></pre>"},{"location":"go/zip-server/","title":"Zip server","text":"<p>\u4e0a\u4f20zip\u6587\u4ef6\uff0c\u89e3\u538b\u51fa\u9759\u6001\u76ee\u5f55</p> <p>zip \u51fa\u73b0\u4e2d\u6587\u4e71\u7801\u4f7f\u7528 <code>unzip -O GBK xx.zip</code></p> main.go<pre><code>package main\n\nimport (\n    \"archive/zip\"\n    \"errors\"\n    \"fmt\"\n    \"io\"\n    \"io/ioutil\"\n    \"log\"\n    \"os\"\n    \"path/filepath\"\n    \"regexp\"\n    \"strings\"\n    \"unicode/utf8\"\n\n    \"github.com/gofiber/fiber/v2\"\n    \"github.com/gofiber/fiber/v2/middleware/logger\"\n    \"golang.org/x/text/encoding/simplifiedchinese\"\n)\n\nvar index = `\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form method=\"post\" action=\"/upload\" enctype=\"multipart/form-data\" accept-charset=\"utf-8\"&gt;\n        &lt;input name=\"document\" type=\"file\" accept=\".zip,\" required /&gt;\n        &lt;button type=\"submit\"&gt;upload&lt;/button&gt;\n    &lt;/form&gt;\n    &lt;fieldset&gt;\n        &lt;legend&gt;Index&lt;/legend&gt;\n        &lt;ul&gt;%s&lt;/ul&gt;\n    &lt;/fieldset&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n`\n\nfunc makeSureFolder(path string) {\n    if _, err := os.Stat(path); errors.Is(err, os.ErrNotExist) {\n        err := os.Mkdir(path, os.ModePerm)\n        if err != nil {\n            log.Fatal(err)\n        }\n    }\n}\n\n// https://golang.cafe/blog/golang-unzip-file-example.html\nfunc unZip(dst, src string) (err error) {\n    archive, err := zip.OpenReader(src)\n    if err != nil {\n        return err\n    }\n    defer archive.Close()\n\n    for _, f := range archive.File {\n\n        fmt.Println(utf8.Valid([]byte(f.Name)))\n        fname := f.Name\n        // \u8f6cGBK\n        if utf8.Valid([]byte(fname)) != true {\n            fname, _ = simplifiedchinese.GBK.NewDecoder().String(f.Name)\n            //fname, _, _ := transform.String(simplifiedchinese.GBK.NewDecoder(), f.Name)\n        }\n        filePath := filepath.Join(dst, fname)\n        fmt.Println(\"unzipping file \", filePath)\n\n        if !strings.HasPrefix(filePath, filepath.Clean(dst)+string(os.PathSeparator)) {\n            fmt.Println(\"invalid file path\")\n            return\n        }\n        if f.FileInfo().IsDir() {\n            fmt.Println(\"creating directory...\")\n            os.MkdirAll(filePath, os.ModePerm)\n            continue\n        }\n\n        if err := os.MkdirAll(filepath.Dir(filePath), os.ModePerm); err != nil {\n            return err\n        }\n\n        dstFile, err := os.OpenFile(filePath, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, f.Mode())\n        if err != nil {\n            return err\n        }\n\n        fileInArchive, err := f.Open()\n        if err != nil {\n            return err\n        }\n\n        if _, err := io.Copy(dstFile, fileInArchive); err != nil {\n            return err\n        }\n\n        dstFile.Close()\n        fileInArchive.Close()\n    }\n    return nil\n}\n\nfunc main() {\n    makeSureFolder(\"public\")\n    app := fiber.New(fiber.Config{\n        BodyLimit: 10 * 1024 * 1024,\n    })\n    app.Use(logger.New())\n    app.Static(\"/\", \"./public\")\n\n    app.Get(\"/\", func(c *fiber.Ctx) error {\n        c.Set(fiber.HeaderContentType, fiber.MIMETextHTMLCharsetUTF8)\n\n        var fileitem string\n        files, err := ioutil.ReadDir(\"./public\")\n        if err != nil {\n            log.Fatal(err)\n        }\n        for _, f := range files {\n            fileitem += fmt.Sprintf(\"&lt;li&gt;&lt;a href='/%s/'&gt;%s&lt;/a&gt;&lt;/li&gt;\", f.Name(), f.Name())\n        }\n\n        return c.SendString(fmt.Sprintf(index, fileitem))\n    })\n\n    // Routes\n    app.Post(\"/upload\", func(c *fiber.Ctx) error {\n        // Get first file from form field \"document\":\n        file, err := c.FormFile(\"document\")\n        if err != nil {\n            return err\n        }\n\n        filename := fmt.Sprintf(\"./public/%s\", file.Filename)\n        ext := filepath.Ext(filename)\n        matched, err := regexp.Match(\"^.zip$\", []byte(ext))\n        if err != nil {\n            return err\n        }\n        if matched == false {\n            return errors.New(\"only support .zip file.\")\n        }\n\n        // Save file to root directory:\n        err = c.SaveFile(file, filename)\n        if err != nil {\n            return err\n        }\n        err = unZip(\"./public\", filename)\n        if err != nil {\n            return err\n        }\n\n        return c.Redirect(\"/\")\n    })\n\n    // Start server\n    log.Fatal(app.Listen(\":8989\"))\n}\n</code></pre>"},{"location":"go/%E5%B8%B8%E7%94%A8utils/","title":"\u5e38\u7528utils","text":""},{"location":"go/%E5%B8%B8%E7%94%A8utils/#utils","title":"utils","text":"<p>\u7b80\u6d01\u597d\u7528\uff0c\u65e0\u4e09\u65b9\u4f9d\u8d56\uff0c\u53ef\u76f4\u63a5\u590d\u5236\u4ee3\u7801</p>"},{"location":"go/%E5%B8%B8%E7%94%A8utils/#go-v118","title":"go v1.18\u4ee5\u4e0a","text":"<ul> <li>https://github.com/samber/lo</li> <li>https://github.com/gookit</li> <li>https://github.com/duke-git/lancet</li> <li>https://github.com/tidwall/gjson</li> </ul>"},{"location":"go/%E5%B8%B8%E7%94%A8utils/#go-v118_1","title":"go v1.18 \u4ee5\u4e0b","text":"<ul> <li>https://github.com/Ompluscator/dynamic-struct/</li> <li>https://github.com/rbrahul/gofp</li> <li>https://github.com/duke-git/lancet</li> </ul>"},{"location":"go/%E7%BC%93%E5%AD%98/","title":"\u7f13\u5b58","text":"<p>\u5229\u7528 singleflight \u548c \u5206\u5e03\u5f0f\u9501(redis) \u9632\u6b62\u5927\u6d41\u91cf\u76f4\u63a5\u6253\u5230\u6570\u636e\u5e93</p> <p>\u4f7f\u7528 SetNX</p> cache.go<pre><code>package main\n\nimport (\n    \"context\"\n    \"encoding/json\"\n    \"log\"\n    \"net/http\"\n    \"time\"\n\n    \"github.com/go-redis/redis/v8\"\n    \"golang.org/x/sync/singleflight\"\n)\n\nvar (\n    localGroup  singleflight.Group\n    redisClient *redis.Client\n)\n\n// simulateExpensiveTask \u6a21\u62df\u4e00\u4e2a\u8017\u65f6\u64cd\u4f5c\uff0c\u5982\u6570\u636e\u5e93\u67e5\u8be2\u6216\u8c03\u7528\u5916\u90e8 API\u3002\nfunc simulateExpensiveTask(key string) (string, error) {\n    log.Printf(\"[Expensive Task] Performing for key: %s\\n\", key)\n    time.Sleep(2 * time.Second) // \u6a21\u62df\u8017\u65f6\n    return \"result-for-\" + key, nil\n}\n\n// getWithDistributedSingleflight \u4f7f\u7528 singleflight \u548c Redis \u9501\u534f\u8c03\u5e76\u53d1\u8bf7\u6c42\u3002\nfunc getWithDistributedSingleflight(ctx context.Context, key string) (string, error) {\n    // 1. \u4f7f\u7528 localGroup \u8fdb\u884c\u8fdb\u7a0b\u5185 singleflight\u3002\n    // \u8fd9\u53ef\u4ee5\u9632\u6b62\u5355\u4e2a\u670d\u52a1\u5b9e\u4f8b\u4e0a\u7684 \"\u60ca\u7fa4\u6548\u5e94\"\u3002\n    val, err, _ := localGroup.Do(key, func() (interface{}, error) {\n        // --- \u8fd9\u91cc\u5f00\u59cb\u662f\u5206\u5e03\u5f0f\u9501\u7684\u903b\u8f91 ---\n        distributedLockKey := \"lock:\" + key\n        // 2. \u5c1d\u8bd5\u83b7\u53d6\u5206\u5e03\u5f0f\u9501\uff0c\u5e26\u8d85\u65f6\u3002\n        lock := redisClient.SetNX(ctx, distributedLockKey, \"locked\", 10*time.Second)\n\n        // 3. \u68c0\u67e5\u662f\u5426\u6210\u529f\u83b7\u53d6\u9501\u3002\n        if !lock.Val() {\n            // \u5982\u679c\u672a\u80fd\u83b7\u53d6\u9501\uff0c\u8bf4\u660e\u53e6\u4e00\u4e2a\u8282\u70b9\u6b63\u5728\u5904\u7406\u3002\n            // \u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u7b49\u5f85\u5e76\u91cd\u8bd5\uff0c\u6216\u8005\u76f4\u63a5\u6267\u884c\u4efb\u52a1\uff08\u53d6\u51b3\u4e8e\u5bb9\u5fcd\u5ea6\uff09\u3002\n            // \u5728\u6b64\u7b80\u5355\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u518d\u6b21\u6267\u884c\u4efb\u52a1\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u53ef\u4ee5\u7b49\u5f85\u5e76\u91cd\u65b0\u68c0\u67e5\u7f13\u5b58\u3002\n            log.Printf(\"[Distributed Lock] Failed to get lock for key: %s, another instance is working.\\n\", key)\n            time.Sleep(3 * time.Second) // \u6a21\u62df\u7b49\u5f85\n            return simulateExpensiveTask(key)\n        }\n        defer redisClient.Del(ctx, distributedLockKey) // \u786e\u4fdd\u9501\u88ab\u91ca\u653e\n\n        // 4. \u83b7\u5f97\u9501\u540e\uff0c\u518d\u6b21\u68c0\u67e5\u7f13\u5b58\uff08\u53ef\u9009\u4f46\u63a8\u8350\uff09\u3002\n        // ... \u8fd9\u91cc\u53ef\u4ee5\u6dfb\u52a0\u7f13\u5b58\u68c0\u67e5\u903b\u8f91 ...\n\n        // 5. \u6267\u884c\u8017\u65f6\u64cd\u4f5c\u3002\n        result, err := simulateExpensiveTask(key)\n        if err != nil {\n            return nil, err\n        }\n\n        // 6. \u5c06\u7ed3\u679c\u5b58\u5165\u7f13\u5b58\uff0c\u4ee5\u4fbf\u5176\u4ed6\u5b9e\u4f8b\u4f7f\u7528\u3002\n        // ... \u8fd9\u91cc\u53ef\u4ee5\u6dfb\u52a0\u7f13\u5b58\u5b58\u50a8\u903b\u8f91 ...\n        return result, nil\n    })\n\n    if err != nil {\n        return \"\", err\n    }\n    return val.(string), nil\n}\n\n// handleRequest \u662f HTTP \u8bf7\u6c42\u7684\u5904\u7406\u51fd\u6570\u3002\nfunc handleRequest(w http.ResponseWriter, r *http.Request) {\n    // \u4ece URL \u67e5\u8be2\u53c2\u6570\u4e2d\u83b7\u53d6\u952e\u3002\n    key := r.URL.Query().Get(\"key\")\n    if key == \"\" {\n        http.Error(w, \"Missing 'key' parameter\", http.StatusBadRequest)\n        return\n    }\n\n    // \u8c03\u7528\u6211\u4eec\u7684\u5206\u5e03\u5f0f singleflight \u51fd\u6570\u3002\n    result, err := getWithDistributedSingleflight(r.Context(), key)\n    if err != nil {\n        http.Error(w, err.Error(), http.StatusInternalServerError)\n        return\n    }\n\n    // \u8fd4\u56de\u7ed3\u679c\u3002\n    w.Header().Set(\"Content-Type\", \"application/json\")\n    response := map[string]string{\"result\": result}\n    json.NewEncoder(w).Encode(response)\n}\n\nfunc main() {\n    // \u521d\u59cb\u5316 Redis \u5ba2\u6237\u7aef\u3002\u786e\u4fdd\u60a8\u7684 Redis \u670d\u52a1\u6b63\u5728\u8fd0\u884c\u3002\n    redisClient = redis.NewClient(&amp;redis.Options{\n        Addr: \"192.168.20.162:6379\", // \u66ff\u6362\u4e3a\u60a8\u7684 Redis \u5730\u5740\n    })\n    // \u68c0\u67e5 Redis \u8fde\u63a5\u3002\n    _, err := redisClient.Ping(context.Background()).Result()\n    if err != nil {\n        log.Fatalf(\"Could not connect to Redis: %v\", err)\n    }\n\n    // \u6ce8\u518c HTTP \u5904\u7406\u51fd\u6570\u3002\n    http.HandleFunc(\"/fetch\", handleRequest)\n\n    log.Println(\"Server started on :8080\")\n    // \u542f\u52a8 HTTP \u670d\u52a1\u5668\u3002\n    if err := http.ListenAndServe(\":8080\", nil); err != nil {\n        log.Fatalf(\"Server failed to start: %v\", err)\n    }\n}\n</code></pre> <p>\u4f7f\u7528 bsm/redislock lock.go<pre><code>package main\n\nimport (\n    \"context\"\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n    \"net/http\"\n    \"time\"\n\n    \"github.com/bsm/redislock\"\n    \"github.com/redis/go-redis/v9\"\n    \"golang.org/x/sync/singleflight\"\n)\n\nvar (\n    localGroup  singleflight.Group\n    redisClient *redis.Client\n    locker      *redislock.Client\n)\n\n// simulateExpensiveTask \u6a21\u62df\u4e00\u4e2a\u8017\u65f6\u64cd\u4f5c\uff0c\u5982\u6570\u636e\u5e93\u67e5\u8be2\u3002\nfunc simulateExpensiveTask(key string) (string, error) {\n    log.Printf(\"[Expensive Task] Performing for key: %s\\n\", key)\n    time.Sleep(2 * time.Second) // \u6a21\u62df\u8017\u65f6\n    return \"result-for-\" + key, nil\n}\n\n// getWithDistributedSingleflight \u4f7f\u7528 singleflight \u548c bsm/redislock \u534f\u8c03\u5e76\u53d1\u8bf7\u6c42\u3002\nfunc getWithDistributedSingleflight(ctx context.Context, key string) (string, error) {\n    // 1. \u9996\u5148\u5c1d\u8bd5\u4ece Redis \u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e\u3002\n    cachedVal, err := redisClient.Get(ctx, \"cache:\"+key).Result()\n    if err == nil {\n        log.Printf(\"[Cache Hit] Serving from cache for key: %s\\n\", key)\n        return cachedVal, nil\n    }\n    if err != redis.Nil {\n        return \"\", fmt.Errorf(\"failed to get from cache: %w\", err)\n    }\n\n    // 2. \u5982\u679c\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u4f7f\u7528 localGroup \u8fdb\u884c\u8fdb\u7a0b\u5185 singleflight\u3002\n    val, err, _ := localGroup.Do(key, func() (interface{}, error) {\n        // --- \u8fd9\u91cc\u5f00\u59cb\u662f\u5206\u5e03\u5f0f\u9501\u548c\u6570\u636e\u52a0\u8f7d\u903b\u8f91 ---\n        distributedLockKey := \"lock:\" + key\n\n        // 3. \u518d\u6b21\u68c0\u67e5\u7f13\u5b58\uff0c\u9632\u6b62\u5728\u7b49\u5f85 localGroup \u671f\u95f4\uff0c\u5176\u4ed6 goroutine \u5df2\u5b8c\u6210\u4efb\u52a1\u5e76\u66f4\u65b0\u4e86\u7f13\u5b58\u3002\n        cachedVal, err := redisClient.Get(ctx, \"cache:\"+key).Result()\n        if err == nil {\n            log.Printf(\"[Local Singleflight Hit Cache] Serving from cache for key: %s\\n\", key)\n            return cachedVal, nil\n        }\n\n        // 4. \u5c1d\u8bd5\u83b7\u53d6\u5206\u5e03\u5f0f\u9501\uff0c\u5e26\u8d85\u65f6\u3002\n        lock, err := locker.Obtain(ctx, distributedLockKey, 10*time.Second, nil)\n        if err == redislock.ErrNotObtained {\n            // \u5982\u679c\u672a\u80fd\u83b7\u53d6\u9501\uff0c\u8bf4\u660e\u53e6\u4e00\u4e2a\u8282\u70b9\u6b63\u5728\u5904\u7406\u3002\n            // \u6b64\u65f6\u53ef\u4ee5\u7b49\u5f85\u4e00\u4e2a\u77ed\u65f6\u95f4\uff0c\u7136\u540e\u91cd\u8bd5\u6216\u518d\u6b21\u68c0\u67e5\u7f13\u5b58\u3002\n            log.Printf(\"[Distributed Lock] Failed to get lock for key: %s, another instance is working. Waiting...\\n\", key)\n            time.Sleep(3 * time.Second) // \u6a21\u62df\u7b49\u5f85\n            // \u518d\u6b21\u68c0\u67e5\u7f13\u5b58\u3002\n            cachedVal, err := redisClient.Get(ctx, \"cache:\"+key).Result()\n            if err == nil {\n                log.Printf(\"[Distributed Lock Wait Hit Cache] Serving from cache for key: %s\\n\", key)\n                return cachedVal, nil\n            }\n            return nil, fmt.Errorf(\"could not obtain lock and cache still empty\")\n        } else if err != nil {\n            return nil, fmt.Errorf(\"failed to obtain lock: %w\", err)\n        }\n        defer lock.Release(ctx) // \u786e\u4fdd\u9501\u88ab\u91ca\u653e\n\n        log.Printf(\"[Distributed Lock] Obtained lock for key: %s. Performing expensive task.\\n\", key)\n\n        // 5. \u83b7\u5f97\u9501\u540e\uff0c\u6267\u884c\u8017\u65f6\u64cd\u4f5c\u3002\n        result, err := simulateExpensiveTask(key)\n        if err != nil {\n            return nil, err\n        }\n\n        // 6. \u5c06\u7ed3\u679c\u5b58\u5165 Redis \u7f13\u5b58\uff0c\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u3002\n        cacheTTL := 5 * time.Minute\n        if err := redisClient.Set(ctx, \"cache:\"+key, result, cacheTTL).Err(); err != nil {\n            log.Printf(\"[Cache] Failed to set cache for key: %s, err: %v\\n\", key, err)\n        } else {\n            log.Printf(\"[Cache] Set cache for key: %s\\n\", key)\n        }\n\n        return result, nil\n    })\n\n    if err != nil {\n        return \"\", err\n    }\n    return val.(string), nil\n}\n\n// handleRequest \u662f HTTP \u8bf7\u6c42\u7684\u5904\u7406\u51fd\u6570\u3002\nfunc handleRequest(w http.ResponseWriter, r *http.Request) {\n    key := r.URL.Query().Get(\"key\")\n    if key == \"\" {\n        http.Error(w, \"Missing 'key' parameter\", http.StatusBadRequest)\n        return\n    }\n\n    result, err := getWithDistributedSingleflight(r.Context(), key)\n    if err != nil {\n        http.Error(w, err.Error(), http.StatusInternalServerError)\n        return\n    }\n\n    w.Header().Set(\"Content-Type\", \"application/json\")\n    response := map[string]string{\"result\": result}\n    json.NewEncoder(w).Encode(response)\n}\n\nfunc main() {\n    redisClient = redis.NewClient(&amp;redis.Options{\n        Addr: \"192.168.20.162:6379\", // \u66ff\u6362\u4e3a\u4f60\u7684 Redis \u5730\u5740\n    })\n\n    locker = redislock.New(redisClient)\n\n    // \u68c0\u67e5 Redis \u8fde\u63a5\u3002\n    _, err := redisClient.Ping(context.Background()).Result()\n    if err != nil {\n        log.Fatalf(\"Could not connect to Redis: %v\", err)\n    }\n\n    http.HandleFunc(\"/fetch\", handleRequest)\n\n    log.Println(\"Server started on :8080\")\n    if err := http.ListenAndServe(\":8080\", nil); err != nil {\n        log.Fatalf(\"Server failed to start: %v\", err)\n    }\n}\n</code></pre></p>"},{"location":"go/%E8%AF%BBjson%E6%96%87%E4%BB%B6/","title":"\u8bfbjson\u6587\u4ef6","text":"<p>https://golangdocs.com/golang-read-json-file</p>"},{"location":"go/%E8%AF%BBjson%E6%96%87%E4%BB%B6/#_1","title":"\u660e\u786e\u7c7b\u578b","text":"<pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"io/ioutil\"\n    \"log\"\n)\n\n// The data struct for the decoded data\n// Notice that all fields must be exportable!\ntype Data struct {\n    Origin string\n    User   string\n    Active bool\n}\n\nfunc main() {\n    // Let's first read the `config.json` file\n    content, err := ioutil.ReadFile(\"./config.json\")\n    if err != nil {\n        log.Fatal(\"Error when opening file: \", err)\n    }\n\n    // Now let's unmarshall the data into `payload`\n    var payload Data\n    err = json.Unmarshal(content, &amp;payload)\n    if err != nil {\n        log.Fatal(\"Error during Unmarshal(): \", err)\n    }\n\n    // Let's print the unmarshalled data!\n    log.Printf(\"origin: %s\\n\", payload.Origin)\n    log.Printf(\"user: %s\\n\", payload.User)\n    log.Printf(\"status: %t\\n\", payload.Active)\n}\n</code></pre>"},{"location":"go/%E8%AF%BBjson%E6%96%87%E4%BB%B6/#_2","title":"\u4e0d\u786e\u5b9a\u7c7b\u578b","text":"<pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"io/ioutil\"\n    \"log\"\n)\n\nfunc main() {\n    // Let's first read the `config.json` file\n    content, err := ioutil.ReadFile(\"./config.json\")\n    if err != nil {\n        log.Fatal(\"Error when opening file: \", err)\n    }\n\n    // Now let's unmarshall the data into `payload`\n    var payload map[string]interface{}\n    err = json.Unmarshal(content, &amp;payload)\n    if err != nil {\n        log.Fatal(\"Error during Unmarshal(): \", err)\n    }\n\n    // Let's print the unmarshalled data!\n    log.Printf(\"origin: %s\\n\", payload[\"origin\"])\n    log.Printf(\"user: %s\\n\", payload[\"user\"])\n    log.Printf(\"status: %t\\n\", payload[\"active\"])\n}\n</code></pre>"},{"location":"js/jquery/ajax%20%E8%AF%B7%E6%B1%82/","title":"Ajax \u8bf7\u6c42","text":""},{"location":"js/jquery/ajax%20%E8%AF%B7%E6%B1%82/#_1","title":"\u901a\u7528","text":"<p>see doc</p> <pre><code>$.ajax({\n  url: '/xxx',\n  data: { ...data },\n  type: 'POST',\n  contentType: 'application/x-www-form-urlencoded',\n  cache: false,\n  timeout: 1000 * 1,\n  success: function (data) {},\n  error: function (err) {},\n})\n</code></pre>"},{"location":"js/jquery/bootstrap/","title":"Bootstrap","text":""},{"location":"js/jquery/bootstrap/#modal","title":"modal \u5c42\u7ea7\u95ee\u9898","text":"<p>https://stackoverflow.com/questions/19305821/multiple-modals-overlay</p> <pre><code>$(document).on({\n    'show.bs.modal': function () {\n        var zIndex = 1040 + (10 * $('.modal:visible').length);\n        $(this).css('z-index', zIndex);\n        setTimeout(function() {\n            $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');\n        }, 0);\n    },\n    'hidden.bs.modal': function() {\n        if ($('.modal:visible').length &gt; 0) {\n            // restore the modal-open class to the body element, so that scrolling works\n            // properly after de-stacking a modal.\n            setTimeout(function() {\n                $(document.body).addClass('modal-open');\n            }, 0);\n        }\n    }\n}, '.modal');\n</code></pre>"},{"location":"js/jquery/outerhtml/","title":"Outerhtml","text":"<p>see link link 1</p> <pre><code>$('#xxx').prop('outerHTML')\n</code></pre> <p>or</p> <pre><code>$('&lt;div&gt;').append($('#xxx').clone()).html();\n</code></pre>"},{"location":"js/jquery/%E6%8F%92%E4%BB%B6/","title":"\u63d2\u4ef6","text":""},{"location":"js/jquery/%E6%8F%92%E4%BB%B6/#_1","title":"\u57fa\u672c\u5199\u6cd5","text":"<p>see doc</p> <pre><code>;(function ($) {\n  $.fn.pluginname = function (options) {\n    var opts = $.extend({}, $.fn.pluginname.defaults, options)\n    // do something\n  }\n  $.fn.pluginname.defaults = {}\n})(jQuery)\n</code></pre>"},{"location":"js/layui/laydate%20%E6%97%B6%E9%97%B4/","title":"Laydate \u65f6\u95f4","text":""},{"location":"js/layui/laydate%20%E6%97%B6%E9%97%B4/#_1","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>laydate.render({\n  elem: '#signAt',\n  type: 'datetime',\n  theme: '#4996ed',\n  format: 'yyyy-MM-dd HH:mm:ss',\n  done: function () {\n    // do somethins\n  },\n})\n</code></pre>"},{"location":"js/layui/laydate%20%E6%97%B6%E9%97%B4/#_2","title":"\u533a\u95f4","text":"<pre><code>// \u5355dom\nlaydate.render({\n  elem: '#signAt',\n  type: 'datetime',\n  theme: '#4996ed',\n  range: true, //\u6216 range: '~' \u6765\u81ea\u5b9a\u4e49\u5206\u5272\u5b57\u7b26\n  format: 'yyyy-MM-dd HH:mm:ss',\n  done: function () {\n    // do somethins\n  },\n})\n\n// \u53ccdom\nlaydate.render({\n  elem: '#test-range', //\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u6240\u5728 input \u6846\u7684\u7236\u9009\u62e9\u5668\n  //\u8bbe\u7f6e\u5f00\u59cb\u65e5\u671f\u3001\u65e5\u671f\u65e5\u671f\u7684 input \u9009\u62e9\u5668\n  range: ['#startDate', '#endDate'], //\u6570\u7ec4\u683c\u5f0f\u4e3a layui 2.6.6 \u5f00\u59cb\u65b0\u589e\n})\n</code></pre>"},{"location":"js/layui/layer%20%E5%BC%B9%E5%87%BA%E5%B1%82/","title":"Layer \u5f39\u51fa\u5c42","text":"<pre><code>// \u57fa\u7840\nlayer.msg('hello');\n\n// \u6807\u9898\nlayer.open({\n  title: 'x',\n  content: 'xxxx'\n});\n\n// \u56fe\u6807\nlayer.msg('\u4e0d\u5f00\u5fc3\u3002\u3002', {icon: 5});\n\n// \u8be2\u95ee\nlayer.confirm('is not?', function(index){\n  //do something\n\n  layer.close(index);\n});  \n</code></pre>"},{"location":"js/npm/npmrc%20%E9%85%8D%E7%BD%AE/","title":"Npmrc \u914d\u7f6e","text":""},{"location":"js/npm/npmrc%20%E9%85%8D%E7%BD%AE/#_1","title":"\u56fd\u5185","text":"<p>\u66f4\u6362\u516c\u544a  https://zhuanlan.zhihu.com/p/465424728</p> .npmrc<pre><code>registry=https://registry.npmmirror.com/\ndisturl=https://npmmirror.com/dist\nsharp_dist_base_url=https://npmmirror.com/mirrors/sharp-libvips/\nsass_binary_site=https://npmmirror.com/mirrors/node-sass/\nelectron_mirror=https://npmmirror.com/mirrors/electron/\nchromedriver_cdnurl=https://npmmirror.com/mirrors/chromedriver/\noperadriver_cdnurl=https://npmmirror.com/mirrors/operadriver/\nphantomjs_cdnurl=https://npmmirror.com/mirrors/phantomjs/\nselenium_cdnurl=https://npmmirror.com/mirrors/selenium/\nnode_inspector_cdnurl=https://npmmirror.com/mirrors/node-inspector/\npuppeteer_download_host=https://npmmirror.com/mirrors/\n</code></pre>"},{"location":"js/npm/pnpm/","title":"Pnpm","text":""},{"location":"js/npm/pnpm/#node_modules","title":"\u6241\u5e73\u5316node_modules","text":"<p>\u5b98\u65b9\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u4f46\u662f\u9488\u5bf9\u8001\u9879\u76ee\uff0c\u4e0d\u5f97\u4e0d\u8fd9\u6837\u505a</p> <pre><code># new\npnpm install --shamefully-hoist\n# old\npnpm install --shamefully-flatten\n</code></pre>"},{"location":"js/npm/pnpm/#_1","title":"\u8986\u76d6\u5305","text":"<p>\u9488\u5bf9\u5b50\u4f9d\u8d56\u4e0d\u540c\u7248\u672c\u9020\u6210\u7684\u95ee\u9898\uff0c\u7edf\u4e00\u7248\u672c</p> package.json<pre><code>{\n  \"pnpm\": {\n    \"overrides\": {\n      \"foo\": \"^1.0.0\",\n      \"quux\": \"npm:@myorg/quux@^1.0.0\",\n      \"bar@^2.1.0\": \"3.0.0\",\n      \"qar@1&gt;zoo\": \"2\"\n    }\n  }\n}\n</code></pre>"},{"location":"js/npm/windows-node%E5%A4%9A%E7%89%88%E6%9C%AC/","title":"Windows node\u591a\u7248\u672c","text":""},{"location":"js/npm/windows-node%E5%A4%9A%E7%89%88%E6%9C%AC/#_1","title":"\u4e0b\u8f7d\u53ef\u6267\u884c\u6587\u4ef6\u7248\u672c","text":"<p>Windows Binary (.zip)\uff0c\u89e3\u538b\u5230\u4e00\u4e2a\u76ee\u5f55</p>"},{"location":"js/npm/windows-node%E5%A4%9A%E7%89%88%E6%9C%AC/#cmd","title":"\u65b0\u5efacmd\u6587\u4ef6","text":"<p>\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c06<code>npm.cmd</code>\u6587\u4ef6\u62f7\u8fc7\u53bb\u5c31\u884c\uff0c\u8fd0\u884c\u547d\u4ee4\u5982<code>npm.cmd start</code></p> npm.cmd<pre><code>:: Created by npm, please don't edit manually.\n@ECHO OFF\n\nSETLOCAL\n\nSET \"NODE_EXE=&lt;\u6539\u6210\u81ea\u5df1\u7684&gt;\\node.exe\"\nset PATH=&lt;\u6539\u6210\u81ea\u5df1\u7684&gt;;%PATH%\n\n\n\nSET \"NPM_CLI_JS=&lt;\u6539\u6210\u81ea\u5df1\u7684&gt;\\node_modules\\npm\\bin\\npm-cli.js\"\n\n\"%NODE_EXE%\" \"%NPM_CLI_JS%\" %*\n</code></pre>"},{"location":"js/npm/%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC/","title":"\u591a\u4e2a\u7248\u672c","text":"<p>\u76f8\u540c\u7684\u5305\uff0c\u4e0d\u7528\u7248\u672c\uff0c\u6bd4\u5982\u9700\u8981react15\u548creact16</p> <pre><code>npm install react15@npm:react@15\n\nnpm install react16@npm:react@16\n</code></pre> <ul> <li>https://reactgo.com/npm-install-same-package-multiple-versions/</li> <li>https://docs.npmjs.com/cli/v11/configuring-npm/package-json#dependencies</li> </ul>"},{"location":"js/npm/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"js/npm/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u6253\u5370\u65e5\u5fd7","text":"<pre><code>npm install webpack --verbose\n</code></pre>"},{"location":"js/npm/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#script","title":"\u5ffd\u7565script","text":"<pre><code>npm install --ignore-scripts\n</code></pre>"},{"location":"js/npm/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","title":"\u5217\u51fa\u5b89\u88c5\u5305","text":"<p><code>global</code> \u8868\u793a\u5168\u5c40,  <code>depth</code> \u8868\u793a\u5c55\u793a\u5c42\u6570</p> <pre><code>npm list --global --depth 0\n</code></pre>"},{"location":"js/npm/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","title":"\u67e5\u770b\u5b89\u88c5\u5305\u8be6\u60c5","text":"<pre><code>npm info babel\n</code></pre>"},{"location":"js/npm/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#tgz","title":"\u4e0b\u8f7dtgz","text":"<pre><code>npm pack babel\n</code></pre>"},{"location":"js/npm/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","title":"\u5347\u7ea7\u5305","text":"<pre><code># \u5217\u51fa\nnpm outdated\n\n# \u548c`install` \u4e00\u6837\uff0c\u53ef\u4ee5\u9488\u5bf9\u4e00\u4e2a\u5305\uff0c\u6216\u8005\nnpm update &lt;xx&gt;\n\n# \u4fee\u6539`package.json`\nnpm update --save\n</code></pre>"},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u67e5\u770b\u6240\u6709\u5e94\u7528","text":"<pre><code>pm2 status\n</code></pre>"},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","title":"\u67e5\u770b\u65e5\u5fd7","text":"<pre><code>pm2 log\n</code></pre>"},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","title":"\u67e5\u770b\u8fdb\u7a0b\u8be6\u60c5","text":"<pre><code>pm2 show &lt;name/id&gt;\n</code></pre>"},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","title":"\u5e73\u6ed1\u91cd\u542f\u8fdb\u7a0b","text":"<pre><code>pm2 reload &lt;name/id&gt;\n</code></pre>"},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","title":"\u91cd\u542f\u8fdb\u7a0b\u5e76\u91cd\u65b0\u8f7d\u5165\u73af\u5883\u53d8\u91cf","text":"<pre><code>pm2 restart &lt;name/id&gt; --update-env\n</code></pre>"},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_6","title":"\u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>pm2 ecosystem init\n</code></pre>"},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8%E9%85%8D%E7%BD%AE/","title":"\u5e38\u7528\u5e94\u7528\u914d\u7f6e","text":""},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8%E9%85%8D%E7%BD%AE/#node","title":"Node \u5e94\u7528","text":"<pre><code>module.exports = {\n  apps: [\n    {\n      name: 'xxx',\n      script: 'app.js',\n      // \u673a\u5668mem\u4e3a 20g  11c\n      node_args: '--max_old_space_size=2048',\n      instances: 'max',\n      autorestart: true,\n      watch: false,\n      // max_memory_restart: '600M',\n      env: {\n        NODE_ENV: 'development',\n      },\n      env_production: {\n        NODE_ENV: 'production',\n      },\n    },\n  ],\n}\n</code></pre>"},{"location":"js/pm2/%E5%B8%B8%E7%94%A8%E5%BA%94%E7%94%A8%E9%85%8D%E7%BD%AE/#node_1","title":"\u975eNode\u5e94\u7528","text":"<p>\u4ee5 <code>django</code> \u4e3e\u4f8b, \u521b\u5efa\u6587\u4ef6 <code>ecosystem.config.js</code></p> <pre><code>module.exports = {\n  apps: [\n    {\n      name: 'django',\n      cwd: '/Users/goze/python/ac',\n      args: 'runserver 0.0.0.0:8989',\n      script: 'manage.py',\n      exec_mode: 'fork',\n      exec_interpreter: '/Users/goze/python/ac/env/bin/python',\n    },\n  ],\n}\n</code></pre>"},{"location":"js/pm2/%E6%97%A5%E5%BF%97/","title":"pm2-logrotate","text":"<pre><code>pm2 install pm2-logrotate\n\npm2 set pm2-logrotate:dateformat\n</code></pre>"},{"location":"js/script/async/","title":"Async","text":""},{"location":"js/script/babel/","title":"Babel","text":""},{"location":"js/script/babel/#js","title":"\u63d2\u5165 js \u5185\u5bb9","text":"<p>babel \u7f16\u8bd1\uff0c\u63d2\u5165<code>script</code>, see doc</p> <pre><code>var input = 'const getMessage = () =&gt; \"Hello World\";'\nvar output = Babel.transform(input, { presets: ['env'] }).code\nconsole.log(output)\nvar script = document.createElement('script')\nscript.type = 'text/javascript'\ntry {\n  script.appendChild(document.createTextNode(output))\n} catch (e) {\n  script.text = output\n}\ndocument.body.appendChild(script)\n</code></pre>"},{"location":"js/script/cleave.js/","title":"Cleave.js","text":"<p>doc</p>"},{"location":"js/script/cleave.js/#_1","title":"\u767e\u5206\u6bd4\u4f8b\u5b50","text":"<pre><code>var cleave = new Cleave('.input-phone', {\n  numeral: true,\n  prefix: '%',\n  tailPrefix: true,\n  noImmediatePrefix: true,\n  numericOnly: true,\n  // numeralDecimalScale: 0,\n  onValueChanged: function (ee) {\n    console.log(ee.target)\n  },\n})\n\n// \u8bbe\u7f6e\u503c\ncleave.setRawValue('123')\n\n// \u83b7\u53d6\u503c\ncleave.getRawValue()\n</code></pre>"},{"location":"js/script/evenbus/","title":"Evenbus","text":"<p>https://css-tricks.com/lets-create-a-lightweight-native-event-bus-in-javascript/</p>"},{"location":"js/script/evenbus/#eventbus","title":"eventbus","text":"Eventbus.js<pre><code>class EventBus {\n    constructor(description = '') {\n        this.eventTarget = document.appendChild(document.createComment(description));\n    }\n    on(type, listener) {\n        this.eventTarget.addEventListener(type, listener);\n    }\n    once(type, listener) {\n        this.eventTarget.addEventListener(type, listener, { once: true });\n    }\n    off(type, listener) {\n        this.eventTarget.removeEventListener(type, listener);\n    }\n    emit(type, detail) {\n        return this.eventTarget.dispatchEvent(new CustomEvent(type, { detail }));\n    }\n}\n\n// option\nexport default new EventBus('eventbus');\n</code></pre>"},{"location":"js/script/hybrid/","title":"Hybrid","text":""},{"location":"js/script/hybrid/#hybrid","title":"hybrid \u7b80\u5355\u4f8b\u5b50","text":"<p>\u52a8\u6001\u5168\u5c40\u51fd\u6570</p> <pre><code>function hybrid({ actionName, params, callback }) {\n  const iframe = document.createElement(\"iframe\")\n\n  const url = new URL(\"http://example.com\")\n  url.protocol = \"schema:\"\n  url.hostname = \"app.com\"\n  url.pathname = \"/\"\n\n  for (let k in params) {\n    url.searchParams.set(k, params[k])\n  }\n\n  const funcName = `action_callback_${Math.random().toString(36).slice(-5)}`\n  window[funcName] = function () {\n    callback &amp;&amp; callback(...arguments)\n  }\n\n  url.searchParams.set('action', actionName)\n  url.searchParams.set('callback', funcName)\n\n  iframe.style.display = 'none'\n  iframe.src = url.href\n  document.body.appendChild(iframe)\n}\n</code></pre>"},{"location":"js/script/hybrid/#_1","title":"\u7c7b","text":"<p>\u56fa\u5b9a\u5168\u5c40\u51fd\u6570</p> <pre><code>class Hybrid {\n  /**\n   * \n   * @param protocol \"schema:\"\n   * @param hostname \"app.com\"\n   * @param pathname \"/\"\n   * @param actionMap map\n   */\n  constructor(protocol, hostname, pathname, actionMap) {\n    this.url = new URL(\"http://example.com\")\n    this.url.protocol = protocol\n    this.url.hostname = hostname\n    this.url.pathname = pathname\n\n    this.actionMap = actionMap\n  }\n\n  run({ actionName, params }) {\n    return new Promise((resolve, reject) =&gt; {\n      if (actionName &amp;&amp; this.actionMap.has(actionName)) {\n        const url = new URL(this.url)\n        for (let k in params) {\n          url.searchParams.set(k, params[k])\n        }\n\n        const funcName = this.actionMap.get(actionName)\n        url.searchParams.set('action', actionName)\n        url.searchParams.set('callback', funcName)\n\n        window[funcName] = () =&gt; resolve(arguments)\n\n        const iframe = document.createElement(\"iframe\")\n        iframe.style.display = 'none'\n        iframe.src = url.href\n        document.body.appendChild(iframe)\n      } else {\n        reject(`no action: ${actionName}`)\n      }\n    })\n  }\n}\n</code></pre>"},{"location":"js/script/hybrid/#callback-pool","title":"\u7c7b+callback pool","text":"<p>\u56fa\u5b9a\u7c7b\u540d\u5b57\uff0c\u4f7f\u6bcf\u4e2a\u56de\u8c03\u90fd\u6267\u884c</p> <pre><code>class Hybrid {\n  /**\n   * \n   * @param protocol \"schema:\"\n   * @param hostname \"app.com\"\n   * @param pathname \"/\"\n   * @param actionMap map\n   */\n  constructor(protocol, hostname, pathname, actionMap) {\n    this.url = new URL(\"http://example.com\")\n    this.url.protocol = protocol\n    this.url.hostname = hostname\n    this.url.pathname = pathname\n\n    this.actionMap = actionMap\n\n    this.callback_pool = {}\n  }\n\n  run({ actionName, params }) {\n    return new Promise((resolve, reject) =&gt; {\n      if (actionName &amp;&amp; this.actionMap.has(actionName)) {\n        const traceID = Math.random().toString(36).slice(-5)\n        const url = new URL(this.url)\n        for (let k in params) {\n          url.searchParams.set(k, params[k])\n        }\n\n        const funcName = this.actionMap.get(actionName)\n        url.searchParams.set('action', actionName)\n        url.searchParams.set('callback', funcName)\n        url.searchParams.set('_traceID', traceID)\n\n        this.callback_pool[traceID] = () =&gt; resolve(arguments)\n        window[funcName] = () =&gt; {\n          this.callback_pool[traceID].call(null, arguments)\n          delete this.callback_pool[traceID]\n        }\n\n        const iframe = document.createElement(\"iframe\")\n        iframe.style.display = 'none'\n        iframe.src = url.href\n        document.body.appendChild(iframe)\n      } else {\n        reject(`no action: ${actionName}`)\n      }\n    })\n  }\n}\n</code></pre>"},{"location":"js/script/hybrid/#h5-app","title":"h5 \u5524\u8d77 app","text":"<ul> <li>https://www.npmjs.com/package/web-launch-app</li> <li>https://www.npmjs.com/package/web-open-app</li> <li>https://github.com/AlanZhang001/H5CallUpNative</li> </ul>"},{"location":"js/script/id/","title":"Id","text":""},{"location":"js/script/id/#_1","title":"\u751f\u6210\u968f\u673a\u6570","text":"<p>https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid</p> <pre><code>export const uniqueId  = () =&gt; Math.random().toString(36).substring(2) + Date.now().toString(36);\n</code></pre>"},{"location":"js/script/id/#shortid","title":"shortId\uff08\u57fa\u672c\u539f\u7406\uff09","text":"<pre><code>export const shortId = () =&gt; Math.random().toString(36).slice(2)\n</code></pre>"},{"location":"js/script/mobx.js/","title":"Mobx.js","text":""},{"location":"js/script/mobx.js/#_1","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u53c2\u8003\u6587\u6863 link</p> <pre><code>var data = mobx.observable({\n  a: 1,\n})\n\nmobx.autorun(function () {\n  console.log('autorun', data.a)\n})\n\ndata.a = 2\n</code></pre>"},{"location":"js/script/monaco-editor/","title":"Monaco editor","text":""},{"location":"js/script/monaco-editor/#cdn","title":"cdn \u4f8b\u5b50","text":"index.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Monaco Editor Demo&lt;/title&gt;\n    &lt;style&gt;\n        html,body{\n            margin: 0;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"editor\" style=\"width: 100vw; height: 100vh\"&gt;&lt;/div&gt;\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/monaco-editor@0.52.0/min/vs/loader.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        require.config({ paths: { vs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.52.0/min/vs' } });\n\n        require(['vs/editor/editor.main'], function () {\n            var editor = monaco.editor.create(document.getElementById('editor'), {\n                value: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n                language: 'javascript'\n            });\n\n            window.onresize = function () {\n                editor.layout();\n            };\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/script/nest/","title":"Nest","text":""},{"location":"js/script/nest/#_1","title":"\u683c\u5f0f\u5316\u6570\u636e\uff0c\u5c06\u6241\u5e73\u5316\u6570\u636e\u6811\u5f62\u5316","text":"<ul> <li>\u53c2\u8003 link 1</li> <li>\u53c2\u8003 link 2</li> </ul> nest.js<pre><code>function nested(data, pid = undefined) {\n  return data.reduce((r, e) =&gt; {\n    if (e.parentId == pid) {\n      const obj = { ...e }\n      const children = nested(data, e.id);\n      if (children.length) obj.children = children;\n      r.push(obj)\n    }\n\n    return r;\n  }, [])\n}\n</code></pre>"},{"location":"js/script/proxy/","title":"Proxy","text":""},{"location":"js/script/proxy/#proxy-with-node","title":"proxy with node","text":"<p>package version </p> <pre><code>{\n    \"express\": \"^4.18.2\",\n    \"http-proxy-middleware\": \"^2.0.6\"\n}\n</code></pre> main.js<pre><code>const express = require('express');\nconst cors = require('cors')\nconst { createProxyMiddleware, responseInterceptor } = require('http-proxy-middleware');\n\nconst app = express();\n\napp.use(cors())\napp.use('/mp4', createProxyMiddleware({ target: 'http://bos.vod.bd.xxxxx.com.cn', changeOrigin: true, pathRewrite: { '^/mp4': '' } }));\n\napp.use('/m3u8', createProxyMiddleware({\n    target: 'http://livebackold2.xxxxx.com.cn',\n    changeOrigin: true,\n    pathRewrite: { '^/m3u8': '' },\n\n    selfHandleResponse: true,\n    onProxyRes: responseInterceptor(async (responseBuffer, proxyRes, req, res) =&gt; {\n        // 302\n        if ([302, 307, 308].indexOf(proxyRes.statusCode) &gt; -1 &amp;&amp; proxyRes.headers.location) {\n            var redirect = proxyRes.headers.location\n            redirect = redirect.replace('http://livebackold2.xxxxx.com.cn', 'http://localhost:3000/m3u8')\n            res.setHeader('location', redirect)\n        }\n        const response = responseBuffer.toString('utf8');\n\n        // m3u8 link\n        if(/\\.m3u8/.test(response)) {\n            return response.replace('http://livebackold2.xxxxx.com.cn', 'http://localhost:3000/m3u8')\n        }\n\n        return responseBuffer;\n    }),\n}));\n\napp.listen(3000);\n</code></pre>"},{"location":"js/script/proxy/#cors-anywhere","title":"cors anywhere","text":"<p>\u80cc\u666f\u662f\u4e00\u4e9bm3u8\u8d44\u6e90\u8de8\u57df\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528\u63d2\u4ef6\u5bf9\u975e\u5f00\u53d1\u4eba\u5458\u592a\u590d\u6742\u4e86\u3002</p> <p><pre><code>http://localhost:8080/http://xx.xx.m3u8?q=a\n</code></pre> \u53c2\u8003\u9879\u76ee https://github.com/gozeon/cors-anywhere</p>"},{"location":"js/script/rxjs/","title":"Rxjs","text":""},{"location":"js/script/rxjs/#_1","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u53c2\u8003\u6587\u6863 link</p> <pre><code>// var sub = new rxjs.Subject()\nvar sub = new rxjs.BehaviorSubject()\nsub.next({ a: 1 })\nsub.subscribe((x) =&gt; {\n  console.log('Subscriber A', x)\n})\nsub.next({ a: 2 })\nsub.subscribe((x) =&gt; {\n  console.log('Subscriber B', x)\n  // make sure BehaviorSubject\n  console.log(sub.getValue())\n})\nsub.next(3)\n\nconsole.log('------------with other api ------------')\nconst observable = rxjs.interval(500).pipe(rxjs.take(41))\nobservable.subscribe(sub)\n</code></pre>"},{"location":"js/script/scroll/","title":"Scroll","text":""},{"location":"js/script/scroll/#iostab","title":"ios\u73af\u5883\uff0c\u8be6\u60c5\u9875\u8fd4\u56de\u5217\u8868\u9875\uff0ctab\u6d88\u5931","text":"<pre><code>onMounted(() =&gt; {\n nextTick(() =&gt; {\n  document?.scrollingElement.scrollTop = 0\n })\n})\n</code></pre> <p>\u76f8\u5173\u94fe\u63a5  </p> <ul> <li>https://github.com/youzan/vant/issues/10550</li> <li>https://blog.csdn.net/weixin_48286936/article/details/122999331</li> <li>https://www.zhangxinxu.com/wordpress/2019/02/document-scrollingelement/comment-page-1/ </li> </ul>"},{"location":"js/script/sort/","title":"Sort","text":""},{"location":"js/script/sort/#_1","title":"\u6392\u5e8f","text":"sort.js<pre><code>var arr = [1, 2, 4, 3]\n// asc\narr.sort((a, b) =&gt; a - b)\n\nvar arr = [\n    { c: 1 },\n    { c: 2 },\n    { c: 4 },\n    { c: 3 },\n]\n\n// asc\narr.sort((a, b) =&gt; a.c - b.c)\n\n// https://stackoverflow.com/questions/1129216/sort-array-of-objects-by-string-property-value\n// asc\narr.sort((a, b) =&gt; {\n\n    if (a.c - b.c &gt; 0) {\n        return 1\n    }\n\n    if (a.c - b.c &lt; 0) {\n        return -1\n    }\n\n    return 0\n})\n</code></pre>"},{"location":"js/script/template/","title":"Template","text":""},{"location":"js/script/template/#html","title":"html \u6a21\u677f","text":"<p>https://johnresig.com/blog/javascript-micro-templating/</p> tmpl.js<pre><code>// Simple JavaScript Templating\n// John Resig - https://johnresig.com/ - MIT Licensed\n(function(){\n  var cache = {};\n\n  this.tmpl = function tmpl(str, data){\n    // Figure out if we're getting a template, or if we need to\n    // load the template - and be sure to cache the result.\n    var fn = !/\\W/.test(str) ?\n      cache[str] = cache[str] ||\n        tmpl(document.getElementById(str).innerHTML) :\n\n      // Generate a reusable function that will serve as a template\n      // generator (and which will be cached).\n      new Function(\"obj\",\n        \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n        // Introduce the data as local variables using with(){}\n        \"with(obj){p.push('\" +\n\n        // Convert the template into pure JavaScript\n        str\n          .replace(/[\\r\\t\\n]/g, \" \")\n          .split(\"&lt;%\").join(\"\\t\")\n          .replace(/((^|%&gt;)[^\\t]*)'/g, \"$1\\r\")\n          .replace(/\\t=(.*?)%&gt;/g, \"',$1,'\")\n          .split(\"\\t\").join(\"');\")\n          .split(\"%&gt;\").join(\"p.push('\")\n          .split(\"\\r\").join(\"\\\\'\")\n      + \"');}return p.join('');\");\n\n    // Provide some basic currying to the user\n    return data ? fn( data ) : fn;\n  };\n})();\n</code></pre> demo1.html<pre><code>&lt;script type=\"text/html\" id=\"item_tmpl\"&gt;\n  &lt;div id=\"&lt;%=id%&gt;\" class=\"&lt;%=(i % 2 == 1 ? \" even\" : \"\")%&gt;\"&gt;\n    &lt;div class=\"grid_1 alpha right\"&gt;\n      &lt;img class=\"righted\" src=\"&lt;%=profile_image_url%&gt;\"/&gt;\n    &lt;/div&gt;\n    &lt;div class=\"grid_6 omega contents\"&gt;\n      &lt;p&gt;&lt;b&gt;&lt;a href=\"/&lt;%=from_user%&gt;\"&gt;&lt;%=from_user%&gt;&lt;/a&gt;:&lt;/b&gt; &lt;%=text%&gt;&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/script&gt;\n</code></pre> demo2.html<pre><code>&lt;script type=\"text/html\" id=\"user_tmpl\"&gt;\n  &lt;% for ( var i = 0; i &lt; users.length; i++ ) { %&gt;\n    &lt;li&gt;&lt;a href=\"&lt;%=users&amp;#91;i&amp;#93;.url%&gt;\"&gt;&lt;%=users&amp;#91;i&amp;#93;.name%&gt;&lt;/a&gt;&lt;/li&gt;\n  &lt;% } %&gt;\n&lt;/script&gt;\n</code></pre> <pre><code>var results = document.getElementById(\"results\");\nresults.innerHTML = tmpl(\"item_tmpl\", dataObject);\n</code></pre>"},{"location":"js/script/template/#_1","title":"\u81ea\u5b9a\u4e49\u6807\u7b7e","text":"tmpl1.js<pre><code>// Simple JavaScript Templating\n// John Resig - https://johnresig.com/ - MIT Licensed\n(function(){\n  var cache = {};\n  var startTag = \"{%\";\n  var endTag = \"%}\";\n  var re1 = new RegExp(`((^|${endTag})[^\\t]*)'`,\"g\");\n  var re2 = new RegExp(`\\t=(.*?)${endTag}`,\"g\");\n\n  this.tmpl = function tmpl(str, data){\n    // Figure out if we're getting a template, or if we need to\n    // load the template - and be sure to cache the result.\n    var fn = /^[-a-zA-Z0-9]+$/.test(str) ?\n      cache[str] = cache[str] ||\n        tmpl(document.getElementById(str).innerHTML) :\n\n      // Generate a reusable function that will serve as a template\n      // generator (and which will be cached).\n      new Function(\"obj\",\n        \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n        // Introduce the data as local variables using with(){}\n        \"with(obj){p.push('\" +\n\n        // Convert the template into pure JavaScript\n        str\n          .replace(/[\\r\\t\\n]/g, \" \")\n          .split(startTag).join(\"\\t\")\n          .replace(re1, \"$1\\r\")\n          .replace(re2, \"',$1,'\")\n          .split(\"\\t\").join(\"');\")\n          .split(endTag).join(\"p.push('\")\n          .split(\"\\r\").join(\"\\\\'\")\n      + \"');}return p.join('');\");\n    // Provide some basic currying to the user\n    return data ? fn( data ) : fn;\n  };\n})();\n</code></pre>"},{"location":"js/script/template/#_2","title":"\u52a8\u6001\u5b57\u7b26\u4e32\u6a21\u677f","text":"<p>https://stackoverflow.com/questions/30003353/can-es6-template-literals-be-substituted-at-runtime-or-reused</p> <pre><code>let inject = (str, obj) =&gt; str.replace(/\\${(.*?)}/g, (x,g)=&gt; obj[g]);\n\n// example\n/*\n\n// parameters in object\nlet t1 = 'My name is ${name}, I am ${age}. My brother name is also ${name}.';\nlet r1 = inject(t1, {name: 'JOHN',age: 23} );\nconsole.log(\"OBJECT:\", r1); \nOBJECT: My name is JOHN, I am 23. My brother name is also JOHN.\n*/\n\n// parameters in array\nlet t2 = \"Values ${0} are in ${2} array with ${1} values of ${0}.\"\nlet r2 = inject(t2, ['A,B,C', 666, 'BIG'] );\nconsole.log(\"ARRAY :\", r2);\nARRAY : Values A,B,C are in BIG array with 666 values of A,B,C.\n</code></pre>"},{"location":"js/script/tinymce/","title":"Tinymce","text":"<p>tinymce@6</p> <p>https://www.tiny.cloud/docs/tinymce/6/</p>"},{"location":"js/script/tinymce/#vite","title":"vite \u4f7f\u7528","text":"editor.js<pre><code>import tinymce from 'tinymce'\nimport 'tinymce/icons/default'\nimport 'tinymce/themes/silver'\nimport 'tinymce/models/dom'\n\nimport 'tinymce/plugins/advlist'\nimport 'tinymce/plugins/anchor'\nimport 'tinymce/plugins/autolink'\nimport 'tinymce/plugins/autoresize'\nimport 'tinymce/plugins/autosave'\nimport 'tinymce/plugins/charmap'\nimport 'tinymce/plugins/code'\nimport 'tinymce/plugins/codesample'\nimport 'tinymce/plugins/directionality'\nimport 'tinymce/plugins/emoticons/js/emojis'\nimport 'tinymce/plugins/emoticons'\nimport 'tinymce/plugins/fullscreen'\nimport 'tinymce/plugins/help'\nimport 'tinymce/plugins/image'\nimport 'tinymce/plugins/importcss'\nimport 'tinymce/plugins/insertdatetime'\nimport 'tinymce/plugins/link'\nimport 'tinymce/plugins/lists'\nimport 'tinymce/plugins/media'\nimport 'tinymce/plugins/nonbreaking'\nimport 'tinymce/plugins/pagebreak'\nimport 'tinymce/plugins/preview'\nimport 'tinymce/plugins/quickbars'\nimport 'tinymce/plugins/save'\nimport 'tinymce/plugins/searchreplace'\nimport 'tinymce/plugins/table'\nimport 'tinymce/plugins/template'\nimport 'tinymce/plugins/visualblocks'\nimport 'tinymce/plugins/visualchars'\nimport 'tinymce/plugins/wordcount'\n\nimport 'tinymce/skins/ui/oxide/skin.css'\nimport skinContentCss from 'tinymce/skins/ui/oxide/content.css'\nimport contentCss from 'tinymce/skins/content/default/content.css'\n\ntinymce.init({\n    selector: '#textarea',\n    min_height: window.innerHeight - 50,\n    max_height: window.innerHeight - 50,\n    plugins:\n        'advlist anchor autolink autoresize autosave ' +\n        'charmap code codesample directionality emoticons ' +\n        'fullscreen help image importcss insertdatetime link lists media ' +\n        'nonbreaking pagebreak preview quickbars save searchreplace ' +\n        'table template visualblocks visualchars wordcount'\n    ,\n    skin: false,\n    content_css: false,\n    content_style: contentCss + skinContentCss,\n\n    images_upload_handler: (blobInfo, progress) =&gt; new Promise((resolve, reject) =&gt; {\n        const fileName = blobInfo.filename().split('.')[1] || \"png\"\n        resolve(`data:image/${fileName};base64,${blobInfo.base64()}`)\n    })\n\n})\n</code></pre>"},{"location":"js/script/ua/","title":"Ua","text":""},{"location":"js/script/ua/#_1","title":"\u73af\u5883\u5224\u65ad","text":"<pre><code>const isIos = () =&gt; /iPad|iPhone|iPod/i.test(window.navigator.userAgent)\nconst isAndroid = () =&gt; /android/i.test(window.navigator.userAgent)\n</code></pre>"},{"location":"js/script/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/","title":"\u52a0\u5bc6\u89e3\u5bc6","text":""},{"location":"js/script/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/#md5","title":"md5","text":"<p>see crypto-js</p> <pre><code>const Crypto = require('crypto-js')\n\nfunction md5(str) {\n    return Crypto.MD5(str).toString()\n}\n</code></pre>"},{"location":"js/script/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/#rsa","title":"rsa","text":"<p>see JSEncrypt</p> <p>\u7279\u6b8a\u9700\u6c42\u53c2\u8003\uff0c\u79c1\u94a5\u52a0\u5bc6\u4fe1\u606f\u3001\u65e0padding\u586b\u5145\u52a0\u5bc6</p> <pre><code>const jc = new JSEncrypt()\njc.setPublicKey(\"\")\njc.setPrivateKey(\"\")\n\n// \u52a0\u5bc6\njc.encrypt(\"xxx\")\n\n// \u89e3\u5bc6\njc.decrypt(\"xxx\")\n</code></pre>"},{"location":"js/script/%E5%AF%BC%E5%87%BAword/","title":"\u5bfc\u51faword","text":"<p>html \u5bfc\u51fa word \u6587\u4ef6</p> <p>https://phppot.com/javascript/how-to-export-html-to-word-document-with-javascript/</p> export.js<pre><code>function exportHTML(){\n    var header = \"&lt;html xmlns:o='urn:schemas-microsoft-com:office:office' \"+\n        \"xmlns:w='urn:schemas-microsoft-com:office:word' \"+\n        \"xmlns='http://www.w3.org/TR/REC-html40'&gt;\"+\n        \"&lt;head&gt;&lt;meta charset='utf-8'&gt;&lt;title&gt;Export HTML to Word Document with JavaScript&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\";\n    var footer = \"&lt;/body&gt;&lt;/html&gt;\";\n    var sourceHTML = header+document.getElementById(\"source-html\").innerHTML+footer;\n\n    var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);\n    var fileDownload = document.createElement(\"a\");\n    document.body.appendChild(fileDownload);\n    fileDownload.href = source;\n    fileDownload.download = 'document.doc';\n    fileDownload.click();\n    document.body.removeChild(fileDownload);\n}\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/","title":"\u5e38\u7528\u5e93","text":""},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_1","title":"\u80cc\u666f\u89c6\u9891","text":"<pre><code>https://github.com/rishabhp/bideo.js\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_2","title":"\u5f39\u7a97","text":"<pre><code>https://github.com/robinparisi/tingle\nhttps://github.com/bootboxjs/bootbox\nhttps://github.com/hubspot/vex\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_3","title":"\u8f93\u5165\u6846\u8f93\u5165\u6548\u679c","text":"<pre><code>https://github.com/luisvinicius167/ityped\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_4","title":"\u65f6\u95f4\u9009\u62e9\u5668","text":"<pre><code>https://github.com/flatpickr/flatpickr\nhttp://www.my97.net/demo/index.htm\nhttps://github.com/amsul/pickadate.js\nhttps://github.com/mymth/vanillajs-datepicker\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_5","title":"\u6570\u5b57\u6548\u679c","text":"<pre><code>https://inorganik.github.io/countUp.js/\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_6","title":"\u6eda\u52a8\u6548\u679c \u52a8\u753b","text":"<pre><code>https://github.com/michalsnik/aos\nhttps://github.com/alexfoxy/lax.js\nhttps://github.com/silvestreh/onScreen\nhttps://github.com/abouolia/sticky-sidebar\nhttps://github.com/jlmakes/scrollreveal\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#jquery-hover","title":"jquery hover \u6548\u679c","text":"<pre><code>https://github.com/gijsroge/tilt.js\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#slider","title":"slider","text":"<pre><code>https://github.com/glidejs/glide\nhttps://refreshless.com/nouislider/\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#popup","title":"popup","text":"<pre><code>https://github.com/jaredreich/notie\nhttps://github.com/MohammadYounes/AlertifyJS\nhttps://github.com/sweetalert2/sweetalert2\nhttps://github.com/popperjs/popper-core\nhttps://github.com/needim/noty\nhttps://github.com/marcelodolza/iziToast\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#progress-bar","title":"progress bar","text":"<pre><code>https://github.com/CodeByZach/pace\nhttps://github.com/jacoborus/nanobar\nhttps://github.com/kimmobrunfeldt/progressbar.js\nhttps://github.com/loadingio/loading-bar\nhttps://loading.io/\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#notifications","title":"notifications","text":"<pre><code>https://carlosroso.com/notyf/\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_7","title":"\u6811\u7ec4\u4ef6","text":"<pre><code>http://wwwendt.de/tech/fancytree/demo/\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_8","title":"\u6eda\u52a8\u6761","text":"<pre><code>https://github.com/KingSora/OverlayScrollbars\nhttp://grsmto.github.io/simplebar/  \nhttps://github.com/henripar/scrollbar\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_9","title":"\u5e03\u5c40+\u7b5b\u9009+\u6392\u5e8f","text":"<pre><code>https://isotope.metafizzy.co/\nhttps://github.com/haltu/muuri\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#select","title":"select","text":"<pre><code>https://choices-js.github.io/Choices/\nhttps://select2.org\nhttps://gitee.com/maplemei/xm-select\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_10","title":"\u6570\u5b57\u5904\u7406","text":"<pre><code>https://mathjs.org/index.html\nhttp://numeraljs.com/\nhttps://github.com/autoNumeric/autoNumeric/\nhttps://github.com/dm4t2/intl-number-input\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_11","title":"\u6821\u9a8c","text":"<pre><code>https://github.com/yiminghe/async-validator\nhttps://github.com/jquery-validation/jquery-validation\nhttps://github.com/validatorjs/validator.js\nhttps://github.com/ajv-validator/ajv\nhttps://github.com/ealush/vest\nhttps://github.com/colinhacks/zod\nhttps://github.com/jquense/yup\nhttps://github.com/hapijs/joi\nhttps://github.com/horprogs/Just-validate\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_12","title":"\u70ed\u952e","text":"<pre><code>https://github.com/jaywcjlove/hotkeys\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_13","title":"\u5e86\u795d","text":"<pre><code>https://github.com/loonywizard/js-confetti\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#iframe","title":"iframe","text":"<pre><code>https://github.com/krakenjs/zoid\nhttps://github.com/travist/seamless.js\nhttps://github.com/davidjbradshaw/iframe-resizer\nhttps://github.com/dollarshaveclub/postmate\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#menu","title":"menu","text":"<pre><code>https://github.com/onokumus/metismenu\nhttps://github.com/FrDH/mmenu-js\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_14","title":"\u6309\u94ae\u70b9\u51fb\u6548\u679c","text":"<pre><code>https://github.com/fians/Waves\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_15","title":"\u6253\u5370","text":"<pre><code>https://github.com/crabbly/print.js\nhttps://github.com/cognitom/paper-css\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_16","title":"\u6c34\u5370","text":"<pre><code>https://github.com/brianium/watermarkjs\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#skeleton","title":"skeleton","text":"<pre><code>https://github.com/danilowoz/react-content-loader\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#mask","title":"mask","text":"<pre><code>https://github.com/igorescobar/jQuery-Mask-Plugin\nhttps://github.com/uNmAnNeR/imaskjs\nhttps://github.com/autoNumeric/autoNumeric/\nhttps://github.com/dm4t2/intl-number-input\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#scroll-list","title":"scroll list","text":"<pre><code>https://www.npmjs.com/package/clusterize.js\nhttps://github.com/dhilt/vscroll\nhttps://github.com/petyosi/react-virtuoso\nhttps://github.com/bvaughn/react-virtualized\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#grid","title":"grid","text":"<pre><code>https://github.com/grid-js/gridjs\nhttps://github.com/paramquery/grid\nhttps://github.com/tonytomov/jqGrid\nhttps://github.com/ag-grid/ag-grid\nhttps://github.com/TanStack/table\nhttps://github.com/dream-num/Luckysheet\nhttps://github.com/handsontable/handsontable\nhttps://github.com/fiduswriter/Simple-DataTables\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_17","title":"\u5360\u4f4d","text":"<pre><code>https://github.com/imsky/holder\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#domjquery","title":"dom\u64cd\u4f5c(jquery\u66ff\u4ee3\u54c1)","text":"<pre><code>https://github.com/franciscop/umbrella  \nhttps://github.com/fabiospampinato/cash\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#_18","title":"\u987a\u5e8f","text":"<pre><code>https://github.com/Effect-TS/effect\n</code></pre>"},{"location":"js/script/%E5%B8%B8%E7%94%A8%E5%BA%93/#timeline","title":"timeline","text":"<pre><code>https://github.com/visjs/vis-timeline/\n</code></pre>"},{"location":"js/script/%E7%9B%AE%E5%BD%95%E7%BC%96%E8%AF%91%E6%80%BB%E7%BB%93/","title":"\u76ee\u5f55\u7f16\u8bd1\u603b\u7ed3","text":"<p>\u7f16\u8bd1js\u5e76\u4fdd\u6301\u76ee\u5f55\u7ed3\u6784\uff0c\u6bd4\u5982:</p> <pre><code>index.es6.js\nsrc\n    index.es6.js\n</code></pre> <p>\u7f16\u8bd1\u540e</p> <pre><code>index.es6.js\nindex.es5.js\nsrc\n    index.es6.js\n    index.es5.js\n</code></pre> <p>\u8981\u6c42\u7528\u547d\u4ee4\u884c\uff0c\u4fdd\u6301\u7b80\u5355</p>"},{"location":"js/script/%E7%9B%AE%E5%BD%95%E7%BC%96%E8%AF%91%E6%80%BB%E7%BB%93/#babel","title":"babel","text":"<pre><code>    see https://babeljs.io/docs/en/babel-cli\n</code></pre> <pre><code># \u4e0d\u80fd\u51c6\u786e\u4fee\u6539\u540d\u5b57\n\nnpx babel **/*.es6.js -d ./ --relative --out-file-extension .es5.js --presets=@babel/preset-env\n</code></pre>"},{"location":"js/script/%E7%9B%AE%E5%BD%95%E7%BC%96%E8%AF%91%E6%80%BB%E7%BB%93/#esbuild","title":"esbuild","text":"<pre><code>    see https://esbuild.github.io/\n</code></pre> <pre><code># \u4e0d\u80fd glob \u8f93\u5165 see: https://github.com/evanw/esbuild/issues/381\n# \u4e0d\u80fd\u51c6\u786e\u4fee\u6539\u540d\u5b57\n\nnpx esbuild src/index.es6.js index.es6.js --out-extension:.js=.es5.js --outdir=. --target=chrome58\n</code></pre>"},{"location":"js/script/%E7%9B%AE%E5%BD%95%E7%BC%96%E8%AF%91%E6%80%BB%E7%BB%93/#swc","title":"swc","text":"<pre><code>    \u9700\u8981\u5199\u914d\u7f6e\u6587\u4ef6\uff0c\u547d\u4ee4\u884c\u652f\u6301\u4e0d\u662f\u5f88\u53cb\u597d\n    see https://swc.rs/\n</code></pre>"},{"location":"js/script/%E9%9A%8F%E6%9C%BA%E6%95%B0/","title":"\u968f\u673a\u6570","text":""},{"location":"js/script/%E9%9A%8F%E6%9C%BA%E6%95%B0/#_1","title":"\u8303\u56f4","text":"<pre><code>const randomInt = (min, max) =&gt; Math.floor(Math.random() * (max - min) + min)\n</code></pre>"},{"location":"js/script/%E9%9A%8F%E6%9C%BA%E6%95%B0/#_2","title":"\u968f\u673a\u4e94\u4f4d\u82f1\u6587\u52a0\u6570\u5b57","text":"<pre><code>const id = Math.random().toString(36).slice(-5);\n</code></pre>"},{"location":"latex/base/","title":"Base","text":"<pre><code>\\documentclass[]{article}\n\n% \u8bbe\u7f6e\u4e2d\u6587\n\\usepackage{xeCJK}\n\\setCJKmainfont{\u5b8b\u4f53}\n\n% \u8bbe\u7f6e\u8ddd\u79bb\n\\usepackage[margin=2cm, a5paper]{geometry}\n\n% \u8bbe\u7f6e\u884c\u9ad8\n%\\usepackage{setspace}\n%\\onehalfspacing\n\n% \u8bbe\u7f6e\u6bb5\u843d\u95f4\u8ddd\n\\setlength{\\parskip}{6pt}\n\n\\begin{document}\n\nhello world\n\\vfill\n\u4e2d\u6587\n\n\n\\section{\u524d\u8a00}\n\\section{\u4e00\u7ea7\u6807\u9898}\n\\subsection{\u4e8c\u7ea7\u6807\u9898}\n\\subsubsection{\u4e09\u7ea7\u6807\u9898}\n\\subsubsection{\u4e09\u7ea7\u6807\u9898}\n\\subsection{\u4e8c\u7ea7\u6807\u9898}\n\\section{\u4e00\u7ea7\u6807\u9898}\n\\section{\u603b\u7ed3}\n\n\\begin{titlepage}\n\u592b\u541b\u5b50\u4e4b\u884c\uff0c\u9759\u4ee5\u4fee\u8eab\uff0c\u4fed\u4ee5\u517b\u5fb7\uff0c\u975e\u6de1\u6cca\u65e0\u4ee5\u660e\u5fd7\uff0c\u975e\u5b81\u9759\u65e0\u4ee5\u81f4\u8fdc\u3002\u592b\u5b66\u987b\u9759\u4e5f\uff0c\u624d\u987b\u5b66\u4e5f\uff0c\u975e\u5b66\u65e0\u4ee5\u5e7f\u624d\uff0c\u975e\u5fd7\u65e0\u4ee5\u6210\u5b66\u3002\u6deb\uff08\u6146\uff09\u6162\u5219\u4e0d\u80fd\u52b1\u7cbe\uff0c\u9669\u8e81\u5219\u4e0d\u80fd\u51b6\u6027\u3002\u5e74\u4e0e\u65f6\u9a70\uff0c\u610f\u4e0e\u65e5\u53bb\uff0c\u9042\u6210\u67af\u843d\uff0c\u591a\u4e0d\u63a5\u4e16\uff0c\u60b2\u5b88\u7a77\u5e90\uff0c\u5c06\u590d\u4f55\u53ca\uff01\n\\end{titlepage}\n\n\\end{document}\n</code></pre>"},{"location":"network/load-balance%20vs%20api-gateway/","title":"Load balance vs api gateway","text":"<p>\u53c2\u8003\u94fe\u63a5</p> <p></p>"},{"location":"network/osi/","title":"Osi","text":"<p>\u53c2\u8003\u94fe\u63a5</p> <p></p>"},{"location":"network/proxy/","title":"Proxy","text":""},{"location":"network/proxy/#v2ray-or-xray","title":"v2ray or xray","text":""},{"location":"network/proxy/#_1","title":"\u8fd0\u884c","text":"<pre><code>v2ray run -c config.json\n</code></pre>"},{"location":"network/proxy/#_2","title":"\u914d\u7f6e","text":"<p>\u53c2\u8003\u914d\u7f6e\u4f8b\u5b50,  transport-settings</p> \u5185\u90e8\u914d\u7f6e<pre><code>...\n\"streamSettings\": {\n  \"network\": \"ws\",\n  \"wsSettings\": {\n    \"host\": \"xxxx\",\n    \"path\": \"/xxxx?ed=2048\"\n  }\n},\n\n...\n</code></pre>"},{"location":"network/proxy/#_3","title":"\u793a\u4f8b","text":"config.json<pre><code>{\n  \"log\": {\n    \"loglevel\": \"warning\"\n  },\n  \"routing\": {\n    \"domainStrategy\": \"AsIs\",\n    \"rules\": [\n      {\n        \"type\": \"field\",\n        \"ip\": [\"geoip:private\"],\n        \"outboundTag\": \"direct\"\n      }\n    ]\n  },\n  \"inbounds\": [\n    {\n      \"listen\": \"127.0.0.1\",\n      \"port\": \"2023\",\n      \"protocol\": \"socks\",\n      \"settings\": {\n        \"auth\": \"noauth\",\n        \"udp\": true,\n        \"ip\": \"127.0.0.1\"\n      }\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"protocol\": \"vmess\",\n      \"settings\": {\n        \"vnext\": [\n          {\n\n            \"address\": \"&lt;xx.xx.xx.xx&gt;\",\n            \"port\": 80,\n            \"users\": [\n              {\n                \"id\": \"&lt;xxx-xx-xx-xx-xx&gt;\"\n              }\n            ]\n          }\n        ]\n      },\n      \"streamSettings\": {\n        \"network\": \"ws\",\n        \"wsSettings\": {\n          \"host\": \"&lt;xx.xx.xx.xx&gt;\",\n          \"path\": \"&lt;/wp-login?ed=2048&gt;\"\n        }\n      },\n      \"tag\": \"proxy\"\n    }\n  ]\n}\n</code></pre>"},{"location":"network/proxy/#sing-box","title":"sing-box","text":"<p>https://github.com/SagerNet/sing-box</p>"},{"location":"network/proxy/#_4","title":"\u8fd0\u884c","text":"<pre><code>sing-box run -c config.json\n</code></pre>"},{"location":"network/proxy/#_5","title":"\u793a\u4f8b","text":"config.json<pre><code>{\n  \"log\": {\n    \"disabled\": false,\n    \"level\": \"info\",\n    \"timestamp\": true\n  },\n  \"dns\": {},\n  \"ntp\": {},\n  \"outbounds\": [\n    {\n      \"type\": \"vmess\",\n      \"tag\": \"vmess-out\",\n      \"server\": \"&lt;xx.xx.xx.xx&gt;\",\n      \"server_port\": 80,\n      \"uuid\": \"&lt;xxxx-xxx-xx-xx-xxx&gt;\",\n      \"security\": \"auto\",\n      \"alter_id\": 0,\n      \"global_padding\": false,\n      \"authenticated_length\": true,\n      \"network\": \"tcp\",\n      \"tls\": {},\n      \"multiplex\": {},\n      \"transport\": {\n        \"type\": \"ws\",\n        \"path\": \"&lt;/wp-login?ed=2048&gt;\",\n        \"headers\": {\n          \"host\": \"&lt;xxx.xxx.xxx&gt;\"\n        }\n      }\n    }\n  ],\n  \"inbounds\": [\n    {\n      \"type\": \"mixed\",\n      \"tag\": \"mixed-in\",\n      \"listen\": \"::\",\n      \"listen_port\": 2024,\n      \"tcp_fast_open\": false,\n      \"tcp_multi_path\": false,\n      \"udp_fragment\": false,\n      \"udp_timeout\": \"5m\"\n    }\n  ],\n  \"route\": {\n    \"rules\": [\n      {\n        \"geosite\": [\"cn\"],\n        \"geoip\": [\"cn\"],\n        \"outbound\": \"direct\"\n      }\n    ]\n  },\n  \"experimental\": {}\n}\n</code></pre>"},{"location":"network/rest/","title":"Rest","text":""},{"location":"network/udp/","title":"Udp","text":""},{"location":"network/udp/#python","title":"python \u5b9e\u73b0\u6587\u4ef6\u4f20\u8f93","text":"client.py<pre><code>import socket\nimport sys\nimport time\n\n\n# python client.py xxx.file\nfile_name = sys.argv[1]\naddr = (\"127.0.0.1\", 6000)\n# bytes\nbuf = 1024\n\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nprint('send file name', file_name)\ns.sendto(file_name.encode(), addr)\nf = open(file_name, \"rb\")\ndata = f.read(buf)\nprint('send file content', file_name)\nwhile(data):\n    if s.sendto(data, addr):\n        data = f.read(buf)\n        time.sleep(0.02) # server save time\n\ns.close()\nf.close()\n</code></pre> server.py<pre><code>import socket\nimport time\n\nstart = time.process_time()\n\naddr = (\"127.0.0.1\", 6000)\n# bytes\nbuf = 1024 * 1024\n\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\ns.bind(addr)\n\nfile_name, addr = s.recvfrom(buf)\nprint('receive file name', file_name)\nif file_name:\n    file_name = file_name.strip()\n\nf = open(b\"out/\"+ file_name, \"wb\")\n\ndata, addr = s.recvfrom(buf)\nprint('receive file content', file_name)\n\ntry:\n    while(data):\n        f.write(data)\n        s.settimeout(1)\n        data, addr = s.recvfrom(buf)\nexcept socket.timeout:\n    f.close()\n    s.close()\n    print(\"File Downloaded\")\n\n\n\nprint(time.process_time() - start)\n</code></pre>"},{"location":"network/udp/#go-demo","title":"go demo","text":"clent.go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"net\"\n)\n\nfunc main() {\n    sip := net.ParseIP(\"127.0.0.1\")\n    srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}\n    dstAddr := &amp;net.UDPAddr{IP: sip, Port: 6001}\n    conn, err := net.DialUDP(\"udp\", srcAddr, dstAddr)\n    if err != nil {\n        fmt.Println(err)\n    }\n    defer conn.Close()\n    conn.Write([]byte(\"hello\"))\n    fmt.Printf(\"&lt;%s&gt;\\n\", conn.RemoteAddr())\n}\n</code></pre> server.go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"log\"\n    \"net\"\n)\n\nfunc main() {\n    listener, err := net.ListenUDP(\"udp\", &amp;net.UDPAddr{IP: net.ParseIP(\"127.0.0.1\"), Port: 6001})\n    if err != nil {\n        log.Fatal(err)\n        return\n    }\n\n    fmt.Printf(\"local: &lt;%s&gt; \\n\", listener.LocalAddr().String())\n\n    data := make([]byte, 1024)\n\n    for {\n        n, remoteAddr, err := listener.ReadFromUDP(data)\n        if err != nil {\n            fmt.Printf(\"error during read: %s\", err)\n        }\n\n        fmt.Printf(\"&lt;%s&gt; %s\\n\", remoteAddr, data[:n])\n\n        _, err = listener.WriteToUDP([]byte(\"world\"), remoteAddr)\n\n        if err != nil {\n            fmt.Printf(err.Error())\n        }\n    }\n}\n</code></pre>"},{"location":"python/aiohttp/","title":"Aiohttp","text":""},{"location":"python/aiohttp/#_1","title":"\u4e0b\u8f7d\u6587\u4ef6","text":"download_file.py<pre><code>import asyncio\nimport aiohttp\nimport pathlib\ncwd = pathlib.Path.cwd()\n\nasync def download_file(url, file_name):\n    async with aiohttp.ClientSession() as session:\n        async with session.get(url, ssl=False) as resp:\n            if resp.status == 200:\n                file_size = int(resp.headers['Content-Length'])\n                with open(file_name, 'wb') as fd:\n                    progress = 0\n                    while True:\n                        chunk = await resp.content.read(1024)\n                        if not chunk:\n                            break\n                        fd.write(chunk)\n                        progress += len(chunk)\n                        # await asyncio.sleep(0.1)  # Download throttle for 100ms\n                        percentage = (progress / file_size) * 100\n                        print(f\"Download Progress: {percentage:.2f}%\")\n            else:\n                print(\"Failed to download the file.\")\n\nasync def main():\n    await download_file(\"https://mirrors.aliyun.com/ubuntu-releases/24.04/ubuntu-24.04-desktop-amd64.iso\", cwd / \"ubuntu-24.04-desktop-amd64.iso\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre>"},{"location":"python/cache/","title":"Cache","text":""},{"location":"python/cache/#cachetools","title":"cachetools","text":"cache.py<pre><code>from cachetools import cached, TLRUCache\nfrom datetime import datetime, timedelta\nfrom random import random\n\ndef my_ttu(_key, _value, now):\n    # \u968f\u673a\u6bcf\u4e2akey\u7684\u8fc7\u671f\u65f6\u95f4\n    return now + timedelta(hours=random())\n\n@cached(cache=TLRUCache(maxsize=10, ttu=my_ttu, timer=datetime.now))\ndef fib(n):\n    return n if n &lt; 2 else fib(n - 1) + fib(n - 2)\n</code></pre>"},{"location":"python/customtkinter/","title":"Customtkinter","text":""},{"location":"python/customtkinter/#customtkinter","title":"customtkinter","text":"main.py<pre><code>import json\nimport math\nimport os\nimport pathlib\nimport re\nimport socket\nimport sys\nimport threading\nimport time\nimport tkinter.messagebox\nimport urllib\nimport urllib.request\nimport urllib.parse\nimport urllib.error\n\nimport customtkinter\n\ntimeout = 5\nsocket.setdefaulttimeout(timeout)\n\nclass Crawler:\n    # \u7761\u7720\u65f6\u957f\n    __time_sleep = 0.1\n    __amount = 0\n    __start_amount = 0\n    __counter = 0\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20100101 Firefox/23.0', 'Cookie': ''}\n    __per_page = 30\n    __out = \"./\"\n    __ui = None\n\n    # \u83b7\u53d6\u56fe\u7247url\u5185\u5bb9\u7b49\n    # t \u4e0b\u8f7d\u56fe\u7247\u65f6\u95f4\u95f4\u9694\n    def __init__(self, t=0.1):\n        self.time_sleep = t\n\n    # \u83b7\u53d6\u540e\u7f00\u540d\n    @staticmethod\n    def get_suffix(name):\n        m = re.search(r'\\.[^\\.]*$', name)\n        if m.group(0) and len(m.group(0)) &lt;= 5:\n            return m.group(0)\n        else:\n            return '.jpeg'\n\n    @staticmethod\n    def handle_baidu_cookie(original_cookie, cookies):\n        \"\"\"\n        :param string original_cookie:\n        :param list cookies:\n        :return string:\n        \"\"\"\n        if not cookies:\n            return original_cookie\n        result = original_cookie\n        for cookie in cookies:\n            result += cookie.split(';')[0] + ';'\n        result.rstrip(';')\n        return result\n\n    # \u4fdd\u5b58\u56fe\u7247\n    def save_image(self, rsp_data, word):\n        out_folder = os.path.join(self.__out, word)\n        if not os.path.exists(out_folder):\n            os.mkdir(out_folder)\n        # \u5224\u65ad\u540d\u5b57\u662f\u5426\u91cd\u590d\uff0c\u83b7\u53d6\u56fe\u7247\u957f\u5ea6\n        self.__counter = len(os.listdir(out_folder)) + 1\n        for image_info in rsp_data['data']:\n            try:\n                if 'replaceUrl' not in image_info or len(image_info['replaceUrl']) &lt; 1:\n                    continue\n                obj_url = image_info['replaceUrl'][0]['ObjUrl']\n                thumb_url = image_info['thumbURL']\n                url = 'https://image.baidu.com/search/down?tn=download&amp;ipn=dwnl&amp;word=download&amp;ie=utf8&amp;fr=result&amp;url=%s&amp;thumburl=%s' % (\n                    urllib.parse.quote(obj_url), urllib.parse.quote(thumb_url))\n                time.sleep(self.time_sleep)\n                suffix = self.get_suffix(obj_url)\n                # \u6307\u5b9aUA\u548creferrer\uff0c\u51cf\u5c11403\n                opener = urllib.request.build_opener()\n                opener.addheaders = [\n                    ('User-agent',\n                     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36'),\n                ]\n                urllib.request.install_opener(opener)\n                # \u4fdd\u5b58\u56fe\u7247\n                filepath = os.path.join(self.__out, './%s/%s' % (word, str(self.__counter) + str(suffix)))\n                urllib.request.urlretrieve(url, filepath)\n                if os.path.getsize(filepath) &lt; 5:\n                    self.__ui.update_log(\"\u4e0b\u8f7d\u5230\u4e86\u7a7a\u6587\u4ef6\uff0c\u8df3\u8fc7!\")\n                    os.unlink(filepath)\n                    continue\n            except urllib.error.HTTPError as urllib_err:\n                self.__ui.update_log(urllib_err)\n                continue\n            except Exception as err:\n                time.sleep(1)\n                self.__ui.update_log(err)\n                self.__ui.update_log(\"\u4ea7\u751f\u672a\u77e5\u9519\u8bef\uff0c\u653e\u5f03\u4fdd\u5b58\")\n                continue\n            else:\n                self.__ui.update_log(\"\u56fe\u7247+1,\u5df2\u6709\" + str(self.__counter) + \"\u5f20\u56fe\u7247\")\n                self.__counter += 1\n        return\n\n    # \u5f00\u59cb\u83b7\u53d6\n    def get_images(self, word):\n        search = urllib.parse.quote(word)\n        # pn int \u56fe\u7247\u6570\n        pn = self.__start_amount\n        while pn &lt; self.__amount:\n            url = 'https://image.baidu.com/search/acjson?tn=resultjson_com&amp;ipn=rj&amp;ct=201326592&amp;is=&amp;fp=result&amp;queryWord=%s&amp;cl=2&amp;lm=-1&amp;ie=utf-8&amp;oe=utf-8&amp;adpicid=&amp;st=-1&amp;z=&amp;ic=&amp;hd=&amp;latest=&amp;copyright=&amp;word=%s&amp;s=&amp;se=&amp;tab=&amp;width=&amp;height=&amp;face=0&amp;istype=2&amp;qc=&amp;nc=1&amp;fr=&amp;expermode=&amp;force=&amp;pn=%s&amp;rn=%d&amp;gsm=1e&amp;1594447993172=' % (\n                search, search, str(pn), self.__per_page)\n            # \u8bbe\u7f6eheader\u9632403\n            try:\n                time.sleep(self.time_sleep)\n                req = urllib.request.Request(url=url, headers=self.headers)\n                page = urllib.request.urlopen(req)\n                self.headers['Cookie'] = self.handle_baidu_cookie(self.headers['Cookie'],\n                                                                  page.info().get_all('Set-Cookie'))\n                rsp = page.read()\n                page.close()\n            except UnicodeDecodeError as e:\n                self.__ui.update_log(e)\n                self.__ui.update_log('-----UnicodeDecodeErrorurl:', url)\n            except urllib.error.URLError as e:\n                self.__ui.update_log(e)\n                self.__ui.update_log(\"-----urlErrorurl:\", url)\n            except socket.timeout as e:\n                self.__ui.update_log(e)\n                self.__ui.update_log(\"-----socket timout:\", url)\n            else:\n                # \u89e3\u6790json\n                rsp_data = json.loads(rsp, strict=False)\n                if 'data' not in rsp_data:\n                    self.__ui.update_log(\"\u89e6\u53d1\u4e86\u53cd\u722c\u673a\u5236\uff0c\u81ea\u52a8\u91cd\u8bd5\uff01\")\n                else:\n                    self.save_image(rsp_data, word)\n                    # \u8bfb\u53d6\u4e0b\u4e00\u9875\n                    self.__ui.update_log(\"\u4e0b\u8f7d\u4e0b\u4e00\u9875\")\n                    pn += self.__per_page\n        self.__ui.update_log(\"\u4e0b\u8f7d\u4efb\u52a1\u7ed3\u675f\")\n        out_folder = os.path.join(self.__out, word)\n        os.startfile(out_folder)\n\n        return\n\n    def start(self, word, out, ui, total_page=1, start_page=1, per_page=30, ):\n        \"\"\"\n        \u722c\u866b\u5165\u53e3\n        :param word: \u6293\u53d6\u7684\u5173\u952e\u8bcd\n        :param total_page: \u9700\u8981\u6293\u53d6\u6570\u636e\u9875\u6570 \u603b\u6293\u53d6\u56fe\u7247\u6570\u91cf\u4e3a \u9875\u6570 x per_page\n        :param start_page:\u8d77\u59cb\u9875\u7801\n        :param per_page: \u6bcf\u9875\u6570\u91cf\n        :return:\n        \"\"\"\n        self.__per_page = per_page\n        self.__start_amount = (start_page - 1) * self.__per_page\n        self.__amount = total_page * self.__per_page + self.__start_amount\n        self.__out = out\n        self.__ui = ui\n        self.get_images(word)\n\n\nclass ConfigFrame(customtkinter.CTkFrame):\n    def __init__(self, master):\n        super().__init__(master)\n        self.configure(height=200)\n        self.grid_columnconfigure((0, 1, 2, 3), weight=1)\n\n        # \u5173\u952e\u5b57\n        self.wordLabel = customtkinter.CTkLabel(self, text=\"\u5173\u952e\u5b57\")\n        self.wordLabel.grid(row=0, column=0, padx=20, pady=20, sticky=\"ew\")\n        self.wordEntry = customtkinter.CTkEntry(self, placeholder_text=\"\u8f93\u5165\u5173\u952e\u5b57\uff0c\u5982\uff1a\u5934\u50cf\")\n        self.wordEntry.grid(row=0, column=1, columnspan=4, padx=20, pady=20, sticky=\"ew\")\n\n        # \u603b\u9875\u6570\n        self.pageLabel = customtkinter.CTkLabel(self, text=\"\u603b\u9875\u6570\")\n        self.pageLabel.grid(row=1, column=0, padx=20, pady=20, sticky=\"ew\")\n        self.pageSlider = customtkinter.CTkSlider(self, from_=1, to=100, command=self.page_slider_change)\n        self.pageSlider.grid(row=1, column=1, columnspan=3, padx=20, pady=20, sticky=\"ew\")\n        self.pageRLabel = customtkinter.CTkLabel(self, text=\"\", width=25, )\n        self.pageRLabel.grid(row=1, column=4, padx=20, pady=20, sticky=\"ew\")\n\n        # \u6bcf\u9875\u6570\u91cf\n        self.sizeLabel = customtkinter.CTkLabel(self, text=\"\u603b\u9875\u6570\")\n        self.sizeLabel.grid(row=2, column=0, padx=20, pady=20, sticky=\"ew\")\n        self.sizeSlider = customtkinter.CTkSlider(self, from_=1, to=100, command=self.size_slider_change)\n        self.sizeSlider.grid(row=2, column=1, columnspan=3, padx=20, pady=20, sticky=\"ew\")\n        self.sizeRLabel = customtkinter.CTkLabel(self, text=\"\", width=25, )\n        self.sizeRLabel.grid(row=2, column=4, padx=20, pady=20, sticky=\"ew\")\n\n        self.folderLabel = customtkinter.CTkLabel(self, text=\"\u8f93\u51fa\u76ee\u5f55\")\n        self.folderLabel.grid(row=3, column=0, padx=20, pady=20, sticky=\"ew\")\n        self.folderEntry = customtkinter.CTkEntry(self, state=\"readonly\")\n        self.folderEntry.grid(row=3, column=1, columnspan=3, padx=20, pady=20, sticky=\"ew\")\n        self.folderButton = customtkinter.CTkButton(self, text=\"\u9009\u62e9\", command=self.choose_folder)\n        self.folderButton.grid(row=3, column=4, padx=20, pady=20, sticky=\"ew\")\n        self.folderEntry.bind('&lt;Button-1&gt;', lambda _: os.startfile(self.folderEntry.get()))\n\n        self.set_default()\n\n    def set_default(self):\n        self.wordEntry.insert(0, \"\u4e8c\u6b21\u5143\")\n        self.page_slider_change(1)\n        self.size_slider_change(10)\n        self.folderEntry.configure(state=\"normal\")\n        self.folderEntry.insert(0, pathlib.Path.home())\n        self.folderEntry.configure(state=\"disabled\")\n\n    def choose_folder(self):\n        output_folder = customtkinter.filedialog.askdirectory()\n        if output_folder:\n            self.folderEntry.delete(0, len(self.folderEntry.get()))\n            self.folderEntry.configure(state=\"normal\")\n            self.folderEntry.insert(0, output_folder)\n            self.folderEntry.configure(state=\"disabled\")\n\n    def page_slider_change(self, val):\n        int_v = int(val)\n        self.pageRLabel.configure(text=int_v)\n        self.pageSlider.set(int_v)\n\n    def size_slider_change(self, val):\n        int_v = math.ceil(val / 10) * 10\n        self.sizeRLabel.configure(text=int_v)\n        self.sizeSlider.set(int_v)\n\n    def get(self):\n        return {\n            \"word\": self.wordEntry.get(),\n            \"page\": self.pageSlider.get(),\n            \"size\": self.sizeSlider.get(),\n            \"output_folder\": self.folderEntry.get()\n        }\n\n\nclass App(customtkinter.CTk):\n    def __init__(self):\n        super().__init__()\n\n        self.title(\"\u56fe\u7247\u4e0b\u8f7d\")\n        self.set_position(\"center\")\n\n        self.T = None\n        self.is_doing = False\n\n        self.grid_columnconfigure(0, weight=1)\n        self.grid_rowconfigure(0, weight=1)\n\n        self.protocol(\"WM_DELETE_WINDOW\", self.on_closing)\n\n        self.checkbox_frame = ConfigFrame(self)\n        self.checkbox_frame.grid(row=0, column=0, padx=10, pady=10, sticky=\"nsew\")\n\n        self.button = customtkinter.CTkButton(self, text=\"\u4e0b\u8f7d\", command=self.button_callback)\n        self.button.grid(row=1, column=0, padx=10, pady=10, sticky=\"ew\")\n\n        self.log = customtkinter.CTkTextbox(self, state=\"disabled\")\n        self.log.grid(row=2, column=0, padx=10, pady=10, sticky=\"ew\")\n\n        self.minsize(self.winfo_width(), self.winfo_height())\n\n    def on_closing(self):\n        sys.exit()\n        self.destroy()\n\n\n    def doing(self):\n        config = self.checkbox_frame.get()\n        crawler = Crawler(0.05)\n        crawler.start(word=config[\"word\"], total_page=config[\"page\"], per_page=config[\"size\"],\n                      out=config[\"output_folder\"], ui=self)\n\n    def button_callback(self):\n        if self.is_doing is True:\n            tkinter.messagebox.showwarning(title=\"\u8b66\u544a\", message=\"\u8bf7\u7b49\u5f85\u5f53\u524d\u4efb\u52a1\u7ed3\u675f\uff01\")\n            return\n        config = self.checkbox_frame.get()\n        if len(config[\"word\"]) &lt; 1:\n            tkinter.messagebox.showerror(title=\"\u53c2\u6570\u9519\u8bef\", message=\"\u8bf7\u8f93\u5165\u5173\u952e\u5b57\")\n            return\n        if len(config[\"output_folder\"]) &lt; 1:\n            tkinter.messagebox.showerror(title=\"\u53c2\u6570\u9519\u8bef\", message=\"\u8bf7\u9009\u62e9\u8f93\u5165\u76ee\u5f55\")\n            return\n\n        self.T = threading.Thread(target=self.doing)\n        self.update_log(\"\u4e0b\u8f7d\u671f\u95f4\u8bf7\u4e0d\u8981\u5173\u95ed\u7a97\u53e3!!!\")\n        self.T.start()\n        self.is_doing = True\n\n    def update_log(self, msg):\n        self.log.configure(state=tkinter.NORMAL)\n        self.log.insert(tkinter.END, \"\\n\" + str(msg))\n        self.log.configure(state=tkinter.DISABLED)\n        self.log.see(tkinter.END)\n\n    def set_position(self, position=\"\"):\n        window_width = 600\n        window_height = 600\n\n        if position == \"center\":\n            self.geometry(\n                \"{}x{}+{}+{}\".format(window_width, window_height,\n                                     int((self.winfo_screenwidth() / 2) - window_width / 2),\n                                     int((self.winfo_screenheight() / 2) - window_height / 2)))\n\n        else:\n            self.geometry(\"{}x{}\".format(window_width, window_height))\n\n    def close(self):\n        self.destroy()\n\n    def start(self):\n        self.mainloop()\n\n\nif __name__ == \"__main__\":\n    app = App()\n    app.start()\n</code></pre>"},{"location":"python/pandoc/","title":"Pandoc","text":""},{"location":"python/pandoc/#md-pdf","title":"md -&gt; pdf","text":"<pre><code># https://github.com/Wandmalfarbe/pandoc-latex-template/tree/master\npandoc readme.md --pdf-engine=xelatex --standalone --toc --number-sections --template=templates/eisvogel.tex -V \"CJKmainfont=Microsoft YaHei UI\" -o a.pdf\n</code></pre>"},{"location":"python/pathlib/","title":"Pathlib","text":""},{"location":"python/pathlib/#glob","title":"glob","text":"<pre><code>from pathlib import Path\n\nfor path_file in Path.cwd().glob(\"*\"):\n    print(path_file)\n</code></pre>"},{"location":"python/pathlib/#_1","title":"\u5e38\u7528","text":"<pre><code>print(Path.home())\nprint(Path.cwd())\n</code></pre>"},{"location":"python/pathlib/#parse","title":"parse","text":"<pre><code>print(Path(r\"/home\"))\nprint(Path(r\"/home/test\"))\n\nprint(f\"You can find me here: {Path(__file__).parent}!\")\n</code></pre>"},{"location":"python/pathlib/#join","title":"join","text":"<pre><code>Path.home().joinpath(\"python\", \"scripts\", \"test.py\")\n\nPath.home() / \"python\" / \"test.py\"\n</code></pre>"},{"location":"python/pathlib/#attr","title":"attr","text":"<pre><code>test_path = Path(\"~/go/pkg/mod/golang.org/x/tools/gopls@v0.11.0/main.go\")\n\nprint(test_path.name) # main.go\nprint(test_path.stem) # main\nprint(test_path.suffix) # .go\nprint(test_path.parent) # ~/go/pkg/mod/golang.org/x/tools/gopls@v0.11.0\n</code></pre>"},{"location":"python/pathlib/#checking","title":"Checking","text":"<pre><code>Path(\"/asd\").exists()\nPath(\"/asd\").is_file()\nPath(\"/asd\").is_dir()\n\nPath('..').is_absolute() # False\n\nPath(\"/etc/ssh\").is_relative_to(\"/etc\") # True\n</code></pre>"},{"location":"python/pdf/","title":"Pdf","text":"<p>https://pypdf.readthedocs.io/en/stable/</p> pdf.py<pre><code>split ddia.pdf by chapter, then merge it.\nimport os.path\n\nfrom pypdf import PdfReader, PdfWriter\n\ninput_file = \"DDIA.pdf\"\noutput_file = \"out.pdf\"\n\npdf_reader = PdfReader(input_file)\npdf_writer = PdfWriter()\n\n\ndef info():\n    print(pdf_reader.metadata)\n    print(len(pdf_reader.pages))\n    print(pdf_reader.outline)\n\n\ndef split(begin, end):\n    for page in pdf_reader.pages[begin:end]:\n        pdf_writer.add_page(page)\n\n\ndef dest(file_name=output_file, pdf_writer=pdf_writer):\n    if os.path.exists(file_name):\n        os.remove(file_name)\n    pdf_writer.write(file_name)\n\n\n# Press the green button in the gutter to run the script.\nif __name__ == '__main__':\n    info()\n\n    merger = PdfWriter()\n    list_pdf = [\n        (24, 45),\n        (48, 86),\n        (90, 126),\n        (132, 162),\n        (172, 215),\n        (220, 240),\n        (242, 289),\n        (294, 334),\n        (342, 397),\n        (410, 453),\n        (460, 503),\n        (510, 566),\n    ]\n    for index, range_page in enumerate(list_pdf):\n        print(range_page, index)\n        split(*range_page)\n        file_name = \"%s.pdf\" % index\n        dest(file_name=file_name, pdf_writer=pdf_writer)\n        pdf_writer = PdfWriter()\n\n        merger.append(file_name)\n\n\n    dest(pdf_writer=merger)\n</code></pre>"},{"location":"python/socket/","title":"Socket","text":""},{"location":"python/socket/#socket","title":"socket \u7b80\u5355\u6587\u4ef6\u4f20\u8f93","text":"<p>https://github.com/x4nth055/pythoncode-tutorials/tree/master/general/transfer-files</p> file_send.py<pre><code>import socket\n\nBUFFER_SIZE = 1024 * 1024\nsk = socket.socket()\n\nsk.connect(('192.168.19.40', 9999))\n\nwith open(\"C:\\\\Users\\\\62497\\\\Downloads\\\\VSCodeUserSetup-x64-1.91.1.exe\", \"rb\") as f:\n    while True:\n       d = f.read(BUFFER_SIZE)\n       if not d:\n           break\n       sk.sendall(d)\nsk.send('quit'.encode())\n</code></pre> file_recv.py<pre><code>import socket\n\nBUFFER_SIZE = 1024 * 1024\n\nsk = socket.socket()\n\nsk.bind(('192.168.19.40', 9999))\n\nsk.listen(5)\n\nconn, address = sk.accept()\n\nwhile True:\n    with open('file', \"ab\") as f:\n        data = conn.recv(BUFFER_SIZE)\n        print(len(data))\n        if not data:\n            break\n        f.write(data)\nsk.close()\n</code></pre>"},{"location":"python/tkinter/","title":"Tkinter","text":""},{"location":"python/tkinter/#tkinter","title":"Tkinter \u57fa\u672c\u4f7f\u7528","text":"<p>\u53c2\u8003\u6559\u5b66\u7f51\u7ad9, \u89c6\u9891</p>"},{"location":"python/tkinter/#_1","title":"\u5c45\u4e2d\u663e\u793a","text":"center.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\nwindow_width = 300\nwindow_height = 150\n# create the root window\nroot = Tk()\nroot.title(\"Tkinter MessageBox\")\nroot.resizable(False, False)\n\nscreen_width = root.winfo_screenwidth()\nscreen_height = root.winfo_screenheight()\n\nx_cordinate = int((screen_width / 2) - (window_width / 2))\ny_cordinate = int((screen_height / 2) - (window_height / 2))\n\nroot.geometry(\n    \"{}x{}+{}+{}\".format(window_width, window_height, x_cordinate, y_cordinate)\n)\n\n# run the app\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#basepy","title":"base.py","text":"base.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\n\n# \u8bbe\u7f6e\u4e3b\u7a97\u53e3\nroot = Tk()\n# \u8bbe\u7f6e\u6807\u9898\nroot.title(\"ToolBox\")\n\n# \u80cc\u666f\u8272\n# root.configure(background=\"yellow\")\nroot.minsize(200, 200)\nroot.maxsize(500, 500)\n# \u8bbe\u7f6e\u5bbdx\u9ad8+\u5750\u6807\u504f\u79fb\nroot.geometry(\"300x300+50+50\")\n\n\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#buttonpy","title":"button.py","text":"button.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\nimport os\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\n\nroot = Tk()  # create parent window\n\n\ndef volumeUp():\n    \"\"\"output message to terminal to tell that the button is working\"\"\"\n    print(\"Volume Increase +1\")\n\n\ndef volumeDown():\n    \"\"\"output message to terminal to tell that the button is working\"\"\"\n    print(\"Volume Decrease -1\")\n\n\n# use Button and Label widgets to create a simple TV remote\ndef turnOnTV():\n    \"\"\"callback method used for turn_on button\"\"\"\n    # use a Toplevel widget to display an image in a new window\n    window = Toplevel(root)\n    window.title(\"TV\")\n    image = PhotoImage(file=os.path.join(dir_path, \"1.jpg\"))\n\n    original_image = Label(window, image=image)\n    original_image.image = image\n    original_image.pack()\n\n\nturn_on = Button(root, text=\"ON\", command=turnOnTV)\nturn_on.pack()\n\nturn_off = Button(root, text=\"OFF\", command=root.quit)\nturn_off.pack()\n\nvolume = Label(root, text=\"VOLUME\")\nvolume.pack()\n\nvol_up = Button(root, text=\"+\", command=volumeUp)\nvol_up.pack()\n\nvol_down = Button(root, text=\"-\", command=volumeDown)\nvol_down.pack()\n\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#demopy","title":"demo.py","text":"demo.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\n\n# \u6309\u94ae\u70b9\u51fb\ndef convert():\n    output_string.set(entry_int.get() * 1.61)\n\n\n# \u8bbe\u7f6e\u4e3b\u7a97\u53e3\nroot = Tk()\n# \u8bbe\u7f6e\u6807\u9898\nroot.title(\"ToolBox\")\n# \u8bbe\u7f6e\u5bbdx\u9ad8\nroot.geometry(\"300x200\")\n\ntitle_label = ttk.Label(master=root, text=\"Miles to kilometers\", font=\"Calibri 24 bold\")\ntitle_label.pack()\n\ninput_frame = ttk.Frame(master=root)\n\nentry_int = IntVar()\nentry = ttk.Entry(master=input_frame, textvariable=entry_int)\nentry.pack(side=\"left\", padx=10)\n\nbutton = ttk.Button(master=input_frame, text=\"Convert\", command=convert)\nbutton.pack(side=\"left\")\n\ninput_frame.pack(pady=10)\n\n# \u8f93\u51fa\noutput_string = StringVar()\noutput_label = ttk.Label(\n    master=root, text=\"Output\", font=\"Calibri 24\", textvariable=output_string\n)\noutput_label.pack(pady=5)\n\n# \u542f\u52a8\u4e3b\u7a97\u53e3\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#frame-demopy","title":"frame-demo.py","text":"frame-demo.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\n\nroot = Tk()  # create root window\nroot.title(\"Basic GUI Layout\")  # title of the GUI window\nroot.maxsize(900, 600)  # specify the max size the window can expand to\nroot.config(bg=\"skyblue\")  # specify background color\n\n# Create left and right frames\nleft_frame = Frame(root, width=200, height=400, bg=\"grey\")\nleft_frame.grid(row=0, column=0, padx=10, pady=5)\n\nright_frame = Frame(root, width=650, height=400, bg=\"grey\")\nright_frame.grid(row=0, column=1, padx=10, pady=5)\n\n# Create frames and labels in left_frame\nLabel(left_frame, text=\"Original Image\").grid(row=0, column=0, padx=5, pady=5)\n\n# load image to be \"edited\"\nimage = PhotoImage(file=\"1.jpg\")\noriginal_image = image.subsample(3, 3)  # resize image using subsample\nLabel(left_frame, image=original_image).grid(row=1, column=0, padx=5, pady=5)\n\n# Display image in right_frame\nLabel(right_frame, image=image).grid(row=0, column=0, padx=5, pady=5)\n\n# Create tool bar frame\ntool_bar = Frame(left_frame, width=180, height=185)\ntool_bar.grid(row=2, column=0, padx=5, pady=5)\n\n# Example labels that serve as placeholders for other widgets\nLabel(tool_bar, text=\"Tools\", relief=RAISED).grid(\n    row=0, column=0, padx=5, pady=3, ipadx=10\n)  # ipadx is padding inside the Label widget\nLabel(tool_bar, text=\"Filters\", relief=RAISED).grid(\n    row=0, column=1, padx=5, pady=3, ipadx=10\n)\n\n# Example labels that could be displayed under the \"Tool\" menu\nLabel(tool_bar, text=\"Select\").grid(row=1, column=0, padx=5, pady=5)\nLabel(tool_bar, text=\"Crop\").grid(row=2, column=0, padx=5, pady=5)\nLabel(tool_bar, text=\"Rotate &amp; Flip\").grid(row=3, column=0, padx=5, pady=5)\nLabel(tool_bar, text=\"Resize\").grid(row=4, column=0, padx=5, pady=5)\nLabel(tool_bar, text=\"Exposure\").grid(row=5, column=0, padx=5, pady=5)\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#frame-in-framepy","title":"frame-in-frame.py","text":"frame-in-frame.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\n\n# \u8bbe\u7f6e\u4e3b\u7a97\u53e3\nroot = Tk()\n# \u8bbe\u7f6e\u6807\u9898\nroot.title(\"ToolBox\")\nroot.config(bg=\"skyblue\")\n\nleft_frame = ttk.Frame(root, width=200, height=400)\nleft_frame.grid(row=0, column=0, padx=10, pady=5)\n\ntool_bar_style = ttk.Style()\ntool_bar_style.configure(\"tool_bar.TFrame\", background=\"purple\")\ntool_bar = ttk.Frame(left_frame, width=100, height=185, style=\"tool_bar.TFrame\")\ntool_bar.grid(row=2, column=0, padx=5, pady=5)\n\n\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#framepy","title":"frame.py","text":"frame.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\n\n# \u8bbe\u7f6e\u4e3b\u7a97\u53e3\nroot = Tk()\n# \u8bbe\u7f6e\u6807\u9898\nroot.title(\"ToolBox\")\nroot.config(bg=\"skyblue\")\n\nleft_frame = ttk.Frame(root, width=200, height=400)\nleft_frame.grid(row=0, column=0, padx=10, pady=5)\n\n\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#grid-demopy","title":"grid-demo.py","text":"grid-demo.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\nroot = Tk()\nroot.title(\"Profile Entry using Grid\")\nroot.geometry(\"500x300\")  # set starting size of window\nroot.maxsize(500, 300)  # width x height\nroot.config(bg=\"lightgrey\")\n\n# Profile picture\nimage = PhotoImage(file=\"1.jpg\")\nsmall_img = image.subsample(4, 4)\n\nimg = Label(root, image=small_img)\nimg.grid(row=0, column=0, rowspan=6, padx=5, pady=5)\n\n# Enter specific information for your profile into the following widgets\nenter_info = Label(root, text=\"Please enter your information: \", bg=\"lightgrey\")\nenter_info.grid(row=0, column=1, columnspan=4, padx=5, pady=5)\n\n# Name label and entry widgets\nLabel(root, text=\"Name\", bg=\"lightgrey\").grid(row=1, column=1, padx=5, pady=5, sticky=E)\n\nname = Entry(root, bd=3)\nname.grid(row=1, column=2, padx=5, pady=5)\n\n# Gender label and dropdown widgets\ngender = Menubutton(root, text=\"Gender\")\ngender.grid(row=2, column=2, padx=5, pady=5, sticky=W)\ngender.menu = Menu(gender, tearoff=0)\ngender[\"menu\"] = gender.menu\n\n# choices in gender dropdown menu\ngender.menu.add_cascade(label=\"Male\")\ngender.menu.add_cascade(label=\"Female\")\ngender.menu.add_cascade(label=\"Other\")\ngender.grid()\n\n# Eyecolor label and entry widgets\nLabel(root, text=\"Eye Color\", bg=\"lightgrey\").grid(\n    row=3, column=1, padx=5, pady=5, sticky=E\n)\neyes = Entry(root, bd=3)\neyes.grid(row=3, column=2, padx=5, pady=5)\n\n# Height and Weight labels and entry widgets\nLabel(root, text=\"Height\", bg=\"lightgrey\").grid(\n    row=4, column=1, padx=5, pady=5, sticky=E\n)\nLabel(root, text=\"inches\", bg=\"lightgrey\").grid(row=4, column=3, sticky=W)\n\nheight = Entry(root, bd=3)\nheight.grid(row=4, column=2, padx=5, pady=5)\n\nLabel(root, text=\"Weight\", bg=\"lightgrey\").grid(\n    row=5, column=1, padx=5, pady=5, sticky=E\n)\nLabel(root, text=\"lbs\", bg=\"lightgrey\").grid(row=5, column=3, sticky=W)\n\nweight = Entry(root, bd=3)\nweight.grid(row=5, column=2, padx=5, pady=5)\n\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#gridpy","title":"grid.py","text":"grid.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\n\nroot = Tk()\nroot.title(\"Practice with Grid\")\nroot.geometry(\"210x180\")  # set starting size of window\n\n\ndef display_checked():\n    \"\"\"check if the checkbuttons have been toggled, and display\n    a value of '1' if they are checked, '0' if not checked\"\"\"\n    red = red_var.get()\n    yellow = yellow_var.get()\n    green = green_var.get()\n    blue = blue_var.get()\n\n    print(\"red: {}\\nyellow:{}\\ngreen: {}\\nblue: {}\".format(red, yellow, green, blue))\n\n\n# Create label\nlabel = Label(root, text=\"Which colors do you like below?\")\nlabel.grid(row=0)\n\n# Create variables and checkbuttons\nred_var = IntVar()\nCheckbutton(root, width=10, text=\"red\", variable=red_var, bg=\"red\").grid(row=1)\n\nyellow_var = IntVar()\nCheckbutton(root, width=10, text=\"yellow\", variable=yellow_var, bg=\"yellow\").grid(row=2)\n\ngreen_var = IntVar()\nCheckbutton(root, width=10, text=\"green\", variable=green_var, bg=\"green\").grid(row=3)\n\nblue_var = IntVar()\nCheckbutton(root, width=10, text=\"blue\", variable=blue_var, bg=\"blue\").grid(row=4)\n\n# Create Buttons, one to check which colors are checked,\n# and another to close the window.\nButton(root, text=\"Tally\", command=display_checked).grid(row=5)\nButton(root, text=\"End\", command=root.quit).grid(row=6)\n\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#loginpy","title":"login.py","text":"login.py<pre><code>from tkinter import *\nfrom tkinter import ttk\n\n\nroot = Tk()\nroot.title(\"Login UI using Pack\")\nroot.geometry(\"400x320\")  # set starting size of window\nroot.maxsize(400, 320)  # width x height\nroot.config(bg=\"#6FAFE7\")  # set background color of root window\n\nlogin = Label(root, text=\"Login\", bg=\"#2176C1\", fg=\"white\", relief=RAISED)\nlogin.pack(ipady=5, fill=\"x\")\nlogin.config(font=(\"Font\", 30))  # change font and size of label\n\n# login image\nimage = PhotoImage(file=\"1.jpg\")\nimg_resize = image.subsample(5, 5)\nLabel(root, image=img_resize, bg=\"white\", relief=SUNKEN).pack(pady=5)\n\n\ndef checkInput():\n    \"\"\"check that the username and password match\"\"\"\n    usernm = \"Username301\"\n    pswrd = \"Passw0rd\"\n    entered_usernm = username_entry.get()  # get username from Entry widget\n    entered_pswrd = password_entry.get()  # get password from Entry widget\n\n    if (usernm == entered_usernm) and (pswrd == entered_pswrd):\n        print(\"Hello!\")\n        root.destroy()\n\n    else:\n        print(\"Login failed: Invalid username or password.\")\n\n\ndef toggled():\n    \"\"\"display a message to the terminal every time the check button\n    is clicked\"\"\"\n    print(\"The check button works.\")\n\n\n# Username Entry\nusername_frame = Frame(root, bg=\"#6FAFE7\")\nusername_frame.pack()\n\nLabel(username_frame, text=\"Username\", bg=\"#6FAFE7\").pack(side=\"left\", padx=5)\n\nusername_entry = Entry(username_frame, bd=3)\nusername_entry.pack(side=\"right\")\n\n# Password entry\npassword_frame = Frame(root, bg=\"#6FAFE7\")\npassword_frame.pack()\n\nLabel(password_frame, text=\"Password\", bg=\"#6FAFE7\").pack(side=\"left\", padx=7)\n\npassword_entry = Entry(password_frame, bd=3)\npassword_entry.pack(side=\"right\")\n\n# Create Go! Button\n\ngo_button = Button(root, text=\"GO!\", command=checkInput, bg=\"#6FAFE7\", width=15)\n\ngo_button.pack(pady=5)\n\n# Remember me and forgot password\nbottom_frame = Frame(root, bg=\"#6FAFE7\")\nbottom_frame.pack()\n\nvar = IntVar()\n\nremember_me = Checkbutton(\n    bottom_frame, text=\"Remember me\", bg=\"#6FAFE7\", command=toggled, variable=var\n)\nremember_me.pack(side=\"left\", padx=19)\n\n# The forgot password Label is just a placeholder, has no function currently\nforgot_pswrd = Label(bottom_frame, text=\"Forgot password?\", bg=\"#6FAFE7\")\nforgot_pswrd.pack(side=\"right\", padx=19)\n\nroot.mainloop()\n</code></pre>"},{"location":"python/tkinter/#messageboxpy","title":"messageBox.py","text":"messageBox.py<pre><code>from tkinter import *\nfrom tkinter import ttk\nfrom tkinter.messagebox import showerror, showwarning, showinfo\n\n# create the root window\nroot = Tk()\nroot.title(\"Tkinter MessageBox\")\nroot.resizable(False, False)\nroot.geometry(\"300x150\")\n\n#\noptions = {\"fill\": \"both\", \"padx\": 10, \"pady\": 10, \"ipadx\": 5}\n\nttk.Button(\n    root,\n    text=\"Show an error message\",\n    command=lambda: showerror(title=\"Error\", message=\"This is an error message.\"),\n).pack(**options)\n\nttk.Button(\n    root,\n    text=\"Show an information message\",\n    command=lambda: showinfo(\n        title=\"Information\", message=\"This is an information message.\"\n    ),\n).pack(**options)\n\n\nttk.Button(\n    root,\n    text=\"Show an warning message\",\n    command=lambda: showwarning(title=\"Warning\", message=\"This is a warning message.\"),\n).pack(**options)\n\n\n# run the app\nroot.mainloop()\n</code></pre>"},{"location":"python/upload/","title":"Upload","text":"<p>\u4e0a\u4f20\u6587\u4ef6</p> upload.py<pre><code>#!/usr/bin/env python3\n\n\"\"\"Simple HTTP Server With Upload.\n\nThis module builds on BaseHTTPServer by implementing the standard GET\nand HEAD requests in a fairly straightforward manner.\n\nsee: https://gist.github.com/UniIsland/3346170\n\"\"\"\n\n\n__version__ = \"0.1\"\n__all__ = [\"SimpleHTTPRequestHandler\"]\n__author__ = \"bones7456\"\n__home_page__ = \"http://li2z.cn/\"\n\nimport os\nimport posixpath\nimport http.server\nimport urllib.request, urllib.parse, urllib.error\nimport html\nimport shutil\nimport mimetypes\nimport re\nfrom io import BytesIO\n\n\nclass SimpleHTTPRequestHandler(http.server.BaseHTTPRequestHandler):\n\n    \"\"\"Simple HTTP request handler with GET/HEAD/POST commands.\n\n    This serves files from the current directory and any of its\n    subdirectories.  The MIME type for files is determined by\n    calling the .guess_type() method. And can reveive file uploaded\n    by client.\n\n    The GET/HEAD/POST requests are identical except that the HEAD\n    request omits the actual contents of the file.\n\n    \"\"\"\n\n    server_version = \"SimpleHTTPWithUpload/\" + __version__\n\n    def do_GET(self):\n        \"\"\"Serve a GET request.\"\"\"\n        f = self.send_head()\n        if f:\n            self.copyfile(f, self.wfile)\n            f.close()\n\n    def do_HEAD(self):\n        \"\"\"Serve a HEAD request.\"\"\"\n        f = self.send_head()\n        if f:\n            f.close()\n\n    def do_POST(self):\n        \"\"\"Serve a POST request.\"\"\"\n        r, info = self.deal_post_data()\n        print((r, info, \"by: \", self.client_address))\n        f = BytesIO()\n        f.write(b'&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;')\n        f.write(b\"&lt;html&gt;\\n&lt;title&gt;Upload Result Page&lt;/title&gt;\\n\")\n        f.write(b\"&lt;body&gt;\\n&lt;h2&gt;Upload Result Page&lt;/h2&gt;\\n\")\n        f.write(b\"&lt;hr&gt;\\n\")\n        if r:\n            f.write(b\"&lt;strong&gt;Success:&lt;/strong&gt;\")\n        else:\n            f.write(b\"&lt;strong&gt;Failed:&lt;/strong&gt;\")\n        f.write(info.encode())\n        f.write((\"&lt;br&gt;&lt;a href=\\\"%s\\\"&gt;back&lt;/a&gt;\" % self.headers['referer']).encode())\n        f.write(b\"&lt;hr&gt;&lt;small&gt;Powerd By: bones7456, check new version at \")\n        f.write(b\"&lt;a href=\\\"http://li2z.cn/?s=SimpleHTTPServerWithUpload\\\"&gt;\")\n        f.write(b\"here&lt;/a&gt;.&lt;/small&gt;&lt;/body&gt;\\n&lt;/html&gt;\\n\")\n        length = f.tell()\n        f.seek(0)\n        self.send_response(200)\n        self.send_header(\"Content-type\", \"text/html\")\n        self.send_header(\"Content-Length\", str(length))\n        self.end_headers()\n        if f:\n            self.copyfile(f, self.wfile)\n            f.close()\n\n    def deal_post_data(self):\n        content_type = self.headers['content-type']\n        if not content_type:\n            return (False, \"Content-Type header doesn't contain boundary\")\n        boundary = content_type.split(\"=\")[1].encode()\n        remainbytes = int(self.headers['content-length'])\n        line = self.rfile.readline()\n        remainbytes -= len(line)\n        if not boundary in line:\n            return (False, \"Content NOT begin with boundary\")\n        line = self.rfile.readline()\n        remainbytes -= len(line)\n        fn = re.findall(r'Content-Disposition.*name=\"file\"; filename=\"(.*)\"', line.decode())\n        if not fn:\n            return (False, \"Can't find out file name...\")\n        path = self.translate_path(self.path)\n        fn = os.path.join(path, fn[0])\n        line = self.rfile.readline()\n        remainbytes -= len(line)\n        line = self.rfile.readline()\n        remainbytes -= len(line)\n        try:\n            out = open(fn, 'wb')\n        except IOError:\n            return (False, \"Can't create file to write, do you have permission to write?\")\n\n        preline = self.rfile.readline()\n        remainbytes -= len(preline)\n        while remainbytes &gt; 0:\n            line = self.rfile.readline()\n            remainbytes -= len(line)\n            if boundary in line:\n                preline = preline[0:-1]\n                if preline.endswith(b'\\r'):\n                    preline = preline[0:-1]\n                out.write(preline)\n                out.close()\n                return (True, \"File '%s' upload success!\" % fn)\n            else:\n                out.write(preline)\n                preline = line\n        return (False, \"Unexpect Ends of data.\")\n\n    def send_head(self):\n        \"\"\"Common code for GET and HEAD commands.\n\n        This sends the response code and MIME headers.\n\n        Return value is either a file object (which has to be copied\n        to the outputfile by the caller unless the command was HEAD,\n        and must be closed by the caller under all circumstances), or\n        None, in which case the caller has nothing further to do.\n\n        \"\"\"\n        path = self.translate_path(self.path)\n        f = None\n        if os.path.isdir(path):\n            if not self.path.endswith('/'):\n                # redirect browser - doing basically what apache does\n                self.send_response(301)\n                self.send_header(\"Location\", self.path + \"/\")\n                self.end_headers()\n                return None\n            for index in \"index.html\", \"index.htm\":\n                index = os.path.join(path, index)\n                if os.path.exists(index):\n                    path = index\n                    break\n            else:\n                return self.list_directory(path)\n        ctype = self.guess_type(path)\n        try:\n            # Always read in binary mode. Opening files in text mode may cause\n            # newline translations, making the actual size of the content\n            # transmitted *less* than the content-length!\n            f = open(path, 'rb')\n        except IOError:\n            self.send_error(404, \"File not found\")\n            return None\n        self.send_response(200)\n        self.send_header(\"Content-type\", ctype)\n        fs = os.fstat(f.fileno())\n        self.send_header(\"Content-Length\", str(fs[6]))\n        self.send_header(\"Last-Modified\", self.date_time_string(fs.st_mtime))\n        self.end_headers()\n        return f\n\n    def list_directory(self, path):\n        \"\"\"Helper to produce a directory listing (absent index.html).\n\n        Return value is either a file object, or None (indicating an\n        error).  In either case, the headers are sent, making the\n        interface the same as for send_head().\n\n        \"\"\"\n        try:\n            list = os.listdir(path)\n        except os.error:\n            self.send_error(404, \"No permission to list directory\")\n            return None\n        list.sort(key=lambda a: a.lower())\n        f = BytesIO()\n        displaypath = html.escape(urllib.parse.unquote(self.path))\n        f.write(b'&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;')\n        f.write((\"&lt;html&gt;\\n&lt;title&gt;Directory listing for %s&lt;/title&gt;\\n\" % displaypath).encode())\n        f.write((\"&lt;body&gt;\\n&lt;h2&gt;Directory listing for %s&lt;/h2&gt;\\n\" % displaypath).encode())\n        f.write(b\"&lt;hr&gt;\\n\")\n        f.write(b\"&lt;form ENCTYPE=\\\"multipart/form-data\\\" method=\\\"post\\\"&gt;\")\n        f.write(b\"&lt;input name=\\\"file\\\" type=\\\"file\\\"/&gt;\")\n        f.write(b\"&lt;input type=\\\"submit\\\" value=\\\"upload\\\"/&gt;&lt;/form&gt;\\n\")\n        f.write(b\"&lt;hr&gt;\\n&lt;ul&gt;\\n\")\n        for name in list:\n            fullname = os.path.join(path, name)\n            displayname = linkname = name\n            # Append / for directories or @ for symbolic links\n            if os.path.isdir(fullname):\n                displayname = name + \"/\"\n                linkname = name + \"/\"\n            if os.path.islink(fullname):\n                displayname = name + \"@\"\n                # Note: a link to a directory displays with @ and links with /\n            f.write(('&lt;li&gt;&lt;a href=\"%s\"&gt;%s&lt;/a&gt;\\n'\n                    % (urllib.parse.quote(linkname), html.escape(displayname))).encode())\n        f.write(b\"&lt;/ul&gt;\\n&lt;hr&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n\")\n        length = f.tell()\n        f.seek(0)\n        self.send_response(200)\n        self.send_header(\"Content-type\", \"text/html\")\n        self.send_header(\"Content-Length\", str(length))\n        self.end_headers()\n        return f\n\n    def translate_path(self, path):\n        \"\"\"Translate a /-separated PATH to the local filename syntax.\n\n        Components that mean special things to the local file system\n        (e.g. drive or directory names) are ignored.  (XXX They should\n        probably be diagnosed.)\n\n        \"\"\"\n        # abandon query parameters\n        path = path.split('?',1)[0]\n        path = path.split('#',1)[0]\n        path = posixpath.normpath(urllib.parse.unquote(path))\n        words = path.split('/')\n        words = [_f for _f in words if _f]\n        path = os.getcwd()\n        for word in words:\n            drive, word = os.path.splitdrive(word)\n            head, word = os.path.split(word)\n            if word in (os.curdir, os.pardir): continue\n            path = os.path.join(path, word)\n        return path\n\n    def copyfile(self, source, outputfile):\n        \"\"\"Copy all data between two file objects.\n\n        The SOURCE argument is a file object open for reading\n        (or anything with a read() method) and the DESTINATION\n        argument is a file object open for writing (or\n        anything with a write() method).\n\n        The only reason for overriding this would be to change\n        the block size or perhaps to replace newlines by CRLF\n        -- note however that this the default server uses this\n        to copy binary data as well.\n\n        \"\"\"\n        shutil.copyfileobj(source, outputfile)\n\n    def guess_type(self, path):\n        \"\"\"Guess the type of a file.\n\n        Argument is a PATH (a filename).\n\n        Return value is a string of the form type/subtype,\n        usable for a MIME Content-type header.\n\n        The default implementation looks the file's extension\n        up in the table self.extensions_map, using application/octet-stream\n        as a default; however it would be permissible (if\n        slow) to look inside the data to make a better guess.\n\n        \"\"\"\n\n        base, ext = posixpath.splitext(path)\n        if ext in self.extensions_map:\n            return self.extensions_map[ext]\n        ext = ext.lower()\n        if ext in self.extensions_map:\n            return self.extensions_map[ext]\n        else:\n            return self.extensions_map['']\n\n    if not mimetypes.inited:\n        mimetypes.init() # try to read system mime.types\n    extensions_map = mimetypes.types_map.copy()\n    extensions_map.update({\n        '': 'application/octet-stream', # Default\n        '.py': 'text/plain',\n        '.c': 'text/plain',\n        '.h': 'text/plain',\n        })\n\n\ndef test(HandlerClass = SimpleHTTPRequestHandler,\n         ServerClass = http.server.HTTPServer):\n    http.server.test(HandlerClass, ServerClass)\n\nif __name__ == '__main__':\n    test()\n</code></pre>"},{"location":"python/uv/","title":"Uv","text":""},{"location":"python/uv/#uv","title":"uv\u5e38\u7528","text":"<p>https://docs.astral.sh/uv</p>"},{"location":"python/uv/#_1","title":"\u521d\u59cb\u5316\u9879\u76ee","text":"<p>\u4f7f\u7528\u56fd\u5185\u955c\u50cf UV_PYTHON_INSTALL_MIRROR=\"https://mirror.nju.edu.cn/github-release/indygreg/python-build-standalone/\"</p> <pre><code>uv init example\n</code></pre>"},{"location":"python/uv/#_2","title":"\u6dfb\u52a0\u4f9d\u8d56","text":"<p>\u4f7f\u7528\u56fd\u5185\u6e90 --index https://mirrors.cernet.edu.cn/pypi/web/simple</p> <pre><code>uv add ruff\n</code></pre>"},{"location":"python/uv/#_3","title":"\u8fd0\u884c","text":"<pre><code>uv run main.py\n</code></pre>"},{"location":"python/uv/#python","title":"\u521d\u59cb\u5316\u811a\u672c+\u6307\u5b9apython\u7248\u672c","text":"<pre><code>uv init --script example.py --python 3.12\n</code></pre>"},{"location":"python/uv/#_4","title":"\u7ed9\u7279\u6b8a\u811a\u672c\u6dfb\u52a0\u4f9d\u8d56","text":"<pre><code>uv add --script example.py 'requests&lt;3' 'rich'\n</code></pre>"},{"location":"python/uv/#docker","title":"docker\u955c\u50cf","text":"<p>\u53c2\u8003 uvicorn \u65b9\u5f0f</p>"},{"location":"sql/mysqlbinlog/","title":"\u67e5\u770bbinlog\u662f\u5426\u5f00\u542f","text":"<pre><code>show variables like '%log_bin%';\n</code></pre>"},{"location":"sql/mysqlbinlog/#binlog_1","title":"\u67e5\u770b\u6700\u65b0binlog\u6587\u4ef6\u540d\u79f0","text":"<pre><code>show master status ;\n</code></pre>"},{"location":"sql/mysqlbinlog/#binlog-limit-20","title":"\u67e5\u770bbinlog\u65e5\u5fd7, \u5efa\u8bae\u52a0limit, \u8868\u793a\u6700\u65b020\u6761","text":"<pre><code>show binlog events in 'mysql-bin.008187'  limit 20;\n</code></pre>"},{"location":"sql/mysqlbinlog/#log-mysql-bin000001-mysql-bin000002","title":"\u751f\u6210\u65b0\u7684log\u6587\u4ef6, \u5982\u679c\u5f53\u524d\u662fmysql-bin.000001, \u90a3\u5c31\u8fdb\u5165mysql-bin.000002","text":"<pre><code>FLUSH LOGS;\n</code></pre>"},{"location":"sql/mysqlbinlog/#_1","title":"\u67e5\u770b\u4e8c\u8fdb\u5236\u65e5\u5fd7\u6587\u4ef6\u5185\u5bb9","text":"<pre><code>mysqlbinlog /path/to/mysql-bin.000001\n\n# \u4f1a\u5c55\u793asql\u8bed\u53e5\nmysqlbinlog -v /path/to/mysql-bin.000001\nmysqlbinlog -vv /path/to/mysql-bin.000001\n</code></pre>"},{"location":"sql/mysqlbinlog/#_2","title":"\u6839\u636e\u4f4d\u7f6e\u67e5\u770b","text":"<pre><code>mysqlbinlog --start-position=100 --stop-position=200 /path/to/mysql-bin.000001\n</code></pre>"},{"location":"sql/mysqlbinlog/#_3","title":"\u6839\u636e\u65f6\u95f4\u67e5\u770b","text":"<pre><code>mysqlbinlog --start-datetime=\"2025-01-01 00:00:00\" --stop-datetime=\"2025-01-02 00:00:00\" /path/to/mysql-bin.000001\n</code></pre>"},{"location":"sql/mysqlbinlog/#_4","title":"\u56de\u6eda\u81f3\u8bef\u64cd\u4f5c\u524d\uff0c\u4e0a\u8ff0\u540c\u7406","text":"<pre><code>mysqlbinlog --stop-datetime=\"2025-01-09 10:00:00\" /path/to/mysql-bin.000001 | mysql -u root -p your_database\n</code></pre>"},{"location":"sql/mysqlbinlog/#_5","title":"\u53c2\u8003","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.4/en/binary-log.html</li> <li>https://dev.mysql.com/doc/refman/8.4/en/mysqlbinlog.html</li> <li>https://dev.mysql.com/doc/refman/8.4/en/mysqlbinlog-row-events.html</li> <li>https://help.aliyun.com/zh/rds/apsaradb-rds-for-mysql/apsaradb-rds-for-mysql-remotely-obtains-and-parses-binlog-logs</li> <li>https://help.aliyun.com/zh/rds/apsaradb-rds-for-mysql/restoration-1/</li> <li>https://cloud.tencent.com/developer/article/1922672</li> <li>https://www.cnblogs.com/hld123/p/17115848.html</li> </ul>"},{"location":"sql/mysqlbinlog/#_6","title":"\u5de5\u5177\u96c6","text":"<ul> <li>https://github.com/danfengcao/binlog2sql</li> <li>https://github.com/LianjiaTech/lightning</li> <li>https://github.com/alibaba/canal</li> </ul>"},{"location":"sql/mysqlbinlog/#_7","title":"\u601d\u8def","text":"<ul> <li>\u628a\u6570\u636e\u8fd8\u539f\u4e0a\u4e00\u4e2a\u72b6\u6001\uff0c\u5982\u4e00\u6761\u6570\u636e\u88ab\u5220\u9664\uff0c\u4e0d\u4ec5\u8981\u627e\u5230insert\u65f6\u5019\u7684\u65e5\u5fd7\uff0c\u8fd8\u8981\u627e\u5230\u540e\u7eed\u7684update\u3002</li> <li>\u5982\u679c\u4e8b\u52a1\u590d\u6742\uff0c\u8bb0\u5f97\u9501\u5e93\u9501\u8868</li> </ul>"},{"location":"sql/mysqlbinlog/#_8","title":"\u7b80\u5355\u4f8b\u5b50","text":"<p>\u8868<code>users</code>\u63d2\u5165\u4e00\u6761\u6570\u636e\uff0c\u6a21\u62df\u8bef\u5220\uff0c\u6062\u590d\u8fd9\u6761\u6570\u636e</p>"},{"location":"sql/mysqlbinlog/#_9","title":"\u51c6\u5907\u6570\u636e","text":"<p>\u5982\u679c\u4e0d\u5f71\u54cd\u5176\u4ed6\uff0c\u53ef\u624b\u52a8\u5207\u4e00\u4e2a\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6</p> <pre><code>-- \u521b\u5efa\u6570\u636e\u5e93\nCREATE DATABASE IF NOT EXISTS test_db;\n\n-- \u4f7f\u7528 test_db \u6570\u636e\u5e93\nUSE test_db;\n\n-- \u521b\u5efa users \u8868\nCREATE TABLE IF NOT EXISTS users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100)\n);\n\n-- \u63d2\u5165\u521d\u59cb\u6570\u636e\nINSERT INTO users (name, email) VALUES\n('Alice', 'alice@example.com'),\n('Bob', 'bob@example.com'),\n('Charlie', 'charlie@example.com');\n</code></pre> <p>\u67e5\u770b\u5f53\u524d\u6570\u636e</p> <pre><code>select * from users;\n</code></pre>"},{"location":"sql/mysqlbinlog/#_10","title":"\u6a21\u62df\u8bef\u5220\u9664","text":"<pre><code>insert into users (name, email) values('abc', 'abc');\ndelete from users where id=4;\n</code></pre>"},{"location":"sql/mysqlbinlog/#binlogevent","title":"\u67e5\u770bbinlog\u7684event","text":"<pre><code>show master status;\nshow binlog events in 'mysql-bin.008187'  limit 20;\n</code></pre>"},{"location":"sql/mysqlbinlog/#_11","title":"\u6062\u590d\u88ab\u8bef\u5220\u9664\u7684\u6570\u636e","text":"<pre><code>mysqlbinlog --start-position=12 --stop-position=13 /var/lib/mysql/binlog.000001 | mysql\n</code></pre> <p>\u67e5\u770b\u7ed3\u679c</p> <pre><code>select * from users;\n</code></pre>"},{"location":"sql/%E5%AD%A6%E4%B9%A0%E5%9C%B0%E5%9D%80/","title":"\u5b66\u4e60\u5730\u5740","text":"<p>https://www.programiz.com/sql/</p>"},{"location":"sql/%E5%B8%B8%E7%94%A8/","title":"\u5e38\u7528","text":"<p>\u5de5\u5177 https://github.com/percona/percona-toolkit</p>"},{"location":"sql/%E5%B8%B8%E7%94%A8/#_1","title":"\u6e05\u7a7a\u8868","text":"<pre><code>TRUNCATE TABLE top_search;\n</code></pre>"},{"location":"sql/%E5%B8%B8%E7%94%A8/#_2","title":"\u521b\u5efa\u805a\u5408\u7d22\u5f15","text":"<pre><code>create index idx_all on tb_1(filed_1, filed_2);\n</code></pre>"},{"location":"sql/%E5%B8%B8%E7%94%A8/#_3","title":"\u67e5\u770b\u6b63\u5728\u6267\u884c\u7684\u8bed\u53e5\uff0c\u5e76\u5220\u9664","text":"<pre><code># \u67e5\u770b\nshow processlist;\n\nshow full processlist;\n\n# \u6839\u636e\u72b6\u6001\u67e5\u627e\uff0c\u4e5f\u53ef\u6839\u636einfo\u67e5\u627e\uff0cinfo\u662f\u6267\u884c\u7684sql\u8bed\u53e5\nSELECT * FROM INFORMATION_SCHEMA.PROCESSLIST WHERE COMMAND != 'Sleep';\n\n# \u5220\u9664\nkill query 60581562;\n</code></pre>"},{"location":"sql/%E5%B8%B8%E7%94%A8/#_4","title":"\u5206\u6790","text":"<p>\u4e3b\u8981\u5c31\u662f\u770b<code>type</code>\u5b57\u6bb5\u3002</p> <pre><code>EXPLAIN sql;\n</code></pre>"},{"location":"sql/%E5%B8%B8%E7%94%A8/#_5","title":"\u67e5\u770b\u6ca1\u6709\u5efa\u7acb\u7d22\u5f15\u7684\u8868","text":"<pre><code>SELECT \n    table_schema AS `Database`,\n    table_name AS `Table`\nFROM \n    information_schema.tables\nWHERE \n    table_schema NOT IN ('information_schema', 'mysql', 'performance_schema', 'sys') -- \u6392\u9664\u7cfb\u7edf\u6570\u636e\u5e93\n    AND table_type = 'BASE TABLE'\n    AND NOT EXISTS (\n        SELECT \n            1\n        FROM \n            information_schema.statistics\n        WHERE \n            table_schema = tables.table_schema\n            AND table_name = tables.table_name\n        LIMIT 1\n    )\nORDER BY \n    table_schema, table_name;\n</code></pre>"},{"location":"sql/%E5%B8%B8%E7%94%A8/#_6","title":"\u7b80\u5355\u7684\u5355\u8868\u5206\u533a","text":"<p>\u9002\u5408\u5355\u8868\u4e1a\u52a1\uff0c\u548c\u5176\u4ed6\u8868\u4e0d\u5b58\u5728\u903b\u8f91\u5173\u7cfb</p> <p>https://dev.mysql.com/doc/refman/8.4/en/partitioning-selection.html https://www.squash.io/tutorial-on-database-sharding-in-mysql/</p>"},{"location":"sql/%E5%B8%B8%E7%94%A8/#hash","title":"\u4f7f\u7528hash\u793a\u4f8b","text":"<pre><code># \u521b\u5efa\nCREATE TABLE orders (\n    order_id INT AUTO_INCREMENT,\n    customer_id INT,  -- \u5b57\u7b26\u4e32\u7c7b\u578b\n    order_date DATE,\n    amount DECIMAL(10, 2),\n    PRIMARY KEY (order_id, customer_id)\n) ENGINE=InnoDB\nPARTITION BY HASH customer_id\nPARTITIONS 20;\n\n# \u63d2\u5165\nINSERT INTO orders (customer_id, order_date, amount) VALUES (1, '2023-05-01', 100.00);\nINSERT INTO orders (customer_id, order_date, amount) VALUES (21, '2023-05-02', 150.00);\nINSERT INTO orders (customer_id, order_date, amount) VALUES (42, '2023-05-03', 200.00);\n\n# \u67e5\u8be2\nSELECT * FROM orders WHERE customer_id = 1;\n</code></pre>"},{"location":"sql/%E5%B8%B8%E7%94%A8/#_7","title":"\u67e5\u770b\u6bcf\u4e2a\u5206\u533a\u7684\u8be6\u60c5","text":"<pre><code>SELECT \n    TABLE_NAME,\n    PARTITION_NAME,\n    PARTITION_ORDINAL_POSITION,\n    PARTITION_METHOD,\n    TABLE_ROWS,\n    DATA_LENGTH,\n    INDEX_LENGTH,\n    PARTITION_COMMENT\nFROM \n    information_schema.PARTITIONS\nWHERE \n    TABLE_NAME = 'orders';  -- \u66ff\u6362\u4e3a\u4f60\u7684\u8868\u540d\n</code></pre>"},{"location":"tools/HuggingFace/mirror/","title":"Mirror","text":""},{"location":"tools/HuggingFace/mirror/#_1","title":"\u56fd\u5185\u955c\u50cf","text":"<p>https://hf-mirror.com/</p> <pre><code>export HF_ENDPOINT=\"https://hf-mirror.com\"\n</code></pre>"},{"location":"tools/airflow/%E5%B8%B8%E7%94%A8/","title":"\u5e38\u7528","text":""},{"location":"tools/airflow/%E5%B8%B8%E7%94%A8/#_1","title":"\u5b66\u4e60\u5730\u5740","text":"<p>https://www.sparkcodehub.com/airflow/fundamentals/introduction</p>"},{"location":"tools/airflow/%E5%B8%B8%E7%94%A8/#_2","title":"\u7b80\u5355\u4f8b\u5b50","text":"simple_dag.py<pre><code>from airflow import DAG\nfrom airflow.operators.bash import BashOperator\nfrom airflow.operators.python import PythonOperator, BranchPythonOperator\nfrom datetime import datetime, timedelta\n\n# with DAG(\n#     dag_id=\"simple_dag\",\n#     start_date=datetime(2025, 1, 1),\n#     schedule_interval=\"@daily\",\n#     catchup=False,\n# ) as dag:\n#     start = BashOperator(\n#         task_id=\"start_task\",\n#         bash_command=\"echo 'Starting the workflow!'\",\n#     )\n#     end = BashOperator(\n#         task_id=\"end_task\",\n#         bash_command=\"echo 'Workflow complete!'\",\n#     )\n#     start &gt;&gt; end\n\n# with DAG(\n#     dag_id=\"etl_dag\",\n#     start_date=datetime(2025, 1, 1),\n#     schedule_interval=\"@daily\",\n#     catchup=False,\n# ) as dag:\n#     extract = BashOperator(task_id=\"extract\", bash_command=\"echo 'Extractiong data'\")\n#     transform = BashOperator(\n#         task_id=\"transform\", bash_command=\"echo 'Transforming data'\"\n#     )\n#     load = BashOperator(task_id=\"load\", bash_command=\"echo 'Loading date'\")\n\n#     extract &gt;&gt; transform &gt;&gt; load\n\n\n# def process_data():\n#     print(\"Processing data with Python!\")\n\n\n# with DAG(\n#     dag_id=\"python_dag\",\n#     start_date=datetime(2025, 1, 1),\n#     schedule_interval=\"@daily\",\n#     catchup=False,\n# ) as dag:\n#     start = PythonOperator(task_id=\"start\", python_callable=process_data)\n\n\n# with DAG(\n#     dag_id=\"complex_dag\",\n#     start_date=datetime(2025, 1, 1),\n#     schedule_interval=\"@daily\",\n#     catchup=False,\n# ) as dag:\n#     extract = BashOperator(task_id=\"extract\", bash_command=\"echo 'Extract'\")\n#     transform1 = BashOperator(task_id=\"transform1\", bash_command=\"echo 'Transform 1'\")\n#     transform2 = BashOperator(task_id=\"transform2\", bash_command=\"echo 'Transform 2'\")\n#     load = BashOperator(task_id=\"load\", bash_command=\"echo 'Load'\")\n#     extract &gt;&gt; [transform1, transform2] &gt;&gt; load\n\n\n# default_args = {\n#     \"retries\": 2,\n#     \"retry_delay\": timedelta(minutes=2),\n# }\n\n# with DAG(\n#     dag_id=\"param_dag\",\n#     start_date=datetime(2025, 4, 13),\n#     schedule_interval=\"@daily\",\n#     catchup=False,\n#     max_active_runs=2,\n#     default_args=default_args,\n#     description=\"A daily workflow with custom paramters\",\n# ) as dag:\n#     start = BashOperator(task_id=\"start_task\", bash_command=\"echo 'Staring!'\")\n#     end = BashOperator(task_id=\"end_stask\", bash_command=\"echo 'Done!'\")\n#     start &gt;&gt; end\n\n\n# with DAG(\n#     dag_id=\"cwd_bash_dag\",\n#     start_date=datetime(2025, 4, 1),\n#     schedule_interval=\"@daily\",\n#     catchup=False,\n# ) as dag:\n#     run_cwd = BashOperator(\n#         task_id=\"run_cwd\",\n#         bash_command=\"ls -l\",\n#         cwd=\"/tmp\",\n#     )\n\n# with DAG(\n#     dag_id=\"exit_code_bash_dag\",\n#     start_date=datetime(2025, 4, 1),\n#     schedule_interval=\"@daily\",\n#     catchup=False,\n# ) as dag:\n#     run_exit = BashOperator(\n#         task_id=\"run_exit\",\n#         bash_command=\"exit 100\",\n#         skip_exit_code=100,\n#     )\n\n\n# def afternoon_task():\n#     print(\"Running at 2:30 PM!\")\n\n\n# with DAG(\n#     dag_id=\"specific_time_dag\",\n#     start_date=datetime(2025, 1, 1),\n#     schedule_interval=\"15 * * * *\",  # 2:30 PM daily\n#     catchup=False,\n# ) as dag:\n#     task = PythonOperator(\n#         task_id=\"afternoon_task\",\n#         python_callable=afternoon_task,\n#     )\n\n\n# def catchup_task(ds):\n#     print(f\"Processing data for {ds}\")\n\n\n# with DAG(\n#     dag_id=\"catchup_daily_dag\",\n#     start_date=datetime(2025, 4, 9),\n#     schedule_interval=\"0 0 * * *\",  # Midnight UTC daily\n#     catchup=True,\n# ) as dag:\n#     task = PythonOperator(\n#         task_id=\"catchup_task\",\n#         python_callable=catchup_task,\n#         op_kwargs={\"ds\": \"{ { ds } }\"},\n#     )\n\n\ndef banch_func(**context):\n    excution_date = context[\"execution_date\"]\n    print(excution_date)\n    if excution_date.weekday() &lt; 5:\n        return \"weekday_task\"\n    else:\n        return \"weekend_task\"\n\n\nwith DAG(\n    dag_id=\"banching_dag\",\n    start_date=datetime(2025, 4, 14),\n    schedule_interval=\"@daily\",\n    catchup=False,\n) as dag:\n    branch_task = BranchPythonOperator(\n        task_id=\"branch_task\",\n        python_callable=banch_func,\n        provide_context=True,\n    )\n    weekday_task = BashOperator(\n        task_id=\"weekday_task\",\n        bash_command=\"echo 'Running on a weekday!'\",\n    )\n    weekend_task = BashOperator(\n        task_id=\"weekend_task\",\n        bash_command=\"echo 'Running on a weekend!'\",\n    )\n\n    branch_task &gt;&gt; [weekday_task, weekend_task]\n</code></pre>"},{"location":"tools/ansible/demo/","title":"Demo","text":""},{"location":"tools/ansible/demo/#_1","title":"\u90e8\u7f72\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6","text":"<p>https://github.com/ansistrano/deploy</p> inventory.ini<pre><code>[alpine]\n10.0.2.4\n10.0.2.5\n10.0.2.6\n[ubuntu]\n10.0.2.9\n10.0.2.8\n[tips]\n10.0.2.9\n[prod]\n10.0.2.9\n</code></pre> deploy.yml<pre><code>- hosts: tips\n  become: yes\n  roles:\n    - { role: ansistrano.deploy }\n  vars:\n    ansistrano_deploy_to: /var/www/your_app\n    ansistrano_deploy_via: copy\n    ansistrano_deploy_from: /root/my-app\n    ansistrano_after_update_code_tasks_file: \"{{ playbook_dir }}/hook/after-update-code-tasks.yml\"\n    ansistrano_after_cleanup_tasks_file: \"{{ playbook_dir }}/hook/after-cleanup-tasks.yml\"\n</code></pre> rollback.yml<pre><code>- hosts: tips\n  become: yes\n  roles:\n    - { role: ansistrano.rollback }\n  vars:\n    ansistrano_deploy_to: /var/www/your_app\n    ansistrano_rollback_after_cleanup_tasks_file: \"{{ playbook_dir }}/hook/after-cleanup-tasks.yml\"\n</code></pre> hook/after-update-code-tasks.yml<pre><code>- name: Change file mode\n  ansible.builtin.file:\n    path: \"{{ ansistrano_release_path.stdout }}/my-app/main\"\n    mode: '0755'\n</code></pre> hook/after-cleanup-tasks.yml<pre><code>- name: close app\n  shell: pkill -f {{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/my-app/main || /bin/true\n  ignore_errors: true\n- name: run app\n  shell: nohup {{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/my-app/main &gt; /dev/null 2&gt;&amp;1 &amp;\n</code></pre> <p>-vvv \u53c2\u6570</p>"},{"location":"tools/ansible/demo/#_2","title":"\u6267\u884c","text":"<pre><code>ansible-playbook -i inventory.ini deploy.yml \n</code></pre>"},{"location":"tools/ansible/demo/#_3","title":"\u56de\u6eda","text":"<pre><code>ansible-playbook -i inventory.ini rollback.yml\n</code></pre>"},{"location":"tools/ansible/guide/","title":"Guide","text":""},{"location":"tools/ansible/guide/#ansible","title":"ansible","text":"<p>https://linuxhandbook.com/ansible-ad-hoc/</p>"},{"location":"tools/ansible/guide/#ssh","title":"ssh\u514d\u5bc6\u767b\u5f55","text":"<p>\u6700\u597d\u4f7f\u7528\u5e38\u7528\u955c\u50cf\uff0calpine\u4f1a\u51fa\u73b0\u5404\u79cd\u9519\u8bef</p> <pre><code>ssh-keygen\nsssh-copy-id root@10.0.2.4\nsssh-copy-id root@10.0.2.5\nsssh-copy-id root@10.0.2.6\n</code></pre>"},{"location":"tools/ansible/guide/#host","title":"\u5217\u51fa\u6240\u6709host","text":"inventory.ini<pre><code>10.0.2.4\n10.0.2.5\n10.0.2.6\n</code></pre> <p>\u627e\u51fa\u6240\u6709</p> <pre><code>ansible all -i inventory.ini --list-hosts\n</code></pre>"},{"location":"tools/ansible/guide/#_1","title":"\u533a\u5206\u73af\u5883","text":"inventory-env.ini<pre><code>[test]\n10.0.2.4\n\n[prod]\n10.0.2.5\n10.0.2.6\n</code></pre> <p>\u627e\u51faprod</p> <pre><code>ansible prod -i inventory-env.ini --list-hosts\n</code></pre>"},{"location":"tools/ansible/guide/#_2","title":"\u6267\u884c\u7b80\u5355\u547d\u4ee4","text":"<pre><code>ansible all -i inventory.ini -m raw -a \"cat /etc/os-release\"\n</code></pre>"},{"location":"tools/ansible/guide/#playbooks","title":"\u4f7f\u7528 playbooks","text":"playbook.yml<pre><code>- name: first play\n  hosts: all\n  tasks: \n    - name: create a new file\n      file:\n        path: /tmp/foo.conf\n        mode: 0664\n        owner: root\n        state: touch\n</code></pre> <pre><code>ansible-playbook -i inventory.ini playbook.yml\nansible all -i inventory.ini -m command -a \"ls -l /tmp/foo.conf\"\n\n# \u68c0\u67e5\u8bed\u6cd5\nansible-playbook -i inventory.ini --syntax-check playbook.yml\n# \u68c0\u67e5\u673a\u5668\nansible-playbook -i inventory.ini --check playbook.yml\n</code></pre> <p>\u5355\u72ec\u6307\u5b9a\u673a\u5668</p> playbook.yml<pre><code>- name: first play\n  hosts: all\n  tasks:\n    - name: install tmux\n      package:\n        name: tmux\n        state: present\n\n    - name: create an archive\n      archive:\n        path: /var/log\n        dest: /tmp/logs.tar.gz\n        format: gz\n\n- name: second play\n  hosts: 10.0.2.9\n  tasks:\n    - name: install git\n      apt:\n        name: git\n        state: present\n</code></pre> <p>\u6307\u5b9atag <code>--tags git</code> \u4ec5\u6267\u884ctags\u4efb\u52a1</p> playbook.yml<pre><code>- name: first play\n  hosts: all\n  tasks:\n    - name: install tmux\n      package:\n        name: tmux\n        state: present\n\n    - name: create an archive\n      archive:\n        path: /var/log\n        dest: /tmp/logs.tar.gz\n        format: gz\n\n- name: second play\n  hosts: 10.0.2.9\n  tasks:\n    - name: install git\n      apt:\n        name: git\n        state: present\n      tags: git\n</code></pre>"},{"location":"tools/browser/async-defer/","title":"Async defer","text":""},{"location":"tools/browser/chrome%E6%8F%92%E4%BB%B6/","title":"Chrome\u63d2\u4ef6","text":""},{"location":"tools/browser/chrome%E6%8F%92%E4%BB%B6/#json","title":"json\u683c\u5f0f\u5316","text":"<p>json-formatter</p>"},{"location":"tools/browser/chrome%E6%8F%92%E4%BB%B6/#_1","title":"\u5b57\u5e55\u7ffb\u8bd1","text":"<p>youtube-dual-subtitles </p> <p>language-reactor</p>"},{"location":"tools/browser/chrome%E6%8F%92%E4%BB%B6/#_2","title":"\u7ffb\u8bd1","text":"<p>immersive-translate</p>"},{"location":"tools/browser/chrome%E6%8F%92%E4%BB%B6/#proxy","title":"proxy","text":"<p>proxy-switchyomega</p>"},{"location":"tools/browser/chrome%E6%8F%92%E4%BB%B6/#_3","title":"\u624b\u673a\u6a21\u62df\u5668","text":"<p>mobile-simulator-responsi</p>"},{"location":"tools/browser/preload-prefetch/","title":"Preload prefetch","text":""},{"location":"tools/browser/%E7%BC%93%E5%AD%98/","title":"\u7f13\u5b58","text":""},{"location":"tools/browser/%E7%BC%93%E5%AD%98/#bfcache","title":"bfcache","text":"<p>\u591a\u9875\u9879\u76ee \u4e14 \u5728 ssr \u7684\u60c5\u51b5\u4e0b\uff0c\u6d4f\u89c8\u5668<code>\u524d\u8fdb</code> \u548c <code>\u540e\u9000</code> \u65f6\u5019\uff0c\u4f1a\u8d70\u7f13\u5b58, \u8be6\u7ec6\u53ef\u89c1\u53c2\u8003,\u53c2\u8003 1,\u53c2\u8003 2, \u53ef\u7528<code>window.onpageshow</code>\u8fdb\u884c\u8c03\u8bd5\uff0c\u4e0b\u9762\u662f spring boot \u7684 themyleaf \u7981\u7528\u7684\u4ee3\u7801</p> <pre><code>// \u7981\u7528bfc\u4ee3\u7801\n@GetMapping\nString getPerson(HttpServletResponse response){\n    response.addHeader(\"Cache-Control\", \"no-store\");\n    return \"people\";\n}\n...\n\n// js \u8c03\u8bd5\u4ee3\u7801\nwindow.addEventListener('pageshow', function(event) {\n    if (event.persisted === true) {\n        // \u9875\u9762\u4ecebfc\u4e2d\u6062\u590d\n        console.log('This page was restored from the bfcache.');\n    } else {\n        // \u9875\u9762\u6b63\u5e38\u52a0\u8f7d\n        console.log('This page was loaded normally.');\n    }\n});\n</code></pre>"},{"location":"tools/capistrano/demo/","title":"Demo","text":""},{"location":"tools/capistrano/demo/#capistrano","title":"capistrano","text":"<p>\u90e8\u7f72\u5de5\u5177\uff0c\u9700\u8981\u9009\u62e9scm\u8fdb\u884c\u4ee3\u7801\u7ba1\u7406\uff0c\u9ed8\u8ba4\u4f7f\u7528git\uff0c\u5982\u679c\u672c\u5730\u7f16\u8bd1\u4e0a\u4f20\u9700\u8981\u81ea\u5b9a\u4e49scm\uff0c\u4f7f\u7528ansible\u7684\u5b66\u4e60\u6210\u672c\u8f83\u9ad8\uff0c\u4e14\u5bf9\u90e8\u5206\u7cfb\u7edf\u652f\u6301\u4e0d\u597d\uff0c\u5982alpine\u3002</p>"},{"location":"tools/capistrano/demo/#_1","title":"\u521d\u59cb\u5316\u9879\u76ee","text":"<pre><code>cap install\ncap install STAGES=local,dev,test,prod\n</code></pre>"},{"location":"tools/capistrano/demo/#_2","title":"\u8fd0\u884c","text":"<pre><code>cap &lt;stage&gt; deploy\n</code></pre>"},{"location":"tools/capistrano/demo/#_3","title":"\u53ef\u53c2\u8003\u9879\u76ee","text":"<p>https://github.com/gozeon/code-collections/tree/master/ruby/cap</p>"},{"location":"tools/docker/compose/","title":"Compose","text":"<p>\u53c2\u8003\u4ee3\u7801 dockercompose</p>"},{"location":"tools/docker/compose/#_1","title":"\u542f\u52a8","text":"<pre><code>docker compose up\n</code></pre>"},{"location":"tools/docker/compose/#_2","title":"\u91cd\u65b0\u7f16\u8bd1\u542f\u52a8","text":"<pre><code>docker compose up --build\n</code></pre>"},{"location":"tools/docker/compose/#_3","title":"\u6269\u5145\u8282\u70b9","text":"<pre><code># \u4f1a\u6709downtime\uff0c\u56e0\u4e3anginx \u4f1a recreate\ndocker compose up -d --scale api=10\n\n# 0 downtime \ndocker compose up -d --scale api=10 --no-recreate nginx \n# \u8fd9\u79cd\u65b9\u5f0f\u9700\u8981\u91cd\u542fnginx\ndocker compose exec nginx /usr/sbin/nginx -s reload\n</code></pre>"},{"location":"tools/docker/compose/#traefixnginx","title":"\u4f7f\u7528traefix\u4ee3\u66ffnginx","text":"<p>\u4f7f\u7528traefix\uff0c\u5728\u6269\u5bb9\u90e8\u7f72\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u7528\u91cd\u542f\u6b65\u9aa4</p> <p>\u6ce8\u610f\u4f7f\u7528 --no-deps</p> docker-compose.yml<pre><code>version: '3'\n\nservices:\n\n  api:\n    build: .\n    depends_on:\n      - traefik\n    labels:\n      - \"traefik.http.routers.api.rule=Host(`api.docker.localhost`)\"\n\n  whoami:\n    # A container that exposes an API to show its IP address\n    image: traefik/whoami\n    labels:\n      - \"traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)\"\n\n  traefik:\n    # The official v2 Traefik docker image\n    image: traefik:v2.10\n    # Enables the web UI and tells Traefik to listen to docker\n    command: --api.insecure=true --providers.docker\n    ports:\n      # The HTTP port\n      - \"80:80\"\n      # The Web UI (enabled by --api.insecure=true)\n      - \"8080:8080\"\n    volumes:\n      # So that Traefik can listen to the Docker events\n      - /var/run/docker.sock:/var/run/docker.sock\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E4%BE%8B%E5%AD%90/","title":"\u5f00\u53d1\u4f8b\u5b50","text":"<p>\u4ee5\u642d\u5efaflink\u5f00\u53d1\u73af\u5883\u4e3a\u4f8b\u5b50\uff0c\u5efa\u8bae\u4f7f\u7528dockerfile</p>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E4%BE%8B%E5%AD%90/#java","title":"java \u73af\u5883\u642d\u5efa","text":"<pre><code>docker pull ubuntu\n\ndocker run  --rm -it ubuntu bash\n\napt update &amp;&amp; apt upgrade -y\n\napt install openjdk-17-jdk vim -y\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E4%BE%8B%E5%AD%90/#_1","title":"\u4fee\u6539\u73af\u5883\u53d8\u91cf","text":"<pre><code>echo 'export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))' &gt;&gt; ~/.bashrc\necho 'export PATH=$PATH:$JAVA_HOME/bin' &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E4%BE%8B%E5%AD%90/#scala","title":"\u53ef\u9009\u5b89\u88c5scala","text":"<pre><code>apt install scala -y\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E4%BE%8B%E5%AD%90/#_2","title":"\u521b\u5efa\u65b0\u955c\u50cf","text":"<pre><code>docker commit &lt;containerID&gt; java17\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E4%BE%8B%E5%AD%90/#_3","title":"\u8fd0\u884c","text":"<pre><code>docker run --rm -it -v $PWD:/usr/app -p 8081:8081 java17 /bin\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E4%BE%8B%E5%AD%90/#localhost0000configyaml","title":"\u4fee\u6539localhost\u4e3a0.0.0.0\uff0c\u5efa\u8bae\u5148\u5907\u4efd\u539f\u5148\u7684config.yaml","text":"<pre><code>sed -i 's/localhost/0.0.0.0/' ./conf/config.yaml\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/","title":"\u5f00\u53d1\u5e38\u7528","text":""},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#_1","title":"\u955c\u50cf\u9009\u62e9","text":"<p>\u5c3d\u91cf\u9009\u62e9 <code>Alpine</code> \u7248\u672c\uff0c\u4f53\u79ef\u5c0f\uff0c\u4f7f\u7528<code>apk</code>\u5b89\u88c5\u4f9d\u8d56\uff0c\u5982 <code>apk add --no-cache gcc g++ python2</code></p> <p>\u5982\u9700\u8981python2\uff0c\u5c3d\u91cf\u4f7f\u7528 alpine 3.14 \u5de6\u53f3\u7684\u7248\u672c</p>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#_2","title":"\u955c\u50cf\u5bf9\u6bd4","text":"\u5c5e\u6027 Alpine + apk Ubuntu + apt Debian Slim Distroless BusyBox \u955c\u50cf\u5927\u5c0f 5MB 29MB 20MB \u6781\u5c0f 1MB \u517c\u5bb9\u6027 \u8f83\u4f4e\uff08\u9700\u914d\u7f6e\uff09 \u9ad8 \u8f83\u9ad8 \u9759\u6001\u7f16\u8bd1 \u975e\u5e38\u4f4e \u751f\u6001\u652f\u6301 \u8f83\u5c11 \u4e30\u5bcc \u4e30\u5bcc \u65e0\u5305\u7ba1\u7406\u5668 \u57fa\u672c\u65e0 \u914d\u7f6e\u590d\u6742\u5ea6 \u8f83\u9ad8\uff08\u9700\u8c03\u6574\uff09 \u8f83\u4f4e \u8f83\u4f4e \u4e2d\u7b49 \u9ad8"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#alpine","title":"alpine \u8bbe\u7f6e\u65f6\u533a","text":"<p><pre><code>apk add --no-cache tzdata\ncp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo 'Asia/Shanghai' &gt; /etc/timezone\n</code></pre> \u53ef\u53c2\u8003dockerfile dockerfile<pre><code># Use the official Alpine image\nFROM alpine:latest\n\n# Set the environment variable for the timezone\nENV TZ=UTC\n#ENV TZ=Asia/Shanghai\n\n# Install tzdata package for timezone data\nRUN apk add --no-cache tzdata\n\n# Set the timezone\nRUN cp /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone\n\n# Verify the timezone is set correctly\nRUN date\n\n# Your application setup goes here\n# ...\n\n# Example entrypoint\nCMD [\"sh\"]\n</code></pre></p>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#postgres","title":"postgres","text":"<pre><code>podman run --rm -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=hello_dev postgres:12.19-alpine\n\n# -v \"$PWD/data\":/var/lib/postgresql/data\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#redis","title":"redis","text":"<pre><code>docker run --rm -p 6379:6379 redis\n\n# -v \"$PWD/data\":/data\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#mysql","title":"mysql","text":"<pre><code>docker run --rm -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=&lt;default db&gt; -p 3306:3306 mysql\n\n# -v \"$PWD/data\":/var/lib/mysql\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#mongodb","title":"mongodb","text":"<pre><code>docker run --rm -p 27017:27017 mongo\n\n# -v \"$PWD/data\":/data/db\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#prometheus-grafana-loki-promtail-node-exporter","title":"Prometheus + Grafana + loki + promtail + node-exporter","text":"<p>\u9762\u677f\u63a8\u8350 16098</p> docker-compose.yml<pre><code>version: \"3.3\"\n\nnetworks:\n  loki:\n    external: true\n\nservices:\n  loki:\n    image: grafana/loki:latest\n    ports:\n      - \"3100:3100\"\n    command: -config.file=/etc/loki/local-config.yaml\n    networks:\n      - loki\n\n  promtail:\n    image: grafana/promtail:latest\n    volumes:\n      - /var/log:/var/log\n    command: -config.file=/etc/promtail/config.yml\n    networks:\n      - loki\n\n  grafana:\n    environment:\n      - GF_AUTH_ANONYMOUS_ENABLED=false\n      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin\n    image: grafana/grafana:latest\n    ports:\n      - \"3000:3000\"\n    networks:\n      - loki\n\n  prometheus:\n    image: prom/prometheus:latest\n    ports:\n      - 9090:9090\n    networks:\n      - loki\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n\n  node-exporter:\n    image: prom/node-exporter:latest\n    ports:\n      - 9100:9100\n    networks:\n      - loki\n</code></pre> prometheus.yml<pre><code># my global config\nglobal:\n  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\n  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.\n  # scrape_timeout is set to the global default (10s).\n\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it's Prometheus itself.\nscrape_configs:\n  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\n  - job_name: \"prometheus\"\n\n    # metrics_path defaults to '/metrics'\n    # scheme defaults to 'http'.\n    static_configs:\n      - targets: [\"node-exporter:9100\"]\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#_3","title":"\u7f16\u8bd1\u8bbe\u7f6e\u4ee3\u7406","text":"<pre><code>docker build -t ai:latest . --build-arg HTTP_PROXY=http://&lt;ip&gt;:&lt;port&gt;\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#_4","title":"\u542f\u52a8\u6620\u5c04\u4ee3\u7406","text":"<pre><code>docker run --rm -p 8501:8501 --env http_proxy=socks5://host.docker.internal:10808 --env https_proxy=socks5://host.docker.internal:10808 --env all_proxy=socks5://host.docker.internal:10808 --gpus all rqlove/videolingo:latest\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#continaer","title":"\u53d1\u9001\u6587\u4ef6\u8fdbcontinaer","text":"<pre><code>docker cp wav2vec2_fairseq_base_ls960_asr_ls960.pth &lt;\u5bb9\u5668id&gt;:/root/.cache/torch/hub/checkpoints\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#windows","title":"\u6620\u5c04\u76ee\u5f55\u95ee\u9898(windows\u73af\u5883)","text":"<pre><code># cmd\ndocker run --rm -it -v %cd%:/user/src/app gcc\n# powershell\ndocker run --rm -it -v ${PWD}:/user/src/app gcc\n# linux\ndocker run --rm -it -v ${pwd}:/user/src/app gcc\n# cross platform\ndocker run --rm -it -v ${PWD}:/user/src/app gcc\ndocker run --rm -it -v ${PWD}:/user/src/app gcc\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#dev-container","title":"dev container \u4f8b\u5b50","text":"Dockerfile<pre><code># Use the official Node.js image to copy Node.js binaries\nFROM node:16.20.0-alpine AS nodejs\n# Node.js binaries are already installed in the official image at /usr/local/\n# No additional steps needed here.\n\n# Use the official Go image to copy Go binaries\nFROM golang:1.21.0-alpine AS golang\n# Go binaries are already installed in the official image at /usr/local/go\n# No additional steps needed here.\n\n# Use Alpine as the base image\nFROM alpine:latest\n\n# Install necessary dependencies in the Alpine image\nRUN apk add --no-cache \\\n    librdkafka-dev \\\n    pkgconf \\\n    gcc \\\n    g++ \\\n    make \\\n    tzdata \\\n    git \\\n    python3 \\\n    bash \\\n    libc6-compat\n\n# Copy Node.js from the Node.js image\nCOPY --from=nodejs /usr/local /usr/local\n\n# Copy Go from the Go image\nCOPY --from=golang /usr/local/go /usr/local/go\n\n# Set up environment variables for Go\nENV PATH=\"/usr/local/go/bin:${PATH}\" \\\n    GOPATH=/go\n\nENV TZ=Asia/Shanghai\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\\n    echo \"Asia/Shanghai\" &gt; /etc/timezone\n\nRUN go env -w GO111MODULE=on\nRUN go env -w GOPROXY=https://goproxy.cn,direct\n\n# Verify installations\nRUN node -v &amp;&amp; npm -v &amp;&amp; go version &amp;&amp; python --version\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#_5","title":"\u4e07\u80fd\u89e3\u51b3\u5404\u79cd","text":"<p>https://docs.docker.com/engine/containers/run/#runtime-privilege-and-linux-capabilities</p> <p><pre><code>privileged: true\n</code></pre> or</p> <pre><code>docker run --privileged ..\n</code></pre>"},{"location":"tools/docker/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8/#slimapt","title":"\u5728slim\u7248\u672c\uff0c\u4f7f\u7528apt\u5982\u4f55\u51cf\u5c0f\u4f53\u79ef","text":"Dockerfile<pre><code>RUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends git &amp;&amp; \\\n    apt-get clean &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n</code></pre>"},{"location":"tools/docker/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/","title":"\u601d\u7ef4\u5bfc\u56fe","text":""},{"location":"tools/docker/%E9%95%9C%E5%83%8F/","title":"\u955c\u50cf","text":""},{"location":"tools/docker/%E9%95%9C%E5%83%8F/#_1","title":"\u56fd\u5185\u955c\u50cf","text":"<ul> <li>hub.rat.dev</li> <li>https://github.com/kubesre/docker-registry-mirrors</li> <li>https://1ms.run/</li> </ul>"},{"location":"tools/docker/%E9%95%9C%E5%83%8F/#_2","title":"\u4e3e\u4f8b","text":"<pre><code>podman pull kubesre.xyz/docker.io/library/mysql\n</code></pre>"},{"location":"tools/editor/JetBrains/%E7%A0%B4%E8%A7%A3/","title":"\u7834\u89e3","text":"<p>https://zhile.io/</p>"},{"location":"tools/editor/JetBrains/%E7%A0%B4%E8%A7%A3/#_1","title":"\u65e0\u7ebf\u7834\u89e3","text":"<p>\u9488\u5bf9 <code>2021-02</code> \u4e4b\u524d\u7684\u7248\u672c</p> reset_jetbrains_eval_windows.vbs<pre><code>Set oShell = CreateObject(\"WScript.Shell\")\nSet oFS = CreateObject(\"Scripting.FileSystemObject\")\nsHomeFolder = oShell.ExpandEnvironmentStrings(\"%USERPROFILE%\")\nsJBDataFolder = oShell.ExpandEnvironmentStrings(\"%APPDATA%\") + \"\\JetBrains\"\n\nSet re = New RegExp\nre.Global     = True\nre.IgnoreCase = True\nre.Pattern    = \"\\.?(IntelliJIdea|GoLand|CLion|PyCharm|DataGrip|RubyMine|AppCode|PhpStorm|WebStorm|Rider).*\"\n\nSub removeEval(ByVal file, ByVal sEvalPath)\n    bMatch = re.Test(file.Name)\n    If Not bMatch Then\n        Exit Sub\n    End If\n\n    If oFS.FolderExists(sEvalPath) Then\n        oFS.DeleteFolder sEvalPath, True \n    End If\nEnd Sub\n\nIf oFS.FolderExists(sHomeFolder) Then\n    For Each oFile In oFS.GetFolder(sHomeFolder).SubFolders\n        removeEval oFile, sHomeFolder + \"\\\" + oFile.Name + \"\\config\\eval\"\n    Next\nEnd If\n\nIf oFS.FolderExists(sJBDataFolder) Then\n    For Each oFile In oFS.GetFolder(sJBDataFolder).SubFolders\n        removeEval oFile, sJBDataFolder + \"\\\" + oFile.Name + \"\\eval\"\n    Next\nEnd If\n\nMsgBox \"done\"\n</code></pre> <p>\u5982\u679c\u6709\u6743\u9650\u95ee\u9898\uff0c\u53ef\u7528\u4e0b\u9762\u6587\u4ef6</p> idea-reset.bat<pre><code>:: echo %HOMEPATH%\nFOR %%y IN (\"WebStorm\", \"IntelliJ\", \"CLion\", \"Rider\", \"DataGrip\", \"GoLand\", \"PhpStorm\", \"Resharper\", \"PyCharm\") DO (\n  FOR /D %%z IN (\"C:%HOMEPATH%\\AppData\\Roaming\\JetBrains\\%%y*\") DO (\n    rmdir \"%%z\\eval\" /s /q\n    del \"%%z\\options\\other.xml\"\n  )\n)\n\n:: cd \"C:%HOMEPATH%\\AppData\\Roaming\\JetBrains\\IntelliJIdea*\\\"\n:: rmdir \"eval\" /s /q\n:: del \"options\\other.xml\"\n:: \n::\n:: This works on All Idea 2021.x on Windows10\n</code></pre>"},{"location":"tools/editor/vscode/devcontainers/","title":"Devcontainers","text":""},{"location":"tools/editor/vscode/devcontainers/#dev-in-containers","title":"Dev in Containers","text":"<p>https://code.visualstudio.com/docs/devcontainers/containers</p> .devcontainer/devcontainer.json<pre><code>// For format details, see https://aka.ms/devcontainer.json. For config options, see the\n// README at: https://github.com/devcontainers/templates/tree/main/src/javascript-node\n{\n  \"name\": \"Node.js\",\n  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile\n  \"image\": \"node:latest\",\n  \"customizations\": {\n    \"vscode\": {\n      \"extensions\": [\n        \"eamodio.gitlens\",\n        \"Vue.volar\",\n        \"ChakrounAnas.turbo-console-log\",\n        \"vunguyentuan.vscode-css-variables\",\n        \"bradlc.vscode-tailwindcss\"\n      ]\n    }\n  },\n\n  // Features to add to the dev container. More info: https://containers.dev/features.\n  // \"features\": {},\n\n  // Use 'forwardPorts' to make a list of ports inside the container available locally.\n  // \"forwardPorts\": [3000],\n\n  // Use 'postCreateCommand' to run commands after the container is created.\n  // \"postCreateCommand\": \"yarn install\",\n\n  // Configure tool-specific properties.\n  // \"customizations\": {},\n\n  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.\n  \"remoteUser\": \"root\"\n}\n</code></pre>"},{"location":"tools/editor/vscode/%E6%A0%BC%E5%BC%8F%E5%8C%96/","title":"\u683c\u5f0f\u5316","text":""},{"location":"tools/editor/vscode/%E6%A0%BC%E5%BC%8F%E5%8C%96/#_1","title":"\u4fdd\u5b58\u683c\u5f0f\u5316","text":"<p>https://linuxpip.org/vscode-format-on-save/</p> .vscode/settings.json<pre><code>{\n    \"editor.formatOnSave\": true,\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n}\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Helm\u5e38\u7528\u547d\u4ee4","text":""},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#helm-chart","title":"\u5b89\u88c5 Helm Chart","text":"<pre><code>helm install &lt;release-name&gt; &lt;chart-name&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u5b89\u88c5\u65f6\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>helm install &lt;release-name&gt; &lt;chart-name&gt; -f values.yaml\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#release","title":"\u5347\u7ea7\u5df2\u6709\u7684 Release","text":"<pre><code>helm upgrade &lt;release-name&gt; &lt;chart-name&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#release_1","title":"\u5378\u8f7d\u5df2\u5b89\u88c5\u7684 Release","text":"<pre><code>helm uninstall &lt;release-name&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#helm-release","title":"\u67e5\u770b\u5df2\u5b89\u88c5\u7684 Helm Release","text":"<pre><code>helm list\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#release_2","title":"\u67e5\u770b\u6307\u5b9a Release \u7684\u8be6\u7ec6\u4fe1\u606f","text":"<pre><code>helm status &lt;release-name&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#helm-chart_1","title":"\u67e5\u770b Helm Chart \u7684\u6a21\u677f","text":"<pre><code>helm template &lt;chart-name&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#helm-chart_2","title":"\u641c\u7d22 Helm Chart","text":"<pre><code>helm search repo &lt;chart-name&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#helm-chart_3","title":"\u67e5\u770b Helm Chart \u7248\u672c","text":"<pre><code>helm show chart &lt;chart-name&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#release_3","title":"\u83b7\u53d6\u5df2\u5b89\u88c5 Release \u7684\u5386\u53f2\u8bb0\u5f55","text":"<pre><code>helm history &lt;release-name&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#release_4","title":"\u56de\u6eda Release \u5230\u6307\u5b9a\u7248\u672c","text":"<pre><code>helm rollback &lt;release-name&gt; &lt;revision-number&gt;\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#helm","title":"\u67e5\u770b Helm \u7248\u672c","text":"<pre><code>helm version\n</code></pre>"},{"location":"tools/k8s/Helm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#helm_1","title":"\u5728\u5b89\u88c5\u65f6\u8bbe\u7f6e Helm \u53c2\u6570","text":"<pre><code>helm install &lt;release-name&gt; &lt;chart-name&gt; --set key=value\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Skaffold\u5e38\u7528\u547d\u4ee4","text":""},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u8fd0\u884c\u5e94\u7528\u5e76\u6784\u5efa\u90e8\u7f72","text":"<pre><code>skaffold run\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","title":"\u6784\u5efa\u5e94\u7528","text":"<pre><code>skaffold build\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","title":"\u90e8\u7f72\u5e94\u7528","text":"<pre><code>skaffold deploy\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","title":"\u76d1\u89c6\u6587\u4ef6\u53d8\u52a8\u5e76\u81ea\u52a8\u6784\u5efa\u90e8\u7f72","text":"<pre><code>skaffold dev\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","title":"\u8f93\u51fa\u6784\u5efa\u4fe1\u606f","text":"<pre><code>skaffold build --verbosity debug\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_6","title":"\u4f7f\u7528\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>skaffold -f skaffold.yaml run\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_7","title":"\u6e05\u9664\u5df2\u90e8\u7f72\u7684\u5e94\u7528","text":"<pre><code>skaffold delete\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#skaffold","title":"\u67e5\u770b\u5f53\u524d Skaffold \u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9","text":"<pre><code>skaffold config view\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_8","title":"\u4ec5\u6784\u5efa\u4f46\u4e0d\u90e8\u7f72","text":"<pre><code>skaffold build --no-deploy\n</code></pre>"},{"location":"tools/k8s/Skaffold%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#skaffold_1","title":"\u67e5\u770b Skaffold \u7248\u672c","text":"<pre><code>skaffold version\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Kubectl\u5e38\u7528\u547d\u4ee4","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#k8s","title":"\u8bbe\u7f6ek8s\u914d\u7f6e\u6587\u4ef6","text":"<p>helm\u3001skaffold\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e00\u53d8\u91cf</p> <pre><code># ~/.kube/config \u662f\u9ed8\u8ba4\u8def\u5f84\nexport KUBECONFIG=~/.kube/config\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u96c6\u7fa4\u4fe1\u606f","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","title":"\u67e5\u770b\u5f53\u524d\u4e0a\u4e0b\u6587","text":"<pre><code>kubectl config current-context\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","title":"\u67e5\u770b\u6240\u6709\u4e0a\u4e0b\u6587","text":"<pre><code>kubectl config get-contexts\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","title":"\u5207\u6362\u4e0a\u4e0b\u6587","text":"<pre><code>kubectl config use-context &lt;context-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","title":"\u67e5\u770b\u96c6\u7fa4\u8282\u70b9","text":"<pre><code>kubectl get nodes -o wide\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_6","title":"\u67e5\u770b\u96c6\u7fa4\u7248\u672c","text":"<pre><code>kubectl version\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_7","title":"\u547d\u540d\u7a7a\u95f4","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_8","title":"\u67e5\u770b\u547d\u540d\u7a7a\u95f4","text":"<pre><code>kubectl get namespaces\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_9","title":"\u521b\u5efa\u547d\u540d\u7a7a\u95f4","text":"<pre><code>kubectl create namespace &lt;namespace&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_10","title":"\u5220\u9664\u547d\u540d\u7a7a\u95f4","text":"<pre><code>kubectl delete namespace &lt;namespace&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_11","title":"\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u64cd\u4f5c","text":"<pre><code>kubectl get pods -n &lt;namespace&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#pods","title":"Pods \u7ba1\u7406","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#pod","title":"\u67e5\u770b Pod \u5217\u8868","text":"<pre><code>kubectl get pods\nkubectl get pods -o wide\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#pod_1","title":"\u67e5\u770b Pod \u8be6\u7ec6\u4fe1\u606f","text":"<pre><code>kubectl describe pod &lt;pod-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#pod_2","title":"\u67e5\u770b Pod \u65e5\u5fd7","text":"<pre><code>kubectl logs &lt;pod-name&gt;\nkubectl logs -f &lt;pod-name&gt;                  # \u5b9e\u65f6\u8ddf\u8e2a\nkubectl logs &lt;pod-name&gt; -c &lt;container-name&gt; # \u591a\u5bb9\u5668 Pod\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#pod_3","title":"\u8fdb\u5165 Pod \u4ea4\u4e92\u5f0f\u7ec8\u7aef","text":"<pre><code>kubectl exec -it &lt;pod-name&gt; -- /bin/bash\nkubectl exec -it &lt;pod-name&gt; -- /bin/sh\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#pod_4","title":"\u5220\u9664 Pod","text":"<pre><code>kubectl delete pod &lt;pod-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#deployment-replicaset","title":"Deployment / ReplicaSet","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#deployment","title":"\u67e5\u770b Deployment","text":"<pre><code>kubectl get deployments\nkubectl get deployment &lt;deployment-name&gt; -o yaml\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#deployment_1","title":"\u521b\u5efa / \u66f4\u65b0 Deployment","text":"<pre><code>kubectl apply -f deployment.yaml\nkubectl set image deployment/&lt;deployment-name&gt; &lt;container&gt;=&lt;image&gt;:&lt;tag&gt;\nkubectl rollout restart deployment/&lt;deployment-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#deployment_2","title":"\u67e5\u770b Deployment \u72b6\u6001","text":"<pre><code>kubectl rollout status deployment/&lt;deployment-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#deployment_3","title":"\u56de\u6eda Deployment","text":"<pre><code>kubectl rollout undo deployment/&lt;deployment-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#deployment_4","title":"\u5220\u9664 Deployment","text":"<pre><code>kubectl delete deployment &lt;deployment-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#service","title":"Service","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#service_1","title":"\u67e5\u770b Service","text":"<pre><code>kubectl get svc\nkubectl describe svc &lt;service-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#service_2","title":"\u521b\u5efa Service","text":"<pre><code>kubectl apply -f service.yaml\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#service_3","title":"\u5220\u9664 Service","text":"<pre><code>kubectl delete svc &lt;service-name&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#configmap-secret","title":"ConfigMap / Secret","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#configmap-secret_1","title":"\u67e5\u770b ConfigMap / Secret","text":"<pre><code>kubectl get configmap\nkubectl get secret\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#configmap","title":"\u521b\u5efa ConfigMap","text":"<pre><code>kubectl create configmap &lt;name&gt; --from-file=&lt;file&gt; --from-literal=key=value\nkubectl apply -f configmap.yaml\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#secret","title":"\u521b\u5efa Secret","text":"<pre><code>kubectl create secret generic &lt;name&gt; --from-literal=key=value\nkubectl apply -f secret.yaml\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_12","title":"\u8d44\u6e90\u76d1\u63a7","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#pod-node","title":"\u67e5\u770b Pod / Node \u8d44\u6e90\u4f7f\u7528","text":"<pre><code>kubectl top pod\nkubectl top pod -n &lt;namespace&gt;\nkubectl top node\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_13","title":"\u67e5\u770b\u4e8b\u4ef6","text":"<pre><code>kubectl get events --sort-by=.metadata.creationTimestamp\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_14","title":"\u6587\u4ef6\u64cd\u4f5c","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_15","title":"\u521b\u5efa\u8d44\u6e90","text":"<pre><code>kubectl apply -f &lt;file.yaml&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_16","title":"\u5220\u9664\u8d44\u6e90","text":"<pre><code>kubectl delete -f &lt;file.yaml&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#yamljson","title":"\u83b7\u53d6\u8d44\u6e90 YAML/JSON","text":"<pre><code>kubectl get &lt;resource&gt; &lt;name&gt; -o yaml\nkubectl get &lt;resource&gt; &lt;name&gt; -o json\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_17","title":"\u5e38\u7528\u8c03\u8bd5\u547d\u4ee4","text":""},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#pod_5","title":"\u68c0\u67e5 Pod \u7aef\u53e3\u6620\u5c04","text":"<pre><code>kubectl port-forward &lt;pod-name&gt; &lt;local-port&gt;:&lt;container-port&gt;\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_18","title":"\u8fdb\u5165\u5bb9\u5668\u8c03\u8bd5\u7f51\u7edc","text":"<pre><code>kubectl exec -it &lt;pod-name&gt; -- /bin/bash\n</code></pre>"},{"location":"tools/k8s/kubectl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_19","title":"\u6d4b\u8bd5\u670d\u52a1\u8fde\u901a\u6027","text":"<pre><code>kubectl run curlpod --image=radial/busyboxplus:curl -i --tty\n</code></pre>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"\u5e38\u7528\u547d\u4ee4","text":"<p>https://github.com/caddyserver/caddy</p>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#json","title":"\u8f93\u51fa\u914d\u7f6ejson","text":"<pre><code>caddy adapt --config /path/to/Caddyfile\n</code></pre>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u8fd0\u884c","text":"<pre><code>caddy run --config /path/to/Caddyfile\ncaddy start\ncaddy stop\ncaddy reload\n</code></pre>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","title":"\u5b88\u62a4\u8fdb\u7a0b\u8fd0\u884c","text":"<pre><code>caddy start\n</code></pre>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","title":"\u505c\u6b62","text":"<pre><code>caddy stop\n</code></pre>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","title":"\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e","text":"<pre><code>caddy reload\n</code></pre> <p>\u63a8\u8350\u53c2\u6570 <code>--watch</code>\uff0c\u68c0\u6d4b\u914d\u7f6e\u53d8\u5316\uff0c\u81ea\u52a8reload</p>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/","title":"\u5e38\u7528\u914d\u7f6e","text":"<p>https://caddyserver.com/docs/caddyfile</p> <p>\u57df\u540d\u4f1a\u9ed8\u8ba4\u5f00\u542fhttps\uff0cip\u4e0d\u4f1a</p>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/#_1","title":"\u9759\u6001\u76ee\u5f55","text":"caddyfile<pre><code>localhost\n\nencode zstd gzip # \u5f00\u542f\u538b\u7f29\ntemplates # \u5f00\u542f\u6a21\u677f\nfile_server browse # \u9759\u6001\u670d\u52a1\n</code></pre>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/#_2","title":"\u5355\u9875\u5e94\u7528","text":"caddyfile<pre><code>example.com {\n    root * /path/to/site\n    encode gzip\n    try_files {path} /index.html\n    file_server\n}\n</code></pre>"},{"location":"tools/lb/caddy/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/#_3","title":"\u5355\u9875\u5e94\u7528 + \u63a5\u53e3\u8f6c\u53d1","text":"caddyfile<pre><code>example.com {\n    encode gzip\n\n    handle /api/* {\n        reverse_proxy backend:8000\n    }\n\n    handle {\n        root * /path/to/site\n        try_files {path} /index.html\n        file_server\n    }\n}\n</code></pre>"},{"location":"tools/lb/nginx/%E5%8E%8B%E7%BC%A9/","title":"\u538b\u7f29","text":""},{"location":"tools/lb/nginx/%E5%8E%8B%E7%BC%A9/#gzip","title":"Gzip","text":"gzip.conf<pre><code>http {\n    # Enable gzip compression\n    gzip on;\n    gzip_vary on;\n    gzip_comp_level 6;\n    gzip_buffers 16 8k;\n    gzip_http_version 1.1;\n    gzip_types text/plain text/css application/javascript application/json application/xml application/xml+rss text/javascript image/svg+xml;\n\n    server {\n        listen 80;\n        server_name localhost;\n\n        location / {\n            root /usr/share/nginx/html;\n            index index.html;\n        }\n    }\n}\n</code></pre>"},{"location":"tools/lb/nginx/%E5%8E%8B%E7%BC%A9/#brotli","title":"brotli","text":"<p>https://github.com/google/ngx_brotli</p>"},{"location":"tools/lb/nginx/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/","title":"\u5728\u7ebf\u5de5\u5177","text":""},{"location":"tools/lb/nginx/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/#_1","title":"\u5728\u7ebf\u914d\u7f6e\u751f\u6210","text":"<p>https://github.com/digitalocean/nginxconfig.io</p>"},{"location":"tools/lb/nginx/%E5%9F%BA%E6%9C%AC%E8%BD%AC%E5%8F%91/","title":"\u57fa\u672c\u8f6c\u53d1","text":"<p>\u8f6c\u53d1\u524d\u7aef\u8d44\u6e90\u548c\u540e\u7aef\u670d\u52a1\uff0c\u524d\u7aef\u8d44\u6e90\u4e3a\u7edf\u4e00\u76ee\u5f55\uff0c\u6bcb\u9700\u4fee\u6539\u914d\u7f6e</p> <pre><code>server {\n   listen       80;\n   listen       [::]:80;\n   server_name  _;\n   #root         /usr/share/nginx/html;\n\n   # Load configuration files for the default server block.\n   include /etc/nginx/default.d/*.conf;\n\n   location ~ ^/(static)/ {\n      root /home/homework/webroot;\n   }\n   location ~ \\.html$ {\n      root /home/homework/webroot;\n   }\n   location ~* ^/+workflow/.* {\n      proxy_pass http://127.0.0.1:8080;\n   }\n\n   error_page 404 /404.html;\n   location = /404.html {\n   }\n\n   error_page 500 502 503 504 /50x.html;\n   location = /50x.html {\n   }\n}\n</code></pre>"},{"location":"tools/lb/nginx/%E5%B8%B8%E7%94%A8%E8%BD%AC%E5%8F%91/","title":"\u5e38\u7528\u8f6c\u53d1","text":"<p>14201\u7aef\u53e3\u662fweb\uff0c14200\u7aef\u53e3\u662fapi</p> <pre><code>server {\n   listen       8000;\n   listen       [::]:8000;\n   server_name  _;\n   #root         /usr/share/nginx/html;\n\n   # Load configuration files for the default server block.\n   #include /etc/nginx/default.d/*.conf;\n\n   location / {\n      proxy_pass http://127.0.0.1:14201;\n   }\n\n   location ~* ^/+api/.* {\n      proxy_pass http://127.0.0.1:14200;\n   }\n\n   error_page 404 /404.html;\n   location = /404.html {\n   }\n\n   error_page 500 502 503 504 /50x.html;\n   location = /50x.html {\n   }\n}\n</code></pre>"},{"location":"tools/lb/nginx/%E9%9D%99%E6%80%81%E7%9B%AE%E5%BD%95/","title":"\u9759\u6001\u76ee\u5f55","text":"<p>\u5c06\u76ee\u5f55\u4f5c\u4e3a\u9759\u6001\u6587\u4ef6\u670d\u52a1\u5668</p> <pre><code>server {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  _;\n    # root         /usr/share/nginx/html;\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        root /root;\n\n        autoindex on;\n        autoindex_exact_size on;\n        autoindex_localtime on;\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n\n}\n</code></pre>"},{"location":"tools/nvim/config/","title":"Config","text":""},{"location":"tools/nvim/config/#_1","title":"\u5feb\u901f\u4f7f\u7528","text":"<p>https://github.com/LazyVim/LazyVim</p>"},{"location":"tools/nvim/config/#_2","title":"\u914d\u7f6e","text":"<p>see https://github.com/nvim-lua/kickstart.nvim</p> ~/.config/nvim/init.lua<pre><code>vim.cmd(\"set number\")\n\nlocal lazypath = vim.fn.stdpath(\"data\") .. \"/lazy/lazy.nvim\"\nif not vim.loop.fs_stat(lazypath) then\n  vim.fn.system({\n    \"git\",\n    \"clone\",\n    \"--filter=blob:none\",\n    \"https://github.com/folke/lazy.nvim.git\",\n    \"--branch=stable\", -- latest stable release\n    lazypath,\n  })\nend\n-- print(lazypath)\nvim.opt.rtp:prepend(lazypath)\n\nlocal plugins = {\n    { \"catppuccin/nvim\", name= \"catppuccin\", priority=1000 },\n    {\n        \"nvim-treesitter/nvim-treesitter\",\n        build =  \":TSUpdate\",\n        config = function() \n            local configs = require(\"nvim-treesitter.configs\")\n\n            configs.setup({\n                ensure_installed = { \"vimdoc\", \"lua\", \"go\", \"python\", \"bash\", \"erlang\", \"markdown\" },\n                sync_install = false,\n                highlight = { enable = true },\n                indent = { enable = true }\n            })\n        end\n    },\n    {\n        \"nvim-telescope/telescope.nvim\", tag = \"0.1.5\",\n        dependencies = { \"nvim-lua/plenary.nvim\" }\n    },\n    {\n        \"windwp/nvim-autopairs\",\n        event=\"InsertEnter\",\n        opts={}\n    },\n    {\n        \"nvim-neo-tree/neo-tree.nvim\",\n        branch=\"v3.x\",\n        dependencies = {\n            \"nvim-lua/plenary.nvim\",\n            \"nvim-tree/nvim-web-devicons\",\n            \"MunifTanjim/nui.nvim\",\n        }\n    },\n    {\n        \"lewis6991/gitsigns.nvim\"\n    },\n    {\n        \"nvim-lualine/lualine.nvim\",\n        dependencies = {\n            'nvim-tree/nvim-web-devicons'\n        }\n    },\n    {\n        \"williamboman/mason.nvim\"\n    },\n    {\n        \"williamboman/mason-lspconfig.nvim\"\n    },\n    {\n        \"VonHeikemen/lsp-zero.nvim\", \n        branch = 'v3.x', \n        lazy = true,\n        config = false\n    },\n    {\n        'neovim/nvim-lspconfig',\n        dependencies = {\n            { 'hrsh7th/cmp-nvim-lsp' }\n        }\n    },\n    {\n        'hrsh7th/nvim-cmp',\n        dependencies = {\n            { 'L3MON4D3/LuaSnip' }\n        }\n    }\n}\n\nlocal opts = {}\n-- package manager\nrequire(\"lazy\").setup(plugins, opts)\n\n-- theme\nrequire(\"catppuccin\").setup()\nvim.cmd.colorscheme \"catppuccin\"\n\n-- telescope\nvim.g.mapleader=\"  \"\nlocal builtin = require(\"telescope.builtin\")\nvim.keymap.set('n', \"&lt;leader&gt;ff\", builtin.find_files, {})\nvim.keymap.set('n', \"&lt;leader&gt;fg\", builtin.live_grep, {})\n--vim.keymap.set('n', \"&lt;leader&gt;fb\", builtin.buffers, {})\n--vim.keymap.set('n', \"&lt;leader&gt;fh\", builtin.help_tags, {})\n\n-- autopairs\nrequire(\"nvim-autopairs\").setup()\n\n-- gitsigns\nrequire(\"gitsigns\").setup()\n\n-- lualine\nrequire(\"lualine\").setup()\n\n-- lsp\nlocal lsp_zero = require(\"lsp-zero\")\nlsp_zero.on_attach(function(client, bufnr)\n    lsp_zero.default_keymaps({ buffer = bufnr })\nend)\n\nrequire(\"mason\").setup({})\nrequire(\"mason-lspconfig\").setup({\n    handlers = {\n        lsp_zero.default_setup\n    }\n})\n\nrequire(\"cmp\").setup({})\n</code></pre>"},{"location":"vcs/git/proxy/","title":"Proxy","text":""},{"location":"vcs/git/proxy/#github-ssh","title":"github + ssh","text":"~/.ssh/config<pre><code>Host github.com\n    User git\n    Port 22\n    Hostname github.com\n    IdentityFile ~/.ssh/id_rsa\n    TCPKeepAlive yes\n    ProxyCommand nc -v -x 127.0.0.1:2024 %h %p\n\nHost ssh.github.com\n    User git\n    Port 443\n    Hostname ssh.gtihub.com\n    IdentityFile ~/.ssh/id_rsa\n    TCPKeepAlive yes\n    ProxyCommand nc -v -x 127.0.0.1:2024 %h %p\n</code></pre>"},{"location":"vcs/git/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"vcs/git/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#all-commit","title":"\u521b\u5efa\u65b0\u5206\u652f\uff08\u6e05\u9664all commit\uff09","text":"<p>https://git-scm.com/docs/git-checkout</p> <pre><code>git checkout --orphan &lt;new-branch&gt;\n</code></pre>"},{"location":"vcs/git/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#git-branch","title":"git \u4fee\u6539branch\u540d\u5b57","text":"<pre><code>git branch -m &lt;new name&gt;\n\nor\n\ngit branch -m &lt;oldname&gt; &lt;newname&gt;\n</code></pre>"},{"location":"vcs/git/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#git-commit","title":"git \u6311\u9009commit","text":"<p>\u5982\uff1a\u5728 branch <code>dev</code> \u4e0b\uff0c\u5408\u5e76 <code>prod</code> \u7684commit</p> <pre><code>git cherry-pick commit1 commit2\n\n# commits one by one\n# git cherry-pick commit1 commit2 commit3 commit4 commit5\n# example:\ngit cherry-pick 1e038f10 2f028f10 34138b11\n# commits by range\n# git cherry-pick A^..B\n# example:\ngit cherry-pick 6653c90^..481981f\n</code></pre>"},{"location":"vcs/git/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#commit","title":"\u8f93\u51facommit","text":"<p><code>tac</code> \u884c\u53cd\u8f6c\uff0c<code>ORS</code> \u95f4\u9694 <pre><code>git log -10 --pretty=\"%h\" | tac | awk \"{print}\" ORS=' '\n</code></pre></p>"},{"location":"vcs/git/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u6253\u5305","text":"<pre><code>git archive --format=zip --output mpy.zip master\n</code></pre>"},{"location":"vcs/git/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/","title":"\u601d\u7ef4\u5bfc\u56fe","text":""},{"location":"vcs/git/%E9%85%8D%E7%BD%AE/","title":"\u914d\u7f6e","text":""},{"location":"vcs/git/%E9%85%8D%E7%BD%AE/#_1","title":"\u7528\u6237","text":".git/config<pre><code>...\n[user]\n    name = gozeon\n    email = goze.qiu@gmail.com\n...\n</code></pre> <p>or</p> <pre><code>## --global \u5168\u5c40\u53c2\u6570\n## \u8bbe\u7f6e\ngit config user.name gozeon\ngit config user.email goze.qiu@gmail.com\n\n## \u53d6\u6d88\ngit config --global --unsetuser.name\n</code></pre>"},{"location":"vcs/git/%E9%85%8D%E7%BD%AE/#_2","title":"\u6587\u4ef6\u6743\u9650","text":"<p>\u591a\u4e2a\u7cfb\u7edf\u540c\u65f6\u64cd\u4f5c\u4e00\u4e2a\u6587\u4ef6</p> .git/config<pre><code>[core]\n    filemode = false\n</code></pre>"},{"location":"vcs/git/%E9%85%8D%E7%BD%AE/#_3","title":"\u4ee3\u7406","text":".git/config<pre><code>...\n[http]\n    proxy = socks5://127.0.0.1:2023\n...\n</code></pre> <p>or</p> <pre><code>## --global \u5168\u5c40\u53c2\u6570\n## \u8bbe\u7f6e\ngit config http.proxy socks5://127.0.0.1:2023\n\n## \u53d6\u6d88\ngit config --global --unset http.proxy\n</code></pre> <p>or</p> ~/.ssh/config<pre><code>Host github.com\n        User Gozeon\n    Hostname github.com\n    ProxyCommand nc -x 127.0.0.1:2024 %h %p\n        PreferredAuthentications publickey\n        IdentityFile ~/.ssh/id_rsa_github\n\nHost gitlab.com\n        User goze\n        Hostname gitlab.com\n    ProxyCommand nc -x 127.0.0.1:2024 %h %p\n        PreferredAuthentications publickey\n        IdentityFile ~/.ssh/id_rsa_gitlab\n</code></pre>"},{"location":"vcs/svn/%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/","title":"\u5206\u652f\u64cd\u4f5c","text":""},{"location":"vcs/svn/%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#_1","title":"\u589e\u52a0\u5206\u652f","text":"<p>\u589e\u52a0\u4e00\u4e2a\u5206\u652f\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u628a trunk \u590d\u5236\u5230 branches \u76ee\u5f55\u4e0b\uff0c\u8d77\u4e00\u4e2a\u7279\u5b9a\u7684\u540d\u5b57\uff0c\u5e38\u7528\u7248\u672c\u53f7</p> <pre><code>svn copy svn://../trunk/project svn://../branches/project_buy -m \"\u6dfb\u52a0\u8d2d\u4e70\u529f\u80fd\u5206\u652f\"\n</code></pre>"},{"location":"vcs/svn/%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#_2","title":"\u5408\u5e76\u5206\u652f","text":"<p>\u589e\u52a0\u4e00\u4e2a\u5206\u652f\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u628a trunk \u590d\u5236\u5230 branches \u76ee\u5f55\u4e0b\uff0c\u8d77\u4e00\u4e2a\u7279\u5b9a\u7684\u540d\u5b57\uff0c\u5e38\u7528\u7248\u672c\u53f7</p> <pre><code># setp 1\n# r1:r2\u8868\u793a\u4ece\u7248\u672c\u8bb0\u5f55r1\u548cr2\u4e4b\u95f4\u7684\u53d8\u5316\u5408\u5e76\u5230\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u3002\nsvn merge -r r1:r2 svn://../branches/project_buy ./\n\n# setp 2\n# \u63d0\u4ea4\nsvn ci -m \"\u5408\u5e76\u8d2d\u4e70\u529f\u80fd\u5230\u4e3b\u5e72\"\n\n# setp 3 \uff08\u53ef\u9009\uff09\n# \u5220\u9664\u5206\u652f\nsvn delete svn://../branches/project_buy -m \"\u5220\u9664\u8d2d\u4e70\u529f\u80fd\u5230\u4e3b\u5e72\"\n</code></pre>"},{"location":"vcs/svn/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/","title":"\u5de5\u4f5c\u6d41\u7a0b","text":"<p>\u7248\u672c\u5e93\u4e00\u822c\u7684\u5e03\u5c40\u7ed3\u6784\u4e3a trunk(\u4e3b\u5e72)\u3001branches(\u5206\u652f)\u3001tags(\u6807\u7b7e)</p> <ul> <li><code>trunk</code> \u5c31\u662f\u5f00\u53d1\u7684\u4e3b\u7ebf\uff0c\u4e00\u822c\u9879\u76ee\u90fd\u662f\u5bfc\u5165\u5230\u4e3b\u7ebf\u6765\u5f00\u53d1\u7684</li> <li><code>branch</code> \u4e00\u822c\u662f trunk \u67d0\u4e2a\u7248\u672c\u7684\u62f7\u8d1d\uff0c\u5982\u679c\u4f60\u60f3\u5728\u67d0\u4e00\u6bb5\u65f6\u95f4\u5355\u72ec\u5bf9\u67d0\u4e2a\u529f\u80fd\u8fdb\u884c\u5f00\u53d1\uff0c\u800c\u4e0d\u50cf\u548c\u5176\u4ed6\u529f\u80fd\u6df7\u5728\u4e00\u8d77\uff0c\u8fd9\u65f6\u5019 branches \u662f\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u65b9\u5f0f\u3002</li> <li><code>tags</code> \u67d0\u4e2a\u7248\u672c\u7684\u8bb0\u5f55\u3002\u8fed\u4ee3\u5f00\u53d1\u65f6\uff0c\u5728\u67d0\u4e2a\u7248\u672c\u53d1\u5e03\u5e94\u7528\uff0c\u4e3a\u4e86\u505a\u4e2a\u8bb0\u5f55\uff0c\u8fd9\u65f6\u5019\u6253\u4e2a tag \u5f88\u5b9e\u7528\u3002\u53d1\u5e03\u540e\uff0c\u7ebf\u4e0a\u51fa\u73b0\u4e86\u4e00\u4e2a bug\uff0c\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a tag \u8fdb\u884c\u4fee\u590d\u518d\u53d1\u7248\u672c\u3002</li> </ul>"},{"location":"vcs/svn/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"vcs/svn/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#checkout","title":"checkout","text":"<p>\u68c0\u51fa\uff0c\u5c06\u4ee3\u7801\u514b\u9686\u5230\u672c\u5730\uff0c\u7c7b\u4f3c <code>git clone</code></p> <pre><code># \u4ee3\u7801\u68c0\u51fa\u6bd4\u8f83\u7b80\u5355\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c$project_name\u8868\u793a\u9879\u76ee\u540d\u79f0\uff1a\nsvn co svn://.../path $project_name\n# \u6709\u65f6\u60f3\u68c0\u51fa\u67d0\u4e2a\u5386\u53f2\u7248\u672c\uff0c$version\u6807\u8bc6\u7248\u672c\u53f7\uff1a\nsvn co svn://.../path@$version $project_name\n</code></pre>"},{"location":"vcs/svn/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#commit","title":"commit","text":"<p>\u63d0\u4ea4\u4ee3\u7801</p> <pre><code># \u6240\u6709\u6587\u4ef6\nsvn ci -m \"\u66f4\u65b0\u8bf4\u660e\"\n# \u53ea\u63d0\u4ea4\u67d0\u4e2a\u6587\u4ef6\uff1a\nsvn ci path_to_file -m \"\u66f4\u65b0\u8bf4\u660e\"\n</code></pre>"},{"location":"vcs/svn/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#update","title":"update","text":"<p>\u66f4\u65b0\u4ee3\u7801\uff0c\u7c7b\u4f3c <code>git pull/fetch</code></p> <pre><code>svn update\n</code></pre>"},{"location":"vcs/svn/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#changelist","title":"changelist","text":"<p>doc</p> <pre><code># \u65b0\u5efa\nsvn changelist \"name\" file1 file2..\n# \u589e\u52a0\u6587\u4ef6\nsvn changelist \"name\" newfile1 newfile2..\n# \u5254\u9664\u6587\u4ef6\nsvn changelist --remove a.txt\n# list\nsvn status\n# commit\nsvn commit --changelist=name -m \"message\"\n</code></pre>"},{"location":"vcs/svn/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u5176\u4ed6","text":"<pre><code># \u67e5\u770b\u7248\u672c\u5386\u53f2\u8bb0\u5f55, \u6309n\u8fdb\u884c\u4e0b\u7ffb\uff0c\u6309q\u9000\u51fa\nsvn log | more\n\n# \u67e5\u770b\u7248\u672c\u5386\u53f2\u8bb0\u5f55\uff0c\u5e76\u770b\u4fee\u6539\u4e86\u54ea\u4e9b\u6587\u4ef6\nsvn log -v | more\n\n# \u67e5\u770b\u6587\u4ef6\u53d8\u5316diff, \u672c\u5730\u6587\u4ef6\u548c\u7248\u672c\u5e93\u7684\u53d8\u5316\nsvn diff path_to_file | more\n\n# \u7248\u672c\u5e93\u7248\u672c\u7684\u53d8\u5316\nsvn diff -c r svn://../path_to_file | more\n</code></pre>"},{"location":"vcs/svn/%E6%A0%87%E7%AD%BE%E6%93%8D%E4%BD%9C/","title":"\u6807\u7b7e\u64cd\u4f5c","text":""},{"location":"vcs/svn/%E6%A0%87%E7%AD%BE%E6%93%8D%E4%BD%9C/#_1","title":"\u521b\u5efa","text":"<pre><code>svn copy svn://../trunk/project svn://../tags/project_tag1 -m \"\u521b\u5efa\u6807\u7b7e1\"\n</code></pre>"},{"location":"vcs/svn/%E6%A0%87%E7%AD%BE%E6%93%8D%E4%BD%9C/#_2","title":"\u5220\u9664","text":"<pre><code>svn rm svn://../tags/project_tag1 -m \"\u5220\u9664\u6807\u7b7e1\"\n</code></pre>"},{"location":"vcs/svn/%E7%89%88%E6%9C%AC%E6%93%8D%E4%BD%9C/","title":"\u7248\u672c\u64cd\u4f5c","text":""},{"location":"vcs/svn/%E7%89%88%E6%9C%AC%E6%93%8D%E4%BD%9C/#_1","title":"\u7248\u672c\u56de\u9000","text":"<pre><code># \u6ca1\u6709\u63d0\u4ea4\u7684\u4ee3\u7801\u56de\u9000\nsvn revert svn://../path_to_file\n\n# \u5df2\u63d0\u4ea4\u4ee3\u7801\u56de\u9000\nsvn merge -r r2:r1 svn://../path_to_file merge_file\n</code></pre>"}]}